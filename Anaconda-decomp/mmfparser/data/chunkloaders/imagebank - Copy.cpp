/* Generated by Cython 0.21.2 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_21_2"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__mmfparser__data__chunkloaders__imagebank
#define __PYX_HAVE_API__mmfparser__data__chunkloaders__imagebank
#include "string.h"
#include "stdio.h"
#include "math.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromUString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "mmfparser\\data\\chunkloaders\\imagebank.pyx",
  "mmfparser\\common.pxd",
  "mmfparser\\bytereader.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_9mmfparser_10bytereader_ByteReader;
struct __pyx_obj_9mmfparser_6loader_DataLoader;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_seek;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readString;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readUnicodeString;

/* "mmfparser\bytereader.pxd":33
 *     cpdef int tell(self)
 *     cpdef data(self)
 *     cpdef bint seek(self, int pos, int mode = ?)             # <<<<<<<<<<<<<<
 *     cpdef read(self, int size = ?)
 *     cpdef adjust(self, int to)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_seek {
  int __pyx_n;
  int mode;
};

/* "mmfparser\bytereader.pxd":34
 *     cpdef data(self)
 *     cpdef bint seek(self, int pos, int mode = ?)
 *     cpdef read(self, int size = ?)             # <<<<<<<<<<<<<<
 *     cpdef adjust(self, int to)
 *     cpdef size_t size(self)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read {
  int __pyx_n;
  int size;
};

/* "mmfparser\bytereader.pxd":37
 *     cpdef adjust(self, int to)
 *     cpdef size_t size(self)
 *     cpdef short readByte(self, bint asUnsigned = ?) except? -10             # <<<<<<<<<<<<<<
 *     cpdef int readShort(self, bint asUnsigned = ?) except? -10
 *     cpdef float readFloat(self) except? -10
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte {
  int __pyx_n;
  int asUnsigned;
};

/* "mmfparser\bytereader.pxd":38
 *     cpdef size_t size(self)
 *     cpdef short readByte(self, bint asUnsigned = ?) except? -10
 *     cpdef int readShort(self, bint asUnsigned = ?) except? -10             # <<<<<<<<<<<<<<
 *     cpdef float readFloat(self) except? -10
 *     cpdef double readDouble(self) except? -10
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort {
  int __pyx_n;
  int asUnsigned;
};

/* "mmfparser\bytereader.pxd":41
 *     cpdef float readFloat(self) except? -10
 *     cpdef double readDouble(self) except? -10
 *     cpdef readInt(self, bint asUnsigned = ?)             # <<<<<<<<<<<<<<
 *     cpdef bytes readString(self, size=?)
 *     cpdef unicode readUnicodeString(self, size=?)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt {
  int __pyx_n;
  int asUnsigned;
};

/* "mmfparser\bytereader.pxd":42
 *     cpdef double readDouble(self) except? -10
 *     cpdef readInt(self, bint asUnsigned = ?)
 *     cpdef bytes readString(self, size=?)             # <<<<<<<<<<<<<<
 *     cpdef unicode readUnicodeString(self, size=?)
 *     cpdef tuple readColor(self)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readString {
  int __pyx_n;
  PyObject *size;
};

/* "mmfparser\bytereader.pxd":43
 *     cpdef readInt(self, bint asUnsigned = ?)
 *     cpdef bytes readString(self, size=?)
 *     cpdef unicode readUnicodeString(self, size=?)             # <<<<<<<<<<<<<<
 *     cpdef tuple readColor(self)
 *     cpdef ByteReader readReader(self, size_t size)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readUnicodeString {
  int __pyx_n;
  PyObject *size;
};
struct __pyx_opt_args_9mmfparser_6loader_10DataLoader_readString;

/* "mmfparser\loader.pxd":31
 *     cdef bint init(self, ByteReader reader, DataLoader parent,
 *                    dict settings) except False
 *     cpdef readString(self, ByteReader reader, size=?)             # <<<<<<<<<<<<<<
 */
struct __pyx_opt_args_9mmfparser_6loader_10DataLoader_readString {
  int __pyx_n;
  PyObject *size;
};
struct __pyx_opt_args_9mmfparser_4data_12chunkloaders_9imagebank_get_padding;

/* "mmfparser\data\chunkloaders\imagebank.pyx":211
 *     return points, n
 * 
 * cdef inline int get_padding(int width, BasePoint pointClass, int bytes = 2):             # <<<<<<<<<<<<<<
 *     cdef int pad
 *     pad = bytes - ((width * pointClass.size) % bytes)
 */
struct __pyx_opt_args_9mmfparser_4data_12chunkloaders_9imagebank_get_padding {
  int __pyx_n;
  int bytes;
};

/* "mmfparser\bytereader.pxd":20
 * from libc.stdio cimport FILE
 * 
 * cdef class ByteReader:             # <<<<<<<<<<<<<<
 *     cdef unsigned char * buffer
 *     cdef unsigned int start, pos, data_size, lastPosition
 */
struct __pyx_obj_9mmfparser_10bytereader_ByteReader {
  PyObject_HEAD
  struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *__pyx_vtab;
  unsigned char *buffer;
  unsigned int start;
  unsigned int pos;
  unsigned int data_size;
  unsigned int lastPosition;
  PyObject *original;
  int shared;
  PyObject *python_fp;
};

struct __pyx_obj_9mmfparser_6loader_DataLoader {
  PyObject_HEAD
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader *__pyx_vtab;
  PyObject *settings;
  struct __pyx_obj_9mmfparser_6loader_DataLoader *parent;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":100
 *     return newImage
 * 
 * cdef class BasePoint             # <<<<<<<<<<<<<<
 * 
 * cdef class BasePoint:
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint {
  PyObject_HEAD
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_vtab;
  int size;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":108
 *         pass
 * 
 * cdef class Point(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 3
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":126
 * cdef BasePoint point_instance = Point()
 * 
 * cdef class SixteenPoint(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 2
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":154
 * cdef BasePoint sixteen_point = SixteenPoint()
 * 
 * cdef class FifteenPoint(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 2
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":183
 * cdef BasePoint fifteen_point = FifteenPoint()
 * 
 * cdef class IndexPoint(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 1
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":39
 * cdef int FIFTEENPOINT_MODE = 6  # 32768 colors
 * 
 * cdef class ImageItem             # <<<<<<<<<<<<<<
 * 
 * cdef inline object indexImage(ImageItem item, frame):
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int handle;
  int checksum;
  int references;
  short width;
  short height;
  short xHotspot;
  short yHotspot;
  short actionX;
  short actionY;
  PyObject *flags;
  PyObject *image;
  PyObject *alpha;
  int indexed;
  char graphicMode;
  PyObject *transparent;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *reader;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *rawImage;
  size_t pos;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":480
 *         return graphicModes[self.graphicMode]
 * 
 * cdef class JavaImage(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int handle
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int handle;
  int xHotspot;
  int yHotspot;
  int actionX;
  int actionY;
  int width;
  int height;
  PyObject *data;
  int flash;
};


/* "mmfparser\data\chunkloaders\imagebank.pyx":536
 *         return img.get_data()
 * 
 * cdef class ImageBank(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         dict itemDict
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *itemDict;
};



/* "mmfparser\bytereader.pxd":20
 * from libc.stdio cimport FILE
 * 
 * cdef class ByteReader:             # <<<<<<<<<<<<<<
 *     cdef unsigned char * buffer
 *     cdef unsigned int start, pos, data_size, lastPosition
 */

struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader {
  int (*tell)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  PyObject *(*data)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  int (*seek)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_seek *__pyx_optional_args);
  PyObject *(*read)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read *__pyx_optional_args);
  PyObject *(*adjust)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int, int __pyx_skip_dispatch);
  size_t (*size)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  short (*readByte)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte *__pyx_optional_args);
  int (*readShort)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort *__pyx_optional_args);
  float (*readFloat)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  double (*readDouble)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  PyObject *(*readInt)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt *__pyx_optional_args);
  PyObject *(*readString)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readString *__pyx_optional_args);
  PyObject *(*readUnicodeString)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readUnicodeString *__pyx_optional_args);
  PyObject *(*readColor)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *(*readReader)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, size_t, int __pyx_skip_dispatch);
  int (*write)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, PyObject *, int __pyx_skip_dispatch);
  int (*write_size)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, char *, size_t, int __pyx_skip_dispatch);
  int (*skipBytes)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, size_t, int __pyx_skip_dispatch);
  int (*rewind)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, size_t, int __pyx_skip_dispatch);
  int (*_read)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, void *, int);
};
static struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *__pyx_vtabptr_9mmfparser_10bytereader_ByteReader;


struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader {
  PyObject *(*read)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  PyObject *(*initialize)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch);
  int (*init)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, struct __pyx_obj_9mmfparser_6loader_DataLoader *, PyObject *);
  PyObject *(*readString)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_6loader_10DataLoader_readString *__pyx_optional_args);
};
static struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader *__pyx_vtabptr_9mmfparser_6loader_DataLoader;


/* "mmfparser\data\chunkloaders\imagebank.pyx":341
 * )
 * 
 * cdef class ImageItem(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int handle
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *(*load)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem;


/* "mmfparser\data\chunkloaders\imagebank.pyx":102
 * cdef class BasePoint
 * 
 * cdef class BasePoint:             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int size
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint {
  unsigned int (*read)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, char *, int);
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;


/* "mmfparser\data\chunkloaders\imagebank.pyx":108
 *         pass
 * 
 * cdef class Point(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 3
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_Point {
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
  PyObject *(*write)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *, PyObject *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *);
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_Point;


/* "mmfparser\data\chunkloaders\imagebank.pyx":126
 * cdef BasePoint point_instance = Point()
 * 
 * cdef class SixteenPoint(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 2
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint {
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
  PyObject *(*write)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *);
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint;


/* "mmfparser\data\chunkloaders\imagebank.pyx":154
 * cdef BasePoint sixteen_point = SixteenPoint()
 * 
 * cdef class FifteenPoint(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 2
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint {
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
  PyObject *(*write)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *);
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint;


/* "mmfparser\data\chunkloaders\imagebank.pyx":183
 * cdef BasePoint fifteen_point = FifteenPoint()
 * 
 * cdef class IndexPoint(BasePoint):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.size = 1
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint {
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_base;
  PyObject *(*write)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *, PyObject *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *);
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint;


/* "mmfparser\data\chunkloaders\imagebank.pyx":480
 *         return graphicModes[self.graphicMode]
 * 
 * cdef class JavaImage(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int handle
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage;


/* "mmfparser\data\chunkloaders\imagebank.pyx":536
 *         return img.get_data()
 * 
 * cdef class ImageBank(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         dict itemDict
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) : \
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE int __Pyx_IterFinish(void);

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb);
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb);

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

static CYTHON_INLINE PyObject* __Pyx_PyDict_Values(PyObject* d);

#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

static void* __Pyx_GetVtable(PyObject *dict);

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_short(short value);

static CYTHON_INLINE short __Pyx_PyInt_As_short(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_char(char value);

static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *);

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_char(unsigned char value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_self, CYTHON_UNUSED char *__pyx_v_data, CYTHON_UNUSED int __pyx_v_position); /* proto*/
static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_5Point_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_5Point_write(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_v_self, PyObject *__pyx_v_item, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto*/
static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_v_item, CYTHON_UNUSED struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto*/
static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_v_item, CYTHON_UNUSED struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto*/
static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_write(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_self, PyObject *__pyx_v_point, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_load(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'mmfparser.bytereader' */
static PyTypeObject *__pyx_ptype_9mmfparser_10bytereader_ByteReader = 0;

/* Module declarations from 'mmfparser.loader' */
static PyTypeObject *__pyx_ptype_9mmfparser_6loader_DataLoader = 0;

/* Module declarations from 'mmfparser.common' */
static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_6common_allocate_memory(int, char **); /*proto*/

/* Module declarations from 'mmfparser.data.chunkloaders.imagebank' */
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_Point = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank = 0;
static int __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_POINT_MODE;
static int __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_FIFTEENPOINT_MODE;
static struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance = 0;
static struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_sixteen_point = 0;
static struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_fifteen_point = 0;
static struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_index_point = 0;
static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_indexImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_joinImage(PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_getImageData(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_createDisplay(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *, PyObject *); /*proto*/
static CYTHON_INLINE int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(int, struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, struct __pyx_opt_args_9mmfparser_4data_12chunkloaders_9imagebank_get_padding *__pyx_optional_args); /*proto*/
#define __Pyx_MODULE_NAME "mmfparser.data.chunkloaders.imagebank"
int __pyx_module_is_main_mmfparser__data__chunkloaders__imagebank = 0;

/* Implementation of 'mmfparser.data.chunkloaders.imagebank' */
static PyObject *__pyx_builtin_property;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_sorted;
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_5Point___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_4load(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8createDisplay(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_frame, CYTHON_UNUSED PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10getImageData(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_frame, CYTHON_UNUSED PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_12unload(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_14getGraphicMode(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4createDisplay(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_arg, CYTHON_UNUSED PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6getImageData(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_arg, CYTHON_UNUSED PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_items(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_2initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_4read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, PyObject *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8fromHandle(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, PyObject *__pyx_v_handle); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_Point(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k__3[] = "\000\000";
static char __pyx_k_rb[] = "rb";
static char __pyx_k_ACE[] = "ACE";
static char __pyx_k_LZX[] = "LZX";
static char __pyx_k_Mac[] = "Mac";
static char __pyx_k_RLE[] = "RLE";
static char __pyx_k_all[] = "__all__";
static char __pyx_k_get[] = "get";
static char __pyx_k_new[] = "new";
static char __pyx_k_old[] = "old";
static char __pyx_k_ARGB[] = "ARGB";
static char __pyx_k_RGBA[] = "RGBA";
static char __pyx_k_RLET[] = "RLET";
static char __pyx_k_RLEW[] = "RLEW";
static char __pyx_k_copy[] = "copy";
static char __pyx_k_data[] = "data";
static char __pyx_k_java[] = "java";
static char __pyx_k_keys[] = "keys";
static char __pyx_k_load[] = "load";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_open[] = "open";
static char __pyx_k_read[] = "read";
static char __pyx_k_tell[] = "tell";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_zlib[] = "zlib";
static char __pyx_k_Alpha[] = "Alpha";
static char __pyx_k_Image[] = "Image";
static char __pyx_k_build[] = "build";
static char __pyx_k_debug[] = "debug";
static char __pyx_k_error[] = "error";
static char __pyx_k_frame[] = "frame";
static char __pyx_k_items[] = "items";
static char __pyx_k_range[] = "range";
static char __pyx_k_write[] = "write";
static char __pyx_k_handle[] = "handle";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_sorted[] = "sorted";
static char __pyx_k_struct[] = "struct";
static char __pyx_k_unload[] = "unload";
static char __pyx_k_values[] = "values";
static char __pyx_k_xrange[] = "xrange";
static char __pyx_k_BitDict[] = "BitDict";
static char __pyx_k_offsets[] = "offsets";
static char __pyx_k_palette[] = "palette";
static char __pyx_k_AGMIBank[] = "AGMIBank";
static char __pyx_k_StringIO[] = "StringIO";
static char __pyx_k_anchor_x[] = "anchor_x";
static char __pyx_k_anchor_y[] = "anchor_y";
static char __pyx_k_compress[] = "compress";
static char __pyx_k_getFlags[] = "getFlags";
static char __pyx_k_get_data[] = "get_data";
static char __pyx_k_property[] = "property";
static char __pyx_k_setFlags[] = "setFlags";
static char __pyx_k_withSize[] = "withSize";
static char __pyx_k_writeInt[] = "writeInt";
static char __pyx_k_zlibdata[] = "zlibdata";
static char __pyx_k_ImageBank[] = "ImageBank";
static char __pyx_k_ImageData[] = "ImageData";
static char __pyx_k_ImageItem[] = "ImageItem";
static char __pyx_k_JavaImage[] = "JavaImage";
static char __pyx_k_cStringIO[] = "cStringIO";
static char __pyx_k_writeByte[] = "writeByte";
static char __pyx_k_decompress[] = "decompress";
static char __pyx_k_initialize[] = "initialize";
static char __pyx_k_loadImages[] = "loadImages";
static char __pyx_k_load_image[] = "load_image";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_writeColor[] = "writeColor";
static char __pyx_k_writeShort[] = "writeShort";
static char __pyx_k_IMAGE_FLAGS[] = "IMAGE_FLAGS";
static char __pyx_k_writeReader[] = "writeReader";
static char __pyx_k_graphicModes[] = "graphicModes";
static char __pyx_k_onepointfive[] = "onepointfive";
static char __pyx_k_not_supported[] = "not supported";
static char __pyx_k_mmfparser_data[] = "mmfparser.data";
static char __pyx_k_mmfparser_image[] = "mmfparser.image";
static char __pyx_k_mmfparser_bitdict[] = "mmfparser.bitdict";
static char __pyx_k_NotImplementedError[] = "NotImplementedError";
static char __pyx_k_mmfparser_player_common[] = "mmfparser.player.common";
static char __pyx_k_mmfparser_player_sprite[] = "mmfparser.player.sprite";
static char __pyx_k_mmfparser_data_chunkloaders_apph[] = "mmfparser.data.chunkloaders.appheader";
static char __pyx_k_mmfparser_data_mfaloaders_imageb[] = "mmfparser.data.mfaloaders.imagebank";
static PyObject *__pyx_n_s_ACE;
static PyObject *__pyx_n_s_AGMIBank;
static PyObject *__pyx_n_s_ARGB;
static PyObject *__pyx_n_s_Alpha;
static PyObject *__pyx_n_s_BitDict;
static PyObject *__pyx_n_s_IMAGE_FLAGS;
static PyObject *__pyx_n_s_Image;
static PyObject *__pyx_n_s_ImageBank;
static PyObject *__pyx_n_s_ImageData;
static PyObject *__pyx_n_s_ImageItem;
static PyObject *__pyx_n_s_JavaImage;
static PyObject *__pyx_n_s_LZX;
static PyObject *__pyx_n_s_Mac;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_RGBA;
static PyObject *__pyx_n_s_RLE;
static PyObject *__pyx_n_s_RLET;
static PyObject *__pyx_n_s_RLEW;
static PyObject *__pyx_n_s_StringIO;
static PyObject *__pyx_kp_s__3;
static PyObject *__pyx_n_s_all;
static PyObject *__pyx_n_s_anchor_x;
static PyObject *__pyx_n_s_anchor_y;
static PyObject *__pyx_n_s_build;
static PyObject *__pyx_n_s_cStringIO;
static PyObject *__pyx_n_s_compress;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_s_data;
static PyObject *__pyx_n_s_debug;
static PyObject *__pyx_n_s_decompress;
static PyObject *__pyx_n_s_error;
static PyObject *__pyx_n_s_frame;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_getFlags;
static PyObject *__pyx_n_s_get_data;
static PyObject *__pyx_n_s_graphicModes;
static PyObject *__pyx_n_s_handle;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_initialize;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_java;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_load;
static PyObject *__pyx_n_s_loadImages;
static PyObject *__pyx_n_s_load_image;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mmfparser_bitdict;
static PyObject *__pyx_n_s_mmfparser_data;
static PyObject *__pyx_n_s_mmfparser_data_chunkloaders_apph;
static PyObject *__pyx_n_s_mmfparser_data_mfaloaders_imageb;
static PyObject *__pyx_n_s_mmfparser_image;
static PyObject *__pyx_n_s_mmfparser_player_common;
static PyObject *__pyx_n_s_mmfparser_player_sprite;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_kp_s_not_supported;
static PyObject *__pyx_n_s_offsets;
static PyObject *__pyx_n_s_old;
static PyObject *__pyx_n_s_onepointfive;
static PyObject *__pyx_n_s_open;
static PyObject *__pyx_n_s_palette;
static PyObject *__pyx_n_s_property;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rb;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_setFlags;
static PyObject *__pyx_n_s_sorted;
static PyObject *__pyx_n_s_struct;
static PyObject *__pyx_n_s_tell;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_unload;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_withSize;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_writeByte;
static PyObject *__pyx_n_s_writeColor;
static PyObject *__pyx_n_s_writeInt;
static PyObject *__pyx_n_s_writeReader;
static PyObject *__pyx_n_s_writeShort;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_n_s_zlib;
static PyObject *__pyx_n_s_zlibdata;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_8;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_11;
static PyObject *__pyx_int_16;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;

/* "mmfparser\data\chunkloaders\imagebank.pyx":41
 * cdef class ImageItem
 * 
 * cdef inline object indexImage(ImageItem item, frame):             # <<<<<<<<<<<<<<
 *     cdef unsigned int i
 *     cdef tuple current_value
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_indexImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_item, PyObject *__pyx_v_frame) {
  unsigned int __pyx_v_i;
  PyObject *__pyx_v_current_value = 0;
  unsigned int *__pyx_v_image;
  unsigned int *__pyx_v_new_points_array;
  char *__pyx_v_new_points;
  PyObject *__pyx_v_str_points = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  char *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  unsigned int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  unsigned int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("indexImage", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":47
 *     cdef unsigned int * new_points_array
 *     cdef char * new_points
 *     if not item.indexed:             # <<<<<<<<<<<<<<
 *         return item.image
 *     else:
 */
  __pyx_t_1 = ((!(__pyx_v_item->indexed != 0)) != 0);
  if (__pyx_t_1) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":48
 *     cdef char * new_points
 *     if not item.indexed:
 *         return item.image             # <<<<<<<<<<<<<<
 *     else:
 *         image = <unsigned int *>(<char *>item.image)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_item->image);
    __pyx_r = __pyx_v_item->image;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":50
 *         return item.image
 *     else:
 *         image = <unsigned int *>(<char *>item.image)             # <<<<<<<<<<<<<<
 *         str_points = allocate_memory(len(item.image), &new_points)
 *         new_points_array = <unsigned int *>new_points
 */
    __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_item->image); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_image = ((unsigned int *)((char *)__pyx_t_2));

    /* "mmfparser\data\chunkloaders\imagebank.pyx":51
 *     else:
 *         image = <unsigned int *>(<char *>item.image)
 *         str_points = allocate_memory(len(item.image), &new_points)             # <<<<<<<<<<<<<<
 *         new_points_array = <unsigned int *>new_points
 *         for i in range(len(item.image) / 4):
 */
    __pyx_t_3 = __pyx_v_item->image;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_f_9mmfparser_6common_allocate_memory(__pyx_t_4, (&__pyx_v_new_points)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_str_points = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":52
 *         image = <unsigned int *>(<char *>item.image)
 *         str_points = allocate_memory(len(item.image), &new_points)
 *         new_points_array = <unsigned int *>new_points             # <<<<<<<<<<<<<<
 *         for i in range(len(item.image) / 4):
 *             current_value = frame.palette.items[image[i]]
 */
    __pyx_v_new_points_array = ((unsigned int *)__pyx_v_new_points);

    /* "mmfparser\data\chunkloaders\imagebank.pyx":53
 *         str_points = allocate_memory(len(item.image), &new_points)
 *         new_points_array = <unsigned int *>new_points
 *         for i in range(len(item.image) / 4):             # <<<<<<<<<<<<<<
 *             current_value = frame.palette.items[image[i]]
 *             new_points_array[i] = (current_value[0] | current_value[1] << 8 |
 */
    __pyx_t_3 = __pyx_v_item->image;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = (__pyx_t_4 / 4);
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":54
 *         new_points_array = <unsigned int *>new_points
 *         for i in range(len(item.image) / 4):
 *             current_value = frame.palette.items[image[i]]             # <<<<<<<<<<<<<<
 *             new_points_array[i] = (current_value[0] | current_value[1] << 8 |
 *                 current_value[2] << 16)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_frame, __pyx_n_s_palette); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_items); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, (__pyx_v_image[__pyx_v_i]), unsigned int, 0, __Pyx_PyInt_From_unsigned_int, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_XDECREF_SET(__pyx_v_current_value, ((PyObject*)__pyx_t_3));
      __pyx_t_3 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":55
 *         for i in range(len(item.image) / 4):
 *             current_value = frame.palette.items[image[i]]
 *             new_points_array[i] = (current_value[0] | current_value[1] << 8 |             # <<<<<<<<<<<<<<
 *                 current_value[2] << 16)
 *         return str_points
 */
      if (unlikely(__pyx_v_current_value == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_current_value, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_3);
      if (unlikely(__pyx_v_current_value == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v_current_value, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = PyNumber_Lshift(__pyx_t_7, __pyx_int_8); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Or(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":56
 *             current_value = frame.palette.items[image[i]]
 *             new_points_array[i] = (current_value[0] | current_value[1] << 8 |
 *                 current_value[2] << 16)             # <<<<<<<<<<<<<<
 *         return str_points
 * 
 */
      if (unlikely(__pyx_v_current_value == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v_current_value, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_3 = PyNumber_Lshift(__pyx_t_8, __pyx_int_16); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":55
 *         for i in range(len(item.image) / 4):
 *             current_value = frame.palette.items[image[i]]
 *             new_points_array[i] = (current_value[0] | current_value[1] << 8 |             # <<<<<<<<<<<<<<
 *                 current_value[2] << 16)
 *         return str_points
 */
      __pyx_t_8 = PyNumber_Or(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_9 = __Pyx_PyInt_As_unsigned_int(__pyx_t_8); if (unlikely((__pyx_t_9 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      (__pyx_v_new_points_array[__pyx_v_i]) = __pyx_t_9;
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":57
 *             new_points_array[i] = (current_value[0] | current_value[1] << 8 |
 *                 current_value[2] << 16)
 *         return str_points             # <<<<<<<<<<<<<<
 * 
 * cdef inline str joinImage(bytes points, bytes alpha):
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_str_points);
    __pyx_r = __pyx_v_str_points;
    goto __pyx_L0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":41
 * cdef class ImageItem
 * 
 * cdef inline object indexImage(ImageItem item, frame):             # <<<<<<<<<<<<<<
 *     cdef unsigned int i
 *     cdef tuple current_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.indexImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_current_value);
  __Pyx_XDECREF(__pyx_v_str_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":59
 *         return str_points
 * 
 * cdef inline str joinImage(bytes points, bytes alpha):             # <<<<<<<<<<<<<<
 *     cdef char * c_array_string
 *     cdef unsigned int value
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_joinImage(PyObject *__pyx_v_points, PyObject *__pyx_v_alpha) {
  char *__pyx_v_c_array_string;
  PyObject *__pyx_v_new_points = NULL;
  unsigned int *__pyx_v_c_array;
  unsigned int *__pyx_v_points_c;
  char *__pyx_v_alpha_c;
  int __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("joinImage", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":62
 *     cdef char * c_array_string
 *     cdef unsigned int value
 *     new_points = allocate_memory(len(points), &c_array_string)             # <<<<<<<<<<<<<<
 *     cdef unsigned int * c_array = <unsigned int *>c_array_string
 *     cdef unsigned int * points_c = <unsigned int *>(<char *>points)
 */
  if (unlikely(__pyx_v_points == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = PyBytes_GET_SIZE(__pyx_v_points); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __pyx_f_9mmfparser_6common_allocate_memory(__pyx_t_1, (&__pyx_v_c_array_string)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_new_points = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":63
 *     cdef unsigned int value
 *     new_points = allocate_memory(len(points), &c_array_string)
 *     cdef unsigned int * c_array = <unsigned int *>c_array_string             # <<<<<<<<<<<<<<
 *     cdef unsigned int * points_c = <unsigned int *>(<char *>points)
 *     cdef char * alpha_c = alpha
 */
  __pyx_v_c_array = ((unsigned int *)__pyx_v_c_array_string);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":64
 *     new_points = allocate_memory(len(points), &c_array_string)
 *     cdef unsigned int * c_array = <unsigned int *>c_array_string
 *     cdef unsigned int * points_c = <unsigned int *>(<char *>points)             # <<<<<<<<<<<<<<
 *     cdef char * alpha_c = alpha
 *     cdef int i
 */
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_points); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_points_c = ((unsigned int *)((char *)__pyx_t_3));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":65
 *     cdef unsigned int * c_array = <unsigned int *>c_array_string
 *     cdef unsigned int * points_c = <unsigned int *>(<char *>points)
 *     cdef char * alpha_c = alpha             # <<<<<<<<<<<<<<
 *     cdef int i
 *     for i in range(len(points) / 4):
 */
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_alpha); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_alpha_c = __pyx_t_3;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":67
 *     cdef char * alpha_c = alpha
 *     cdef int i
 *     for i in range(len(points) / 4):             # <<<<<<<<<<<<<<
 *         c_array[i] = points_c[i] | ((<unsigned char *>alpha_c)[i] << 24)
 *     return new_points
 */
  if (unlikely(__pyx_v_points == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = PyBytes_GET_SIZE(__pyx_v_points); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = (__pyx_t_1 / 4);
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":68
 *     cdef int i
 *     for i in range(len(points) / 4):
 *         c_array[i] = points_c[i] | ((<unsigned char *>alpha_c)[i] << 24)             # <<<<<<<<<<<<<<
 *     return new_points
 * 
 */
    (__pyx_v_c_array[__pyx_v_i]) = ((__pyx_v_points_c[__pyx_v_i]) | ((((unsigned char *)__pyx_v_alpha_c)[__pyx_v_i]) << 24));
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":69
 *     for i in range(len(points) / 4):
 *         c_array[i] = points_c[i] | ((<unsigned char *>alpha_c)[i] << 24)
 *     return new_points             # <<<<<<<<<<<<<<
 * 
 * cdef inline object getImageData(ImageItem item, frame):
 */
  __Pyx_XDECREF(__pyx_r);
  if (!(likely(PyString_CheckExact(__pyx_v_new_points))||((__pyx_v_new_points) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_new_points)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_new_points);
  __pyx_r = ((PyObject*)__pyx_v_new_points);
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":59
 *         return str_points
 * 
 * cdef inline str joinImage(bytes points, bytes alpha):             # <<<<<<<<<<<<<<
 *     cdef char * c_array_string
 *     cdef unsigned int value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.joinImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_new_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":71
 *     return new_points
 * 
 * cdef inline object getImageData(ImageItem item, frame):             # <<<<<<<<<<<<<<
 *     cdef unsigned int point
 *     cdef unsigned int transparent
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_getImageData(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_item, PyObject *__pyx_v_frame) {
  unsigned int __pyx_v_transparent;
  PyObject *__pyx_v_points = 0;
  unsigned int *__pyx_v_points_c;
  int __pyx_v_i;
  unsigned int *__pyx_v_c_array;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  char *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  unsigned int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImageData", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":74
 *     cdef unsigned int point
 *     cdef unsigned int transparent
 *     cdef object points = indexImage(item, frame)             # <<<<<<<<<<<<<<
 *     cdef unsigned int * points_c = <unsigned int *>(<char *>points)
 *     cdef int i
 */
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_indexImage(__pyx_v_item, __pyx_v_frame); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_points = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":75
 *     cdef unsigned int transparent
 *     cdef object points = indexImage(item, frame)
 *     cdef unsigned int * points_c = <unsigned int *>(<char *>points)             # <<<<<<<<<<<<<<
 *     cdef int i
 *     cdef unsigned int * c_array
 */
  __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_points); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_points_c = ((unsigned int *)((char *)__pyx_t_2));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":78
 *     cdef int i
 *     cdef unsigned int * c_array
 *     if item.alpha:             # <<<<<<<<<<<<<<
 *         data = joinImage(points, item.alpha)
 *     else:
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_item->alpha); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":79
 *     cdef unsigned int * c_array
 *     if item.alpha:
 *         data = joinImage(points, item.alpha)             # <<<<<<<<<<<<<<
 *     else:
 *         transparent = (item.transparent[0] | item.transparent[1] << 8 |
 */
    if (!(likely(PyBytes_CheckExact(__pyx_v_points))||((__pyx_v_points) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_points)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!(likely(PyBytes_CheckExact(__pyx_v_item->alpha))||((__pyx_v_item->alpha) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_item->alpha)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = __pyx_v_item->alpha;
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_joinImage(((PyObject*)__pyx_v_points), ((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_data = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":81
 *         data = joinImage(points, item.alpha)
 *     else:
 *         transparent = (item.transparent[0] | item.transparent[1] << 8 |             # <<<<<<<<<<<<<<
 *             item.transparent[2] << 16)
 *         data = allocate_memory(len(points), <char**>&c_array)
 */
    if (unlikely(__pyx_v_item->transparent == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_item->transparent, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__pyx_v_item->transparent == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v_item->transparent, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Lshift(__pyx_t_1, __pyx_int_8); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Or(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":82
 *     else:
 *         transparent = (item.transparent[0] | item.transparent[1] << 8 |
 *             item.transparent[2] << 16)             # <<<<<<<<<<<<<<
 *         data = allocate_memory(len(points), <char**>&c_array)
 *         for i in range(len(points) / 4):
 */
    if (unlikely(__pyx_v_item->transparent == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v_item->transparent, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Lshift(__pyx_t_5, __pyx_int_16); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":81
 *         data = joinImage(points, item.alpha)
 *     else:
 *         transparent = (item.transparent[0] | item.transparent[1] << 8 |             # <<<<<<<<<<<<<<
 *             item.transparent[2] << 16)
 *         data = allocate_memory(len(points), <char**>&c_array)
 */
    __pyx_t_5 = PyNumber_Or(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyInt_As_unsigned_int(__pyx_t_5); if (unlikely((__pyx_t_6 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_transparent = __pyx_t_6;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":83
 *         transparent = (item.transparent[0] | item.transparent[1] << 8 |
 *             item.transparent[2] << 16)
 *         data = allocate_memory(len(points), <char**>&c_array)             # <<<<<<<<<<<<<<
 *         for i in range(len(points) / 4):
 *             if points_c[i] == transparent:
 */
    __pyx_t_7 = PyObject_Length(__pyx_v_points); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = __pyx_f_9mmfparser_6common_allocate_memory(__pyx_t_7, ((char **)(&__pyx_v_c_array))); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_v_data = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":84
 *             item.transparent[2] << 16)
 *         data = allocate_memory(len(points), <char**>&c_array)
 *         for i in range(len(points) / 4):             # <<<<<<<<<<<<<<
 *             if points_c[i] == transparent:
 *                 c_array[i] = points_c[i]
 */
    __pyx_t_7 = PyObject_Length(__pyx_v_points); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = (__pyx_t_7 / 4);
    for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
      __pyx_v_i = __pyx_t_9;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":85
 *         data = allocate_memory(len(points), <char**>&c_array)
 *         for i in range(len(points) / 4):
 *             if points_c[i] == transparent:             # <<<<<<<<<<<<<<
 *                 c_array[i] = points_c[i]
 *             else:
 */
      __pyx_t_3 = (((__pyx_v_points_c[__pyx_v_i]) == __pyx_v_transparent) != 0);
      if (__pyx_t_3) {

        /* "mmfparser\data\chunkloaders\imagebank.pyx":86
 *         for i in range(len(points) / 4):
 *             if points_c[i] == transparent:
 *                 c_array[i] = points_c[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 c_array[i] = points_c[i] | <unsigned int>(0xFF << 24)
 */
        (__pyx_v_c_array[__pyx_v_i]) = (__pyx_v_points_c[__pyx_v_i]);
        goto __pyx_L6;
      }
      /*else*/ {

        /* "mmfparser\data\chunkloaders\imagebank.pyx":88
 *                 c_array[i] = points_c[i]
 *             else:
 *                 c_array[i] = points_c[i] | <unsigned int>(0xFF << 24)             # <<<<<<<<<<<<<<
 *     return data
 * 
 */
        (__pyx_v_c_array[__pyx_v_i]) = ((__pyx_v_points_c[__pyx_v_i]) | ((unsigned int)4278190080));
      }
      __pyx_L6:;
    }
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":89
 *             else:
 *                 c_array[i] = points_c[i] | <unsigned int>(0xFF << 24)
 *     return data             # <<<<<<<<<<<<<<
 * 
 * cdef inline object createDisplay(ImageItem item, frame):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_data);
  __pyx_r = __pyx_v_data;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":71
 *     return new_points
 * 
 * cdef inline object getImageData(ImageItem item, frame):             # <<<<<<<<<<<<<<
 *     cdef unsigned int point
 *     cdef unsigned int transparent
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.getImageData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":91
 *     return data
 * 
 * cdef inline object createDisplay(ImageItem item, frame):             # <<<<<<<<<<<<<<
 *     data = getImageData(item, frame)
 *     from mmfparser.player.sprite import ImageData
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_createDisplay(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_item, PyObject *__pyx_v_frame) {
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_ImageData = NULL;
  PyObject *__pyx_v_newImage = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createDisplay", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":92
 * 
 * cdef inline object createDisplay(ImageItem item, frame):
 *     data = getImageData(item, frame)             # <<<<<<<<<<<<<<
 *     from mmfparser.player.sprite import ImageData
 *     newImage = ImageData(item.width, item.height, 'RGBA', data,
 */
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_getImageData(__pyx_v_item, __pyx_v_frame); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_data = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":93
 * cdef inline object createDisplay(ImageItem item, frame):
 *     data = getImageData(item, frame)
 *     from mmfparser.player.sprite import ImageData             # <<<<<<<<<<<<<<
 *     newImage = ImageData(item.width, item.height, 'RGBA', data,
 *         -item.width * 4, item.alpha)
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_ImageData);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_ImageData);
  __Pyx_GIVEREF(__pyx_n_s_ImageData);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_player_sprite, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ImageData); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_ImageData = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":94
 *     data = getImageData(item, frame)
 *     from mmfparser.player.sprite import ImageData
 *     newImage = ImageData(item.width, item.height, 'RGBA', data,             # <<<<<<<<<<<<<<
 *         -item.width * 4, item.alpha)
 *     newImage.anchor_x = item.xHotspot
 */
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_item->width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_From_short(__pyx_v_item->height); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":95
 *     from mmfparser.player.sprite import ImageData
 *     newImage = ImageData(item.width, item.height, 'RGBA', data,
 *         -item.width * 4, item.alpha)             # <<<<<<<<<<<<<<
 *     newImage.anchor_x = item.xHotspot
 *     newImage.anchor_y = item.height - item.yHotspot
 */
  __pyx_t_4 = __Pyx_PyInt_From_long(((-__pyx_v_item->width) * 4)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_ImageData);
  __pyx_t_5 = __pyx_v_ImageData; __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(6+__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_6) {
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
  }
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_RGBA);
  PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_n_s_RGBA);
  __Pyx_GIVEREF(__pyx_n_s_RGBA);
  __Pyx_INCREF(__pyx_v_data);
  PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_7, __pyx_v_data);
  __Pyx_GIVEREF(__pyx_v_data);
  PyTuple_SET_ITEM(__pyx_t_8, 4+__pyx_t_7, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_item->alpha);
  PyTuple_SET_ITEM(__pyx_t_8, 5+__pyx_t_7, __pyx_v_item->alpha);
  __Pyx_GIVEREF(__pyx_v_item->alpha);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_newImage = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":96
 *     newImage = ImageData(item.width, item.height, 'RGBA', data,
 *         -item.width * 4, item.alpha)
 *     newImage.anchor_x = item.xHotspot             # <<<<<<<<<<<<<<
 *     newImage.anchor_y = item.height - item.yHotspot
 *     return newImage
 */
  __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_v_item->xHotspot); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_newImage, __pyx_n_s_anchor_x, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":97
 *         -item.width * 4, item.alpha)
 *     newImage.anchor_x = item.xHotspot
 *     newImage.anchor_y = item.height - item.yHotspot             # <<<<<<<<<<<<<<
 *     return newImage
 * 
 */
  __pyx_t_2 = __Pyx_PyInt_From_int((__pyx_v_item->height - __pyx_v_item->yHotspot)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_newImage, __pyx_n_s_anchor_y, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":98
 *     newImage.anchor_x = item.xHotspot
 *     newImage.anchor_y = item.height - item.yHotspot
 *     return newImage             # <<<<<<<<<<<<<<
 * 
 * cdef class BasePoint
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_newImage);
  __pyx_r = __pyx_v_newImage;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":91
 *     return data
 * 
 * cdef inline object createDisplay(ImageItem item, frame):             # <<<<<<<<<<<<<<
 *     data = getImageData(item, frame)
 *     from mmfparser.player.sprite import ImageData
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.createDisplay", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_ImageData);
  __Pyx_XDECREF(__pyx_v_newImage);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":105
 *     cdef public:
 *         int size
 *     cdef unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_self, CYTHON_UNUSED char *__pyx_v_data, CYTHON_UNUSED int __pyx_v_position) {
  unsigned int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":104
 * cdef class BasePoint:
 *     cdef public:
 *         int size             # <<<<<<<<<<<<<<
 *     cdef unsigned int read(self, char * data, int position):
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.BasePoint.size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->size = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.BasePoint.size.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":109
 * 
 * cdef class Point(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 3
 * 
 */

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_5Point_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_5Point_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_5Point___cinit__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_5Point___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":110
 * cdef class Point(BasePoint):
 *     def __cinit__(self):
 *         self.size = 3             # <<<<<<<<<<<<<<
 * 
 *     cdef inline unsigned int read(self, char * data, int position):
 */
  __pyx_v_self->__pyx_base.size = 3;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":109
 * 
 * cdef class Point(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 3
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":112
 *         self.size = 3
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         cdef unsigned char r, g, b
 *         b = <unsigned char>data[position]
 */

static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_5Point_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position) {
  unsigned char __pyx_v_r;
  unsigned char __pyx_v_g;
  unsigned char __pyx_v_b;
  unsigned int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":114
 *     cdef inline unsigned int read(self, char * data, int position):
 *         cdef unsigned char r, g, b
 *         b = <unsigned char>data[position]             # <<<<<<<<<<<<<<
 *         g = <unsigned char>data[position+1]
 *         r = <unsigned char>data[position+2]
 */
  __pyx_v_b = ((unsigned char)(__pyx_v_data[__pyx_v_position]));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":115
 *         cdef unsigned char r, g, b
 *         b = <unsigned char>data[position]
 *         g = <unsigned char>data[position+1]             # <<<<<<<<<<<<<<
 *         r = <unsigned char>data[position+2]
 *         return r | g << 8 | b << 16
 */
  __pyx_v_g = ((unsigned char)(__pyx_v_data[(__pyx_v_position + 1)]));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":116
 *         b = <unsigned char>data[position]
 *         g = <unsigned char>data[position+1]
 *         r = <unsigned char>data[position+2]             # <<<<<<<<<<<<<<
 *         return r | g << 8 | b << 16
 * 
 */
  __pyx_v_r = ((unsigned char)(__pyx_v_data[(__pyx_v_position + 2)]));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":117
 *         g = <unsigned char>data[position+1]
 *         r = <unsigned char>data[position+2]
 *         return r | g << 8 | b << 16             # <<<<<<<<<<<<<<
 * 
 *     cdef write(self, item, ByteReader reader):
 */
  __pyx_r = ((__pyx_v_r | (__pyx_v_g << 8)) | (__pyx_v_b << 16));
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":112
 *         self.size = 3
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         cdef unsigned char r, g, b
 *         b = <unsigned char>data[position]
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":119
 *         return r | g << 8 | b << 16
 * 
 *     cdef write(self, item, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeByte(item[2], True)
 *         reader.writeByte(item[1], True)
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_5Point_write(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *__pyx_v_self, PyObject *__pyx_v_item, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":120
 * 
 *     cdef write(self, item, ByteReader reader):
 *         reader.writeByte(item[2], True)             # <<<<<<<<<<<<<<
 *         reader.writeByte(item[1], True)
 *         reader.writeByte(item[0], True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_item, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
  }
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_INCREF(Py_True);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, Py_True);
  __Pyx_GIVEREF(Py_True);
  __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":121
 *     cdef write(self, item, ByteReader reader):
 *         reader.writeByte(item[2], True)
 *         reader.writeByte(item[1], True)             # <<<<<<<<<<<<<<
 *         reader.writeByte(item[0], True)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_item, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_4 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3) {
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
  }
  PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_5, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_6);
  __Pyx_INCREF(Py_True);
  PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_5, Py_True);
  __Pyx_GIVEREF(Py_True);
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":122
 *         reader.writeByte(item[2], True)
 *         reader.writeByte(item[1], True)
 *         reader.writeByte(item[0], True)             # <<<<<<<<<<<<<<
 * 
 * cdef BasePoint point_instance = Point()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_item, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (__pyx_t_6) {
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
  }
  PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_INCREF(Py_True);
  PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, Py_True);
  __Pyx_GIVEREF(Py_True);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":119
 *         return r | g << 8 | b << 16
 * 
 *     cdef write(self, item, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeByte(item[2], True)
 *         reader.writeByte(item[1], True)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.Point.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":127
 * 
 * cdef class SixteenPoint(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 2
 * 
 */

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint___cinit__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":128
 * cdef class SixteenPoint(BasePoint):
 *     def __cinit__(self):
 *         self.size = 2             # <<<<<<<<<<<<<<
 * 
 *     cdef inline unsigned int read(self, char * data, int position):
 */
  __pyx_v_self->__pyx_base.size = 2;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":127
 * 
 * cdef class SixteenPoint(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 2
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":130
 *         self.size = 2
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         cdef unsigned short newShort
 *         newShort = (<unsigned char>data[position] |
 */

static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position) {
  unsigned short __pyx_v_newShort;
  unsigned char __pyx_v_r;
  unsigned char __pyx_v_g;
  unsigned char __pyx_v_b;
  unsigned int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":132
 *     cdef inline unsigned int read(self, char * data, int position):
 *         cdef unsigned short newShort
 *         newShort = (<unsigned char>data[position] |             # <<<<<<<<<<<<<<
 *             <unsigned char>data[position + 1] << 8)
 *         cdef unsigned char r, g, b
 */
  __pyx_v_newShort = (((unsigned char)(__pyx_v_data[__pyx_v_position])) | (((unsigned char)(__pyx_v_data[(__pyx_v_position + 1)])) << 8));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":135
 *             <unsigned char>data[position + 1] << 8)
 *         cdef unsigned char r, g, b
 *         r = (newShort & 63488) >> 11             # <<<<<<<<<<<<<<
 *         g = (newShort & 2016) >> 5
 *         b = (newShort & 31)
 */
  __pyx_v_r = ((__pyx_v_newShort & 63488) >> 11);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":136
 *         cdef unsigned char r, g, b
 *         r = (newShort & 63488) >> 11
 *         g = (newShort & 2016) >> 5             # <<<<<<<<<<<<<<
 *         b = (newShort & 31)
 *         r = r << 3
 */
  __pyx_v_g = ((__pyx_v_newShort & 2016) >> 5);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":137
 *         r = (newShort & 63488) >> 11
 *         g = (newShort & 2016) >> 5
 *         b = (newShort & 31)             # <<<<<<<<<<<<<<
 *         r = r << 3
 *         g = g << 2
 */
  __pyx_v_b = (__pyx_v_newShort & 31);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":138
 *         g = (newShort & 2016) >> 5
 *         b = (newShort & 31)
 *         r = r << 3             # <<<<<<<<<<<<<<
 *         g = g << 2
 *         b = b << 3
 */
  __pyx_v_r = (__pyx_v_r << 3);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":139
 *         b = (newShort & 31)
 *         r = r << 3
 *         g = g << 2             # <<<<<<<<<<<<<<
 *         b = b << 3
 *         return r | g << 8 | b << 16
 */
  __pyx_v_g = (__pyx_v_g << 2);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":140
 *         r = r << 3
 *         g = g << 2
 *         b = b << 3             # <<<<<<<<<<<<<<
 *         return r | g << 8 | b << 16
 * 
 */
  __pyx_v_b = (__pyx_v_b << 3);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":141
 *         g = g << 2
 *         b = b << 3
 *         return r | g << 8 | b << 16             # <<<<<<<<<<<<<<
 * 
 *     cdef write(item, ByteReader reader):
 */
  __pyx_r = ((__pyx_v_r | (__pyx_v_g << 8)) | (__pyx_v_b << 16));
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":130
 *         self.size = 2
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         cdef unsigned short newShort
 *         newShort = (<unsigned char>data[position] |
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":143
 *         return r | g << 8 | b << 16
 * 
 *     cdef write(item, ByteReader reader):             # <<<<<<<<<<<<<<
 *         r, g, b = item
 *         r = r >> 3
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *__pyx_v_item, CYTHON_UNUSED struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_r = NULL;
  PyObject *__pyx_v_g = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":144
 * 
 *     cdef write(item, ByteReader reader):
 *         r, g, b = item             # <<<<<<<<<<<<<<
 *         r = r >> 3
 *         g = g >> 2
 */
  if ((likely(PyTuple_CheckExact(((PyObject *)__pyx_v_item)))) || (PyList_CheckExact(((PyObject *)__pyx_v_item)))) {
    PyObject* sequence = ((PyObject *)__pyx_v_item);
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_4 = PyObject_GetIter(((PyObject *)__pyx_v_item)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 2; __pyx_t_3 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_5(__pyx_t_4), 3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = NULL;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_r = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_g = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_b = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":145
 *     cdef write(item, ByteReader reader):
 *         r, g, b = item
 *         r = r >> 3             # <<<<<<<<<<<<<<
 *         g = g >> 2
 *         b = b >> 3
 */
  __pyx_t_3 = PyNumber_Rshift(__pyx_v_r, __pyx_int_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_r, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":146
 *         r, g, b = item
 *         r = r >> 3
 *         g = g >> 2             # <<<<<<<<<<<<<<
 *         b = b >> 3
 *         r = r << 11
 */
  __pyx_t_3 = PyNumber_Rshift(__pyx_v_g, __pyx_int_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_g, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":147
 *         r = r >> 3
 *         g = g >> 2
 *         b = b >> 3             # <<<<<<<<<<<<<<
 *         r = r << 11
 *         g = g << 5
 */
  __pyx_t_3 = PyNumber_Rshift(__pyx_v_b, __pyx_int_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_b, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":148
 *         g = g >> 2
 *         b = b >> 3
 *         r = r << 11             # <<<<<<<<<<<<<<
 *         g = g << 5
 *         return r | g | b
 */
  __pyx_t_3 = PyNumber_Lshift(__pyx_v_r, __pyx_int_11); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_r, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":149
 *         b = b >> 3
 *         r = r << 11
 *         g = g << 5             # <<<<<<<<<<<<<<
 *         return r | g | b
 * 
 */
  __pyx_t_3 = PyNumber_Lshift(__pyx_v_g, __pyx_int_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_g, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":150
 *         r = r << 11
 *         g = g << 5
 *         return r | g | b             # <<<<<<<<<<<<<<
 * 
 * cdef BasePoint sixteen_point = SixteenPoint()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyNumber_Or(__pyx_v_r, __pyx_v_g); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Or(__pyx_t_3, __pyx_v_b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":143
 *         return r | g << 8 | b << 16
 * 
 *     cdef write(item, ByteReader reader):             # <<<<<<<<<<<<<<
 *         r, g, b = item
 *         r = r >> 3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.SixteenPoint.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XDECREF(__pyx_v_g);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":155
 * 
 * cdef class FifteenPoint(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 2
 * 
 */

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint___cinit__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":156
 * cdef class FifteenPoint(BasePoint):
 *     def __cinit__(self):
 *         self.size = 2             # <<<<<<<<<<<<<<
 * 
 *     cdef inline unsigned int read(self, char * data, int position):
 */
  __pyx_v_self->__pyx_base.size = 2;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":155
 * 
 * cdef class FifteenPoint(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 2
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":158
 *         self.size = 2
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         cdef unsigned char r, g, b
 *         cdef unsigned short newShort
 */

static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position) {
  unsigned char __pyx_v_r;
  unsigned char __pyx_v_g;
  unsigned char __pyx_v_b;
  unsigned short __pyx_v_newShort;
  unsigned int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":161
 *         cdef unsigned char r, g, b
 *         cdef unsigned short newShort
 *         newShort = (<unsigned char>data[position] |             # <<<<<<<<<<<<<<
 *             <unsigned char>data[position + 1] << 8)
 *         r = (newShort & 31744) >> 10
 */
  __pyx_v_newShort = (((unsigned char)(__pyx_v_data[__pyx_v_position])) | (((unsigned char)(__pyx_v_data[(__pyx_v_position + 1)])) << 8));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":163
 *         newShort = (<unsigned char>data[position] |
 *             <unsigned char>data[position + 1] << 8)
 *         r = (newShort & 31744) >> 10             # <<<<<<<<<<<<<<
 *         g = (newShort & 992) >> 5
 *         b = (newShort & 31)
 */
  __pyx_v_r = ((__pyx_v_newShort & 31744) >> 10);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":164
 *             <unsigned char>data[position + 1] << 8)
 *         r = (newShort & 31744) >> 10
 *         g = (newShort & 992) >> 5             # <<<<<<<<<<<<<<
 *         b = (newShort & 31)
 *         r = r << 3
 */
  __pyx_v_g = ((__pyx_v_newShort & 992) >> 5);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":165
 *         r = (newShort & 31744) >> 10
 *         g = (newShort & 992) >> 5
 *         b = (newShort & 31)             # <<<<<<<<<<<<<<
 *         r = r << 3
 *         g = g << 3
 */
  __pyx_v_b = (__pyx_v_newShort & 31);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":166
 *         g = (newShort & 992) >> 5
 *         b = (newShort & 31)
 *         r = r << 3             # <<<<<<<<<<<<<<
 *         g = g << 3
 *         b = b << 3
 */
  __pyx_v_r = (__pyx_v_r << 3);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":167
 *         b = (newShort & 31)
 *         r = r << 3
 *         g = g << 3             # <<<<<<<<<<<<<<
 *         b = b << 3
 *         return r | g << 8 | b << 16
 */
  __pyx_v_g = (__pyx_v_g << 3);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":168
 *         r = r << 3
 *         g = g << 3
 *         b = b << 3             # <<<<<<<<<<<<<<
 *         return r | g << 8 | b << 16
 * 
 */
  __pyx_v_b = (__pyx_v_b << 3);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":169
 *         g = g << 3
 *         b = b << 3
 *         return r | g << 8 | b << 16             # <<<<<<<<<<<<<<
 * 
 *     cdef write(item, ByteReader reader):
 */
  __pyx_r = ((__pyx_v_r | (__pyx_v_g << 8)) | (__pyx_v_b << 16));
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":158
 *         self.size = 2
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         cdef unsigned char r, g, b
 *         cdef unsigned short newShort
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":171
 *         return r | g << 8 | b << 16
 * 
 *     cdef write(item, ByteReader reader):             # <<<<<<<<<<<<<<
 *         r, g, b = item
 *         r = r >> 3
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *__pyx_v_item, CYTHON_UNUSED struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_r = NULL;
  PyObject *__pyx_v_g = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":172
 * 
 *     cdef write(item, ByteReader reader):
 *         r, g, b = item             # <<<<<<<<<<<<<<
 *         r = r >> 3
 *         g = g >> 3
 */
  if ((likely(PyTuple_CheckExact(((PyObject *)__pyx_v_item)))) || (PyList_CheckExact(((PyObject *)__pyx_v_item)))) {
    PyObject* sequence = ((PyObject *)__pyx_v_item);
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_4 = PyObject_GetIter(((PyObject *)__pyx_v_item)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 2; __pyx_t_3 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_5(__pyx_t_4), 3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = NULL;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_r = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_g = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_b = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":173
 *     cdef write(item, ByteReader reader):
 *         r, g, b = item
 *         r = r >> 3             # <<<<<<<<<<<<<<
 *         g = g >> 3
 *         b = b >> 3
 */
  __pyx_t_3 = PyNumber_Rshift(__pyx_v_r, __pyx_int_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_r, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":174
 *         r, g, b = item
 *         r = r >> 3
 *         g = g >> 3             # <<<<<<<<<<<<<<
 *         b = b >> 3
 *         r = r << 10
 */
  __pyx_t_3 = PyNumber_Rshift(__pyx_v_g, __pyx_int_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_g, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":175
 *         r = r >> 3
 *         g = g >> 3
 *         b = b >> 3             # <<<<<<<<<<<<<<
 *         r = r << 10
 *         g = g << 5
 */
  __pyx_t_3 = PyNumber_Rshift(__pyx_v_b, __pyx_int_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_b, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":176
 *         g = g >> 3
 *         b = b >> 3
 *         r = r << 10             # <<<<<<<<<<<<<<
 *         g = g << 5
 * 
 */
  __pyx_t_3 = PyNumber_Lshift(__pyx_v_r, __pyx_int_10); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_r, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":177
 *         b = b >> 3
 *         r = r << 10
 *         g = g << 5             # <<<<<<<<<<<<<<
 * 
 *         return r | g | b
 */
  __pyx_t_3 = PyNumber_Lshift(__pyx_v_g, __pyx_int_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF_SET(__pyx_v_g, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":179
 *         g = g << 5
 * 
 *         return r | g | b             # <<<<<<<<<<<<<<
 * 
 * cdef BasePoint fifteen_point = FifteenPoint()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyNumber_Or(__pyx_v_r, __pyx_v_g); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Or(__pyx_t_3, __pyx_v_b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":171
 *         return r | g << 8 | b << 16
 * 
 *     cdef write(item, ByteReader reader):             # <<<<<<<<<<<<<<
 *         r, g, b = item
 *         r = r >> 3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.FifteenPoint.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XDECREF(__pyx_v_g);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":184
 * 
 * cdef class IndexPoint(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 1
 * 
 */

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint___cinit__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint___cinit__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":185
 * cdef class IndexPoint(BasePoint):
 *     def __cinit__(self):
 *         self.size = 1             # <<<<<<<<<<<<<<
 * 
 *     cdef inline unsigned int read(self, char * data, int position):
 */
  __pyx_v_self->__pyx_base.size = 1;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":184
 * 
 * cdef class IndexPoint(BasePoint):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.size = 1
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":187
 *         self.size = 1
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         return <unsigned char>data[position]
 * 
 */

static unsigned int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_read(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_self, char *__pyx_v_data, int __pyx_v_position) {
  unsigned int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":188
 * 
 *     cdef inline unsigned int read(self, char * data, int position):
 *         return <unsigned char>data[position]             # <<<<<<<<<<<<<<
 * 
 *     cdef write(self, point, ByteReader reader):
 */
  __pyx_r = ((unsigned char)(__pyx_v_data[__pyx_v_position]));
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":187
 *         self.size = 1
 * 
 *     cdef inline unsigned int read(self, char * data, int position):             # <<<<<<<<<<<<<<
 *         return <unsigned char>data[position]
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":190
 *         return <unsigned char>data[position]
 * 
 *     cdef write(self, point, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeByte(point, True)
 * 
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_write(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *__pyx_v_self, PyObject *__pyx_v_point, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":191
 * 
 *     cdef write(self, point, ByteReader reader):
 *         reader.writeByte(point, True)             # <<<<<<<<<<<<<<
 * 
 * cdef IndexPoint index_point = IndexPoint()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_point);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_point);
  __Pyx_GIVEREF(__pyx_v_point);
  __Pyx_INCREF(Py_True);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, Py_True);
  __Pyx_GIVEREF(Py_True);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":190
 *         return <unsigned char>data[position]
 * 
 *     cdef write(self, point, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeByte(point, True)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.IndexPoint.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":195
 * cdef IndexPoint index_point = IndexPoint()
 * 
 * cdef inline tuple read_rgb(char * data, int width, int height, BasePoint pointClass):             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     points = allocate_memory(width * height * 4, &buf)
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_read_rgb(char *__pyx_v_data, int __pyx_v_width, int __pyx_v_height, struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_pointClass) {
  char *__pyx_v_buf;
  PyObject *__pyx_v_points = NULL;
  unsigned int *__pyx_v_c_array;
  CYTHON_UNUSED int __pyx_v_x;
  CYTHON_UNUSED int __pyx_v_y;
  int __pyx_v_n;
  int __pyx_v_i;
  int __pyx_v_pad;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read_rgb", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":197
 * cdef inline tuple read_rgb(char * data, int width, int height, BasePoint pointClass):
 *     cdef char * buf
 *     points = allocate_memory(width * height * 4, &buf)             # <<<<<<<<<<<<<<
 *     cdef unsigned int * c_array = <unsigned int *>buf
 *     cdef int x, y
 */
  __pyx_t_1 = __pyx_f_9mmfparser_6common_allocate_memory(((__pyx_v_width * __pyx_v_height) * 4), (&__pyx_v_buf)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_points = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":198
 *     cdef char * buf
 *     points = allocate_memory(width * height * 4, &buf)
 *     cdef unsigned int * c_array = <unsigned int *>buf             # <<<<<<<<<<<<<<
 *     cdef int x, y
 *     cdef int n = 0
 */
  __pyx_v_c_array = ((unsigned int *)__pyx_v_buf);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":200
 *     cdef unsigned int * c_array = <unsigned int *>buf
 *     cdef int x, y
 *     cdef int n = 0             # <<<<<<<<<<<<<<
 *     cdef int i = 0
 *     cdef int pad = get_padding(width, pointClass)
 */
  __pyx_v_n = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":201
 *     cdef int x, y
 *     cdef int n = 0
 *     cdef int i = 0             # <<<<<<<<<<<<<<
 *     cdef int pad = get_padding(width, pointClass)
 *     for y in range(height):
 */
  __pyx_v_i = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":202
 *     cdef int n = 0
 *     cdef int i = 0
 *     cdef int pad = get_padding(width, pointClass)             # <<<<<<<<<<<<<<
 *     for y in range(height):
 *         for x in range(width):
 */
  __pyx_v_pad = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(__pyx_v_width, __pyx_v_pointClass, NULL);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":203
 *     cdef int i = 0
 *     cdef int pad = get_padding(width, pointClass)
 *     for y in range(height):             # <<<<<<<<<<<<<<
 *         for x in range(width):
 *             c_array[i] = pointClass.read(data, n)
 */
  __pyx_t_2 = __pyx_v_height;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_y = __pyx_t_3;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":204
 *     cdef int pad = get_padding(width, pointClass)
 *     for y in range(height):
 *         for x in range(width):             # <<<<<<<<<<<<<<
 *             c_array[i] = pointClass.read(data, n)
 *             n += pointClass.size
 */
    __pyx_t_4 = __pyx_v_width;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_x = __pyx_t_5;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":205
 *     for y in range(height):
 *         for x in range(width):
 *             c_array[i] = pointClass.read(data, n)             # <<<<<<<<<<<<<<
 *             n += pointClass.size
 *             i += 1
 */
      (__pyx_v_c_array[__pyx_v_i]) = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_v_pointClass->__pyx_vtab)->read(__pyx_v_pointClass, __pyx_v_data, __pyx_v_n);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":206
 *         for x in range(width):
 *             c_array[i] = pointClass.read(data, n)
 *             n += pointClass.size             # <<<<<<<<<<<<<<
 *             i += 1
 *         n += pad * pointClass.size
 */
      __pyx_v_n = (__pyx_v_n + __pyx_v_pointClass->size);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":207
 *             c_array[i] = pointClass.read(data, n)
 *             n += pointClass.size
 *             i += 1             # <<<<<<<<<<<<<<
 *         n += pad * pointClass.size
 *     return points, n
 */
      __pyx_v_i = (__pyx_v_i + 1);
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":208
 *             n += pointClass.size
 *             i += 1
 *         n += pad * pointClass.size             # <<<<<<<<<<<<<<
 *     return points, n
 * 
 */
    __pyx_v_n = (__pyx_v_n + (__pyx_v_pad * __pyx_v_pointClass->size));
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":209
 *             i += 1
 *         n += pad * pointClass.size
 *     return points, n             # <<<<<<<<<<<<<<
 * 
 * cdef inline int get_padding(int width, BasePoint pointClass, int bytes = 2):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_v_points);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_points);
  __Pyx_GIVEREF(__pyx_v_points);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":195
 * cdef IndexPoint index_point = IndexPoint()
 * 
 * cdef inline tuple read_rgb(char * data, int width, int height, BasePoint pointClass):             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     points = allocate_memory(width * height * 4, &buf)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.read_rgb", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":211
 *     return points, n
 * 
 * cdef inline int get_padding(int width, BasePoint pointClass, int bytes = 2):             # <<<<<<<<<<<<<<
 *     cdef int pad
 *     pad = bytes - ((width * pointClass.size) % bytes)
 */

static CYTHON_INLINE int __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(int __pyx_v_width, struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_pointClass, struct __pyx_opt_args_9mmfparser_4data_12chunkloaders_9imagebank_get_padding *__pyx_optional_args) {
  int __pyx_v_bytes = ((int)2);
  int __pyx_v_pad;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_padding", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_bytes = __pyx_optional_args->bytes;
    }
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":213
 * cdef inline int get_padding(int width, BasePoint pointClass, int bytes = 2):
 *     cdef int pad
 *     pad = bytes - ((width * pointClass.size) % bytes)             # <<<<<<<<<<<<<<
 *     if pad == bytes:
 *         pad = 0
 */
  __pyx_v_pad = (__pyx_v_bytes - ((__pyx_v_width * __pyx_v_pointClass->size) % __pyx_v_bytes));

  /* "mmfparser\data\chunkloaders\imagebank.pyx":214
 *     cdef int pad
 *     pad = bytes - ((width * pointClass.size) % bytes)
 *     if pad == bytes:             # <<<<<<<<<<<<<<
 *         pad = 0
 *     return <int>ceil(pad / <float>pointClass.size)
 */
  __pyx_t_1 = ((__pyx_v_pad == __pyx_v_bytes) != 0);
  if (__pyx_t_1) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":215
 *     pad = bytes - ((width * pointClass.size) % bytes)
 *     if pad == bytes:
 *         pad = 0             # <<<<<<<<<<<<<<
 *     return <int>ceil(pad / <float>pointClass.size)
 * 
 */
    __pyx_v_pad = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":216
 *     if pad == bytes:
 *         pad = 0
 *     return <int>ceil(pad / <float>pointClass.size)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple read_rle(char * data, int width, int height, BasePoint pointClass):
 */
  __pyx_r = ((int)ceil((__pyx_v_pad / ((float)__pyx_v_pointClass->size))));
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":211
 *     return points, n
 * 
 * cdef inline int get_padding(int width, BasePoint pointClass, int bytes = 2):             # <<<<<<<<<<<<<<
 *     cdef int pad
 *     pad = bytes - ((width * pointClass.size) % bytes)
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":218
 *     return <int>ceil(pad / <float>pointClass.size)
 * 
 * cdef inline tuple read_rle(char * data, int width, int height, BasePoint pointClass):             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     cdef int pad = get_padding(width, pointClass)
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_read_rle(char *__pyx_v_data, int __pyx_v_width, int __pyx_v_height, struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *__pyx_v_pointClass) {
  char *__pyx_v_buf;
  int __pyx_v_pad;
  PyObject *__pyx_v_points = 0;
  unsigned int *__pyx_v_c_array;
  int __pyx_v_currentPosition;
  int __pyx_v_i;
  int __pyx_v_pos;
  CYTHON_UNUSED int __pyx_v_n;
  unsigned char __pyx_v_command;
  unsigned int __pyx_v_newPoint;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  unsigned char __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read_rle", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":220
 * cdef inline tuple read_rle(char * data, int width, int height, BasePoint pointClass):
 *     cdef char * buf
 *     cdef int pad = get_padding(width, pointClass)             # <<<<<<<<<<<<<<
 *     cdef bytes points = allocate_memory(width * height * 4, &buf)
 *     cdef unsigned int * c_array = <unsigned int *>buf
 */
  __pyx_v_pad = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(__pyx_v_width, __pyx_v_pointClass, NULL);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":221
 *     cdef char * buf
 *     cdef int pad = get_padding(width, pointClass)
 *     cdef bytes points = allocate_memory(width * height * 4, &buf)             # <<<<<<<<<<<<<<
 *     cdef unsigned int * c_array = <unsigned int *>buf
 *     cdef int currentPosition = 0
 */
  __pyx_t_1 = __pyx_f_9mmfparser_6common_allocate_memory(((__pyx_v_width * __pyx_v_height) * 4), (&__pyx_v_buf)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_points = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":222
 *     cdef int pad = get_padding(width, pointClass)
 *     cdef bytes points = allocate_memory(width * height * 4, &buf)
 *     cdef unsigned int * c_array = <unsigned int *>buf             # <<<<<<<<<<<<<<
 *     cdef int currentPosition = 0
 *     cdef int i = 0
 */
  __pyx_v_c_array = ((unsigned int *)__pyx_v_buf);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":223
 *     cdef bytes points = allocate_memory(width * height * 4, &buf)
 *     cdef unsigned int * c_array = <unsigned int *>buf
 *     cdef int currentPosition = 0             # <<<<<<<<<<<<<<
 *     cdef int i = 0
 *     cdef int pos = 0
 */
  __pyx_v_currentPosition = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":224
 *     cdef unsigned int * c_array = <unsigned int *>buf
 *     cdef int currentPosition = 0
 *     cdef int i = 0             # <<<<<<<<<<<<<<
 *     cdef int pos = 0
 *     cdef int n
 */
  __pyx_v_i = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":225
 *     cdef int currentPosition = 0
 *     cdef int i = 0
 *     cdef int pos = 0             # <<<<<<<<<<<<<<
 *     cdef int n
 *     cdef unsigned char command
 */
  __pyx_v_pos = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":229
 *     cdef unsigned char command
 *     cdef unsigned int newPoint
 *     while 1:             # <<<<<<<<<<<<<<
 *         command = <unsigned char>data[currentPosition]
 *         currentPosition += 1
 */
  while (1) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":230
 *     cdef unsigned int newPoint
 *     while 1:
 *         command = <unsigned char>data[currentPosition]             # <<<<<<<<<<<<<<
 *         currentPosition += 1
 * 
 */
    __pyx_v_command = ((unsigned char)(__pyx_v_data[__pyx_v_currentPosition]));

    /* "mmfparser\data\chunkloaders\imagebank.pyx":231
 *     while 1:
 *         command = <unsigned char>data[currentPosition]
 *         currentPosition += 1             # <<<<<<<<<<<<<<
 * 
 *         if command == 0:
 */
    __pyx_v_currentPosition = (__pyx_v_currentPosition + 1);

    /* "mmfparser\data\chunkloaders\imagebank.pyx":233
 *         currentPosition += 1
 * 
 *         if command == 0:             # <<<<<<<<<<<<<<
 *             break
 * 
 */
    __pyx_t_2 = ((__pyx_v_command == 0) != 0);
    if (__pyx_t_2) {

      /* "mmfparser\data\chunkloaders\imagebank.pyx":234
 * 
 *         if command == 0:
 *             break             # <<<<<<<<<<<<<<
 * 
 *         if command > 128:
 */
      goto __pyx_L4_break;
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":236
 *             break
 * 
 *         if command > 128:             # <<<<<<<<<<<<<<
 *             command -= 128
 *             for n in range(command):
 */
    __pyx_t_2 = ((__pyx_v_command > 128) != 0);
    if (__pyx_t_2) {

      /* "mmfparser\data\chunkloaders\imagebank.pyx":237
 * 
 *         if command > 128:
 *             command -= 128             # <<<<<<<<<<<<<<
 *             for n in range(command):
 *                 if pos % (width + pad) < width:
 */
      __pyx_v_command = (__pyx_v_command - 128);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":238
 *         if command > 128:
 *             command -= 128
 *             for n in range(command):             # <<<<<<<<<<<<<<
 *                 if pos % (width + pad) < width:
 *                     c_array[i] = pointClass.read(data, currentPosition)
 */
      __pyx_t_3 = __pyx_v_command;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_n = __pyx_t_4;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":239
 *             command -= 128
 *             for n in range(command):
 *                 if pos % (width + pad) < width:             # <<<<<<<<<<<<<<
 *                     c_array[i] = pointClass.read(data, currentPosition)
 *                     i += 1
 */
        __pyx_t_2 = (((__pyx_v_pos % (__pyx_v_width + __pyx_v_pad)) < __pyx_v_width) != 0);
        if (__pyx_t_2) {

          /* "mmfparser\data\chunkloaders\imagebank.pyx":240
 *             for n in range(command):
 *                 if pos % (width + pad) < width:
 *                     c_array[i] = pointClass.read(data, currentPosition)             # <<<<<<<<<<<<<<
 *                     i += 1
 *                 pos += 1
 */
          (__pyx_v_c_array[__pyx_v_i]) = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_v_pointClass->__pyx_vtab)->read(__pyx_v_pointClass, __pyx_v_data, __pyx_v_currentPosition);

          /* "mmfparser\data\chunkloaders\imagebank.pyx":241
 *                 if pos % (width + pad) < width:
 *                     c_array[i] = pointClass.read(data, currentPosition)
 *                     i += 1             # <<<<<<<<<<<<<<
 *                 pos += 1
 *                 currentPosition += pointClass.size
 */
          __pyx_v_i = (__pyx_v_i + 1);
          goto __pyx_L9;
        }
        __pyx_L9:;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":242
 *                     c_array[i] = pointClass.read(data, currentPosition)
 *                     i += 1
 *                 pos += 1             # <<<<<<<<<<<<<<
 *                 currentPosition += pointClass.size
 *         else:
 */
        __pyx_v_pos = (__pyx_v_pos + 1);

        /* "mmfparser\data\chunkloaders\imagebank.pyx":243
 *                     i += 1
 *                 pos += 1
 *                 currentPosition += pointClass.size             # <<<<<<<<<<<<<<
 *         else:
 *             newPoint = pointClass.read(data, currentPosition)
 */
        __pyx_v_currentPosition = (__pyx_v_currentPosition + __pyx_v_pointClass->size);
      }
      goto __pyx_L6;
    }
    /*else*/ {

      /* "mmfparser\data\chunkloaders\imagebank.pyx":245
 *                 currentPosition += pointClass.size
 *         else:
 *             newPoint = pointClass.read(data, currentPosition)             # <<<<<<<<<<<<<<
 *             for n in range(command):
 *                 if pos % (width + pad) < width:
 */
      __pyx_v_newPoint = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_v_pointClass->__pyx_vtab)->read(__pyx_v_pointClass, __pyx_v_data, __pyx_v_currentPosition);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":246
 *         else:
 *             newPoint = pointClass.read(data, currentPosition)
 *             for n in range(command):             # <<<<<<<<<<<<<<
 *                 if pos % (width + pad) < width:
 *                     c_array[i] = newPoint
 */
      __pyx_t_3 = __pyx_v_command;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_n = __pyx_t_4;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":247
 *             newPoint = pointClass.read(data, currentPosition)
 *             for n in range(command):
 *                 if pos % (width + pad) < width:             # <<<<<<<<<<<<<<
 *                     c_array[i] = newPoint
 *                     i += 1
 */
        __pyx_t_2 = (((__pyx_v_pos % (__pyx_v_width + __pyx_v_pad)) < __pyx_v_width) != 0);
        if (__pyx_t_2) {

          /* "mmfparser\data\chunkloaders\imagebank.pyx":248
 *             for n in range(command):
 *                 if pos % (width + pad) < width:
 *                     c_array[i] = newPoint             # <<<<<<<<<<<<<<
 *                     i += 1
 *                 pos += 1
 */
          (__pyx_v_c_array[__pyx_v_i]) = __pyx_v_newPoint;

          /* "mmfparser\data\chunkloaders\imagebank.pyx":249
 *                 if pos % (width + pad) < width:
 *                     c_array[i] = newPoint
 *                     i += 1             # <<<<<<<<<<<<<<
 *                 pos += 1
 *             currentPosition += pointClass.size
 */
          __pyx_v_i = (__pyx_v_i + 1);
          goto __pyx_L12;
        }
        __pyx_L12:;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":250
 *                     c_array[i] = newPoint
 *                     i += 1
 *                 pos += 1             # <<<<<<<<<<<<<<
 *             currentPosition += pointClass.size
 *     return points, currentPosition
 */
        __pyx_v_pos = (__pyx_v_pos + 1);
      }

      /* "mmfparser\data\chunkloaders\imagebank.pyx":251
 *                     i += 1
 *                 pos += 1
 *             currentPosition += pointClass.size             # <<<<<<<<<<<<<<
 *     return points, currentPosition
 * 
 */
      __pyx_v_currentPosition = (__pyx_v_currentPosition + __pyx_v_pointClass->size);
    }
    __pyx_L6:;
  }
  __pyx_L4_break:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":252
 *                 pos += 1
 *             currentPosition += pointClass.size
 *     return points, currentPosition             # <<<<<<<<<<<<<<
 * 
 * cdef inline read_alpha(char * data, int width, int height, int position):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_currentPosition); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_points);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_points);
  __Pyx_GIVEREF(__pyx_v_points);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":218
 *     return <int>ceil(pad / <float>pointClass.size)
 * 
 * cdef inline tuple read_rle(char * data, int width, int height, BasePoint pointClass):             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     cdef int pad = get_padding(width, pointClass)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.read_rle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":254
 *     return points, currentPosition
 * 
 * cdef inline read_alpha(char * data, int width, int height, int position):             # <<<<<<<<<<<<<<
 *     cdef int pad = get_padding(width, index_point, 4)
 *     cdef char * buf
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_read_alpha(char *__pyx_v_data, int __pyx_v_width, int __pyx_v_height, int __pyx_v_position) {
  int __pyx_v_pad;
  char *__pyx_v_buf;
  PyObject *__pyx_v_points = NULL;
  int __pyx_v_i;
  int __pyx_v_n;
  CYTHON_UNUSED int __pyx_v_x;
  CYTHON_UNUSED int __pyx_v_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  struct __pyx_opt_args_9mmfparser_4data_12chunkloaders_9imagebank_get_padding __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read_alpha", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":255
 * 
 * cdef inline read_alpha(char * data, int width, int height, int position):
 *     cdef int pad = get_padding(width, index_point, 4)             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     points = allocate_memory(width * height, &buf)
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_index_point);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_3.__pyx_n = 1;
  __pyx_t_3.bytes = 4;
  __pyx_t_2 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(__pyx_v_width, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_t_1), &__pyx_t_3); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pad = __pyx_t_2;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":257
 *     cdef int pad = get_padding(width, index_point, 4)
 *     cdef char * buf
 *     points = allocate_memory(width * height, &buf)             # <<<<<<<<<<<<<<
 *     cdef int i, n, x, y
 *     n = i = 0
 */
  __pyx_t_1 = __pyx_f_9mmfparser_6common_allocate_memory((__pyx_v_width * __pyx_v_height), (&__pyx_v_buf)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_points = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":259
 *     points = allocate_memory(width * height, &buf)
 *     cdef int i, n, x, y
 *     n = i = 0             # <<<<<<<<<<<<<<
 *     for y in range(height):
 *         for x in range(width):
 */
  __pyx_v_n = 0;
  __pyx_v_i = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":260
 *     cdef int i, n, x, y
 *     n = i = 0
 *     for y in range(height):             # <<<<<<<<<<<<<<
 *         for x in range(width):
 *             buf[i] = data[n + position]
 */
  __pyx_t_2 = __pyx_v_height;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_2; __pyx_t_4+=1) {
    __pyx_v_y = __pyx_t_4;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":261
 *     n = i = 0
 *     for y in range(height):
 *         for x in range(width):             # <<<<<<<<<<<<<<
 *             buf[i] = data[n + position]
 *             n += 1
 */
    __pyx_t_5 = __pyx_v_width;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_x = __pyx_t_6;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":262
 *     for y in range(height):
 *         for x in range(width):
 *             buf[i] = data[n + position]             # <<<<<<<<<<<<<<
 *             n += 1
 *             i += 1
 */
      (__pyx_v_buf[__pyx_v_i]) = (__pyx_v_data[(__pyx_v_n + __pyx_v_position)]);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":263
 *         for x in range(width):
 *             buf[i] = data[n + position]
 *             n += 1             # <<<<<<<<<<<<<<
 *             i += 1
 *         n += pad
 */
      __pyx_v_n = (__pyx_v_n + 1);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":264
 *             buf[i] = data[n + position]
 *             n += 1
 *             i += 1             # <<<<<<<<<<<<<<
 *         n += pad
 *     return points
 */
      __pyx_v_i = (__pyx_v_i + 1);
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":265
 *             n += 1
 *             i += 1
 *         n += pad             # <<<<<<<<<<<<<<
 *     return points
 * 
 */
    __pyx_v_n = (__pyx_v_n + __pyx_v_pad);
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":266
 *             i += 1
 *         n += pad
 *     return points             # <<<<<<<<<<<<<<
 * 
 * cdef inline generate_alpha(ImageItem item):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_points);
  __pyx_r = __pyx_v_points;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":254
 *     return points, currentPosition
 * 
 * cdef inline read_alpha(char * data, int width, int height, int position):             # <<<<<<<<<<<<<<
 *     cdef int pad = get_padding(width, index_point, 4)
 *     cdef char * buf
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.read_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":268
 *     return points
 * 
 * cdef inline generate_alpha(ImageItem item):             # <<<<<<<<<<<<<<
 *     cdef int pad = get_padding(item.width, index_point, 4)
 *     cdef int i, n, x, y
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_generate_alpha(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_item) {
  int __pyx_v_pad;
  int __pyx_v_i;
  int __pyx_v_n;
  CYTHON_UNUSED int __pyx_v_x;
  CYTHON_UNUSED int __pyx_v_y;
  char *__pyx_v_alpha;
  char *__pyx_v_buf;
  PyObject *__pyx_v_points = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  struct __pyx_opt_args_9mmfparser_4data_12chunkloaders_9imagebank_get_padding __pyx_t_3;
  char *__pyx_t_4;
  short __pyx_t_5;
  short __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("generate_alpha", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":269
 * 
 * cdef inline generate_alpha(ImageItem item):
 *     cdef int pad = get_padding(item.width, index_point, 4)             # <<<<<<<<<<<<<<
 *     cdef int i, n, x, y
 *     cdef char * alpha = item.alpha
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_index_point);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_3.__pyx_n = 1;
  __pyx_t_3.bytes = 4;
  __pyx_t_2 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(__pyx_v_item->width, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_t_1), &__pyx_t_3); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pad = __pyx_t_2;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":271
 *     cdef int pad = get_padding(item.width, index_point, 4)
 *     cdef int i, n, x, y
 *     cdef char * alpha = item.alpha             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     points = allocate_memory(item.width * item.height + pad * item.height, &buf)
 */
  __pyx_t_4 = __Pyx_PyObject_AsString(__pyx_v_item->alpha); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_alpha = __pyx_t_4;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":273
 *     cdef char * alpha = item.alpha
 *     cdef char * buf
 *     points = allocate_memory(item.width * item.height + pad * item.height, &buf)             # <<<<<<<<<<<<<<
 *     i = n = 0
 *     for y in range(item.height):
 */
  __pyx_t_1 = __pyx_f_9mmfparser_6common_allocate_memory(((__pyx_v_item->width * __pyx_v_item->height) + (__pyx_v_pad * __pyx_v_item->height)), (&__pyx_v_buf)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_points = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":274
 *     cdef char * buf
 *     points = allocate_memory(item.width * item.height + pad * item.height, &buf)
 *     i = n = 0             # <<<<<<<<<<<<<<
 *     for y in range(item.height):
 *         for x in range(item.width):
 */
  __pyx_v_i = 0;
  __pyx_v_n = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":275
 *     points = allocate_memory(item.width * item.height + pad * item.height, &buf)
 *     i = n = 0
 *     for y in range(item.height):             # <<<<<<<<<<<<<<
 *         for x in range(item.width):
 *             buf[n] = alpha[i]
 */
  __pyx_t_5 = __pyx_v_item->height;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_5; __pyx_t_2+=1) {
    __pyx_v_y = __pyx_t_2;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":276
 *     i = n = 0
 *     for y in range(item.height):
 *         for x in range(item.width):             # <<<<<<<<<<<<<<
 *             buf[n] = alpha[i]
 *             i += 1
 */
    __pyx_t_6 = __pyx_v_item->width;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_x = __pyx_t_7;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":277
 *     for y in range(item.height):
 *         for x in range(item.width):
 *             buf[n] = alpha[i]             # <<<<<<<<<<<<<<
 *             i += 1
 *             n += 1
 */
      (__pyx_v_buf[__pyx_v_n]) = (__pyx_v_alpha[__pyx_v_i]);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":278
 *         for x in range(item.width):
 *             buf[n] = alpha[i]
 *             i += 1             # <<<<<<<<<<<<<<
 *             n += 1
 *         n += pad
 */
      __pyx_v_i = (__pyx_v_i + 1);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":279
 *             buf[n] = alpha[i]
 *             i += 1
 *             n += 1             # <<<<<<<<<<<<<<
 *         n += pad
 *     return points
 */
      __pyx_v_n = (__pyx_v_n + 1);
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":280
 *             i += 1
 *             n += 1
 *         n += pad             # <<<<<<<<<<<<<<
 *     return points
 * 
 */
    __pyx_v_n = (__pyx_v_n + __pyx_v_pad);
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":281
 *             n += 1
 *         n += pad
 *     return points             # <<<<<<<<<<<<<<
 * 
 * cdef inline generate_image(ImageItem item):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_points);
  __pyx_r = __pyx_v_points;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":268
 *     return points
 * 
 * cdef inline generate_alpha(ImageItem item):             # <<<<<<<<<<<<<<
 *     cdef int pad = get_padding(item.width, index_point, 4)
 *     cdef int i, n, x, y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.generate_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":283
 *     return points
 * 
 * cdef inline generate_image(ImageItem item):             # <<<<<<<<<<<<<<
 *     cdef int x, y
 *     cdef int n = 0
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_generate_image(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_item) {
  CYTHON_UNUSED int __pyx_v_x;
  CYTHON_UNUSED int __pyx_v_y;
  int __pyx_v_n;
  int __pyx_v_i;
  char *__pyx_v_image;
  int __pyx_v_pad;
  char *__pyx_v_buf;
  PyObject *__pyx_v_points = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  short __pyx_t_3;
  int __pyx_t_4;
  short __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("generate_image", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":285
 * cdef inline generate_image(ImageItem item):
 *     cdef int x, y
 *     cdef int n = 0             # <<<<<<<<<<<<<<
 *     cdef int i = 0
 *     cdef char * image = item.image
 */
  __pyx_v_n = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":286
 *     cdef int x, y
 *     cdef int n = 0
 *     cdef int i = 0             # <<<<<<<<<<<<<<
 *     cdef char * image = item.image
 *     cdef int pad = get_padding(item.width, point_instance)
 */
  __pyx_v_i = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":287
 *     cdef int n = 0
 *     cdef int i = 0
 *     cdef char * image = item.image             # <<<<<<<<<<<<<<
 *     cdef int pad = get_padding(item.width, point_instance)
 *     cdef char * buf
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_item->image); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_image = __pyx_t_1;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":288
 *     cdef int i = 0
 *     cdef char * image = item.image
 *     cdef int pad = get_padding(item.width, point_instance)             # <<<<<<<<<<<<<<
 *     cdef char * buf
 *     points = allocate_memory((item.width * item.height + pad * item.height
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_pad = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_get_padding(__pyx_v_item->width, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_t_2), NULL);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":290
 *     cdef int pad = get_padding(item.width, point_instance)
 *     cdef char * buf
 *     points = allocate_memory((item.width * item.height + pad * item.height             # <<<<<<<<<<<<<<
 *         ) * point_instance.size, &buf)
 *     for y in range(item.height):
 */
  __pyx_t_2 = __pyx_f_9mmfparser_6common_allocate_memory((((__pyx_v_item->width * __pyx_v_item->height) + (__pyx_v_pad * __pyx_v_item->height)) * __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance->size), (&__pyx_v_buf)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_points = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":292
 *     points = allocate_memory((item.width * item.height + pad * item.height
 *         ) * point_instance.size, &buf)
 *     for y in range(item.height):             # <<<<<<<<<<<<<<
 *         for x in range(item.width):
 *             buf[n] = image[i+2]
 */
  __pyx_t_3 = __pyx_v_item->height;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_y = __pyx_t_4;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":293
 *         ) * point_instance.size, &buf)
 *     for y in range(item.height):
 *         for x in range(item.width):             # <<<<<<<<<<<<<<
 *             buf[n] = image[i+2]
 *             buf[n+1] = image[i+1]
 */
    __pyx_t_5 = __pyx_v_item->width;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_x = __pyx_t_6;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":294
 *     for y in range(item.height):
 *         for x in range(item.width):
 *             buf[n] = image[i+2]             # <<<<<<<<<<<<<<
 *             buf[n+1] = image[i+1]
 *             buf[n+2] = image[i]
 */
      (__pyx_v_buf[__pyx_v_n]) = (__pyx_v_image[(__pyx_v_i + 2)]);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":295
 *         for x in range(item.width):
 *             buf[n] = image[i+2]
 *             buf[n+1] = image[i+1]             # <<<<<<<<<<<<<<
 *             buf[n+2] = image[i]
 *             i += 4
 */
      (__pyx_v_buf[(__pyx_v_n + 1)]) = (__pyx_v_image[(__pyx_v_i + 1)]);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":296
 *             buf[n] = image[i+2]
 *             buf[n+1] = image[i+1]
 *             buf[n+2] = image[i]             # <<<<<<<<<<<<<<
 *             i += 4
 *             n += 3
 */
      (__pyx_v_buf[(__pyx_v_n + 2)]) = (__pyx_v_image[__pyx_v_i]);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":297
 *             buf[n+1] = image[i+1]
 *             buf[n+2] = image[i]
 *             i += 4             # <<<<<<<<<<<<<<
 *             n += 3
 *         n += pad * point_instance.size
 */
      __pyx_v_i = (__pyx_v_i + 4);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":298
 *             buf[n+2] = image[i]
 *             i += 4
 *             n += 3             # <<<<<<<<<<<<<<
 *         n += pad * point_instance.size
 *     return points
 */
      __pyx_v_n = (__pyx_v_n + 3);
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":299
 *             i += 4
 *             n += 3
 *         n += pad * point_instance.size             # <<<<<<<<<<<<<<
 *     return points
 * 
 */
    __pyx_v_n = (__pyx_v_n + (__pyx_v_pad * __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance->size));
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":300
 *             n += 3
 *         n += pad * point_instance.size
 *     return points             # <<<<<<<<<<<<<<
 * 
 * # def generate_alpha(ImageItem item):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_points);
  __pyx_r = __pyx_v_points;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":283
 *     return points
 * 
 * cdef inline generate_image(ImageItem item):             # <<<<<<<<<<<<<<
 *     cdef int x, y
 *     cdef int n = 0
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.generate_image", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":363
 *         size_t pos
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.flags = IMAGE_FLAGS.copy()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_1initialize)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":364
 * 
 *     cpdef initialize(self):
 *         self.flags = IMAGE_FLAGS.copy()             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_IMAGE_FLAGS); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":363
 *         size_t pos
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.flags = IMAGE_FLAGS.copy()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":366
 *         self.flags = IMAGE_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.handle = reader.readInt()
 *         cdef bint load_now = self.settings.get('loadImages', True)
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  int __pyx_v_load_now;
  int __pyx_v_old;
  int __pyx_v_debug;
  int __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3read)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":367
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.handle = reader.readInt()             # <<<<<<<<<<<<<<
 *         cdef bint load_now = self.settings.get('loadImages', True)
 *         self.reader = reader
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->handle = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":368
 *     cpdef read(self, ByteReader reader):
 *         self.handle = reader.readInt()
 *         cdef bint load_now = self.settings.get('loadImages', True)             # <<<<<<<<<<<<<<
 *         self.reader = reader
 *         self.pos = reader.tell()
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_loadImages, Py_True); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_load_now = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":369
 *         self.handle = reader.readInt()
 *         cdef bint load_now = self.settings.get('loadImages', True)
 *         self.reader = reader             # <<<<<<<<<<<<<<
 *         self.pos = reader.tell()
 *         if load_now:
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_reader));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
  __Pyx_GOTREF(__pyx_v_self->reader);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->reader));
  __pyx_v_self->reader = __pyx_v_reader;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":370
 *         cdef bint load_now = self.settings.get('loadImages', True)
 *         self.reader = reader
 *         self.pos = reader.tell()             # <<<<<<<<<<<<<<
 *         if load_now:
 *             self.load()
 */
  __pyx_v_self->pos = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":371
 *         self.reader = reader
 *         self.pos = reader.tell()
 *         if load_now:             # <<<<<<<<<<<<<<
 *             self.load()
 *             return
 */
  __pyx_t_7 = (__pyx_v_load_now != 0);
  if (__pyx_t_7) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":372
 *         self.pos = reader.tell()
 *         if load_now:
 *             self.load()             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self->__pyx_base.__pyx_vtab)->load(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":373
 *         if load_now:
 *             self.load()
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef bint old = self.settings.get('old', False)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":375
 *             return
 * 
 *         cdef bint old = self.settings.get('old', False)             # <<<<<<<<<<<<<<
 *         if old:
 *             raise NotImplementedError('not supported')
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_old, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_old = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":376
 * 
 *         cdef bint old = self.settings.get('old', False)
 *         if old:             # <<<<<<<<<<<<<<
 *             raise NotImplementedError('not supported')
 * 
 */
  __pyx_t_7 = (__pyx_v_old != 0);
  if (__pyx_t_7) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":377
 *         cdef bint old = self.settings.get('old', False)
 *         if old:
 *             raise NotImplementedError('not supported')             # <<<<<<<<<<<<<<
 * 
 *         cdef bint debug = self.settings.get('debug', False)
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":379
 *             raise NotImplementedError('not supported')
 * 
 *         cdef bint debug = self.settings.get('debug', False)             # <<<<<<<<<<<<<<
 *         cdef int size
 *         if debug:
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_debug, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_debug = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":381
 *         cdef bint debug = self.settings.get('debug', False)
 *         cdef int size
 *         if debug:             # <<<<<<<<<<<<<<
 *             reader.skipBytes(8)
 *             size = reader.readInt(True)
 */
  __pyx_t_7 = (__pyx_v_debug != 0);
  if (__pyx_t_7) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":382
 *         cdef int size
 *         if debug:
 *             reader.skipBytes(8)             # <<<<<<<<<<<<<<
 *             size = reader.readInt(True)
 *             reader.skipBytes(size + 20)
 */
    ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 8, 0);

    /* "mmfparser\data\chunkloaders\imagebank.pyx":383
 *         if debug:
 *             reader.skipBytes(8)
 *             size = reader.readInt(True)             # <<<<<<<<<<<<<<
 *             reader.skipBytes(size + 20)
 *         else:
 */
    __pyx_t_8.__pyx_n = 1;
    __pyx_t_8.asUnsigned = 1;
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_size = __pyx_t_6;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":384
 *             reader.skipBytes(8)
 *             size = reader.readInt(True)
 *             reader.skipBytes(size + 20)             # <<<<<<<<<<<<<<
 *         else:
 *             reader.skipBytes(4)
 */
    ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, (__pyx_v_size + 20), 0);
    goto __pyx_L5;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":386
 *             reader.skipBytes(size + 20)
 *         else:
 *             reader.skipBytes(4)             # <<<<<<<<<<<<<<
 *             size = reader.readInt(True)
 *             reader.skipBytes(size)
 */
    ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 4, 0);

    /* "mmfparser\data\chunkloaders\imagebank.pyx":387
 *         else:
 *             reader.skipBytes(4)
 *             size = reader.readInt(True)             # <<<<<<<<<<<<<<
 *             reader.skipBytes(size)
 * 
 */
    __pyx_t_8.__pyx_n = 1;
    __pyx_t_8.asUnsigned = 1;
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_size = __pyx_t_6;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":388
 *             reader.skipBytes(4)
 *             size = reader.readInt(True)
 *             reader.skipBytes(size)             # <<<<<<<<<<<<<<
 * 
 *     cpdef load(self):
 */
    ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, __pyx_v_size, 0);
  }
  __pyx_L5:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":366
 *         self.flags = IMAGE_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.handle = reader.readInt()
 *         cdef bint load_now = self.settings.get('loadImages', True)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":390
 *             reader.skipBytes(size)
 * 
 *     cpdef load(self):             # <<<<<<<<<<<<<<
 *         cdef ByteReader reader = self.reader
 *         if reader is None:
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5load(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_load(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, int __pyx_skip_dispatch) {
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader = 0;
  int __pyx_v_old;
  int __pyx_v_debug;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_newReader = 0;
  CYTHON_UNUSED int __pyx_v_start;
  int __pyx_v_size;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt __pyx_t_8;
  short __pyx_t_9;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_load); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5load)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":391
 * 
 *     cpdef load(self):
 *         cdef ByteReader reader = self.reader             # <<<<<<<<<<<<<<
 *         if reader is None:
 *             return
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->reader);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_reader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":392
 *     cpdef load(self):
 *         cdef ByteReader reader = self.reader
 *         if reader is None:             # <<<<<<<<<<<<<<
 *             return
 *         reader.seek(self.pos)
 */
  __pyx_t_5 = (((PyObject *)__pyx_v_reader) == Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":393
 *         cdef ByteReader reader = self.reader
 *         if reader is None:
 *             return             # <<<<<<<<<<<<<<
 *         reader.seek(self.pos)
 *         self.reader = None
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":394
 *         if reader is None:
 *             return
 *         reader.seek(self.pos)             # <<<<<<<<<<<<<<
 *         self.reader = None
 * 
 */
  ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_v_self->pos, 0, NULL);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":395
 *             return
 *         reader.seek(self.pos)
 *         self.reader = None             # <<<<<<<<<<<<<<
 * 
 *         cdef bint old = self.settings.get('old', False)
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->reader);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->reader));
  __pyx_v_self->reader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":397
 *         self.reader = None
 * 
 *         cdef bint old = self.settings.get('old', False)             # <<<<<<<<<<<<<<
 *         cdef bint debug = self.settings.get('debug', False)
 *         cdef ByteReader newReader
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_old, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_old = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":398
 * 
 *         cdef bint old = self.settings.get('old', False)
 *         cdef bint debug = self.settings.get('debug', False)             # <<<<<<<<<<<<<<
 *         cdef ByteReader newReader
 *         if old:
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_debug, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_debug = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":400
 *         cdef bint debug = self.settings.get('debug', False)
 *         cdef ByteReader newReader
 *         if old:             # <<<<<<<<<<<<<<
 *             newReader = onepointfive.decompress(reader)
 *         elif debug:
 */
  __pyx_t_6 = (__pyx_v_old != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":401
 *         cdef ByteReader newReader
 *         if old:
 *             newReader = onepointfive.decompress(reader)             # <<<<<<<<<<<<<<
 *         elif debug:
 *             newReader = reader
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_onepointfive); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decompress); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_2) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_10bytereader_ByteReader))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_newReader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":402
 *         if old:
 *             newReader = onepointfive.decompress(reader)
 *         elif debug:             # <<<<<<<<<<<<<<
 *             newReader = reader
 *         else:
 */
  __pyx_t_6 = (__pyx_v_debug != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":403
 *             newReader = onepointfive.decompress(reader)
 *         elif debug:
 *             newReader = reader             # <<<<<<<<<<<<<<
 *         else:
 *             newReader = zlibdata.decompress(reader)
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_reader));
    __pyx_v_newReader = __pyx_v_reader;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":405
 *             newReader = reader
 *         else:
 *             newReader = zlibdata.decompress(reader)             # <<<<<<<<<<<<<<
 * 
 *         start = newReader.tell()
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_zlibdata); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_decompress); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_reader)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_2, 0+1, ((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_10bytereader_ByteReader))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_newReader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":407
 *             newReader = zlibdata.decompress(reader)
 * 
 *         start = newReader.tell()             # <<<<<<<<<<<<<<
 * 
 *         if old:
 */
  __pyx_v_start = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->tell(__pyx_v_newReader, 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":409
 *         start = newReader.tell()
 * 
 *         if old:             # <<<<<<<<<<<<<<
 *             self.checksum = newReader.readShort()
 *         else:
 */
  __pyx_t_6 = (__pyx_v_old != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":410
 * 
 *         if old:
 *             self.checksum = newReader.readShort()             # <<<<<<<<<<<<<<
 *         else:
 *             self.checksum = newReader.readInt()
 */
    __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->checksum = __pyx_t_7;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":412
 *             self.checksum = newReader.readShort()
 *         else:
 *             self.checksum = newReader.readInt()             # <<<<<<<<<<<<<<
 *         self.references = newReader.readInt()
 *         cdef int size = newReader.readInt(True)
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readInt(__pyx_v_newReader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_self->checksum = __pyx_t_7;
  }
  __pyx_L5:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":413
 *         else:
 *             self.checksum = newReader.readInt()
 *         self.references = newReader.readInt()             # <<<<<<<<<<<<<<
 *         cdef int size = newReader.readInt(True)
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readInt(__pyx_v_newReader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->references = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":414
 *             self.checksum = newReader.readInt()
 *         self.references = newReader.readInt()
 *         cdef int size = newReader.readInt(True)             # <<<<<<<<<<<<<<
 * 
 *         if debug:
 */
  __pyx_t_8.__pyx_n = 1;
  __pyx_t_8.asUnsigned = 1;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readInt(__pyx_v_newReader, 0, &__pyx_t_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_size = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":416
 *         cdef int size = newReader.readInt(True)
 * 
 *         if debug:             # <<<<<<<<<<<<<<
 *             newReader = newReader.readReader(size + 20)
 *         self.width = newReader.readShort()
 */
  __pyx_t_6 = (__pyx_v_debug != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":417
 * 
 *         if debug:
 *             newReader = newReader.readReader(size + 20)             # <<<<<<<<<<<<<<
 *         self.width = newReader.readShort()
 *         self.height = newReader.readShort()
 */
    __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readReader(__pyx_v_newReader, (__pyx_v_size + 20), 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_newReader, ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1));
    __pyx_t_1 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":418
 *         if debug:
 *             newReader = newReader.readReader(size + 20)
 *         self.width = newReader.readShort()             # <<<<<<<<<<<<<<
 *         self.height = newReader.readShort()
 *         self.graphicMode = newReader.readByte()
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->width = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":419
 *             newReader = newReader.readReader(size + 20)
 *         self.width = newReader.readShort()
 *         self.height = newReader.readShort()             # <<<<<<<<<<<<<<
 *         self.graphicMode = newReader.readByte()
 *         self.flags.setFlags(newReader.readByte(True))
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->height = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":420
 *         self.width = newReader.readShort()
 *         self.height = newReader.readShort()
 *         self.graphicMode = newReader.readByte()             # <<<<<<<<<<<<<<
 *         self.flags.setFlags(newReader.readByte(True))
 * 
 */
  __pyx_t_9 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readByte(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_9 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->graphicMode = __pyx_t_9;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":421
 *         self.height = newReader.readShort()
 *         self.graphicMode = newReader.readByte()
 *         self.flags.setFlags(newReader.readByte(True))             # <<<<<<<<<<<<<<
 * 
 *         if not old:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_10.__pyx_n = 1;
  __pyx_t_10.asUnsigned = 1;
  __pyx_t_9 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readByte(__pyx_v_newReader, 0, &__pyx_t_10); if (unlikely(__pyx_t_9 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_t_9); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
    PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":423
 *         self.flags.setFlags(newReader.readByte(True))
 * 
 *         if not old:             # <<<<<<<<<<<<<<
 *             newReader.skipBytes(2) # imgNotUsed
 *         self.xHotspot = newReader.readShort()
 */
  __pyx_t_6 = ((!(__pyx_v_old != 0)) != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":424
 * 
 *         if not old:
 *             newReader.skipBytes(2) # imgNotUsed             # <<<<<<<<<<<<<<
 *         self.xHotspot = newReader.readShort()
 *         self.yHotspot = newReader.readShort()
 */
    ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->skipBytes(__pyx_v_newReader, 2, 0);
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":425
 *         if not old:
 *             newReader.skipBytes(2) # imgNotUsed
 *         self.xHotspot = newReader.readShort()             # <<<<<<<<<<<<<<
 *         self.yHotspot = newReader.readShort()
 *         self.actionX = newReader.readShort()
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->xHotspot = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":426
 *             newReader.skipBytes(2) # imgNotUsed
 *         self.xHotspot = newReader.readShort()
 *         self.yHotspot = newReader.readShort()             # <<<<<<<<<<<<<<
 *         self.actionX = newReader.readShort()
 *         self.actionY = newReader.readShort()
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->yHotspot = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":427
 *         self.xHotspot = newReader.readShort()
 *         self.yHotspot = newReader.readShort()
 *         self.actionX = newReader.readShort()             # <<<<<<<<<<<<<<
 *         self.actionY = newReader.readShort()
 *         if old:
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionX = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":428
 *         self.yHotspot = newReader.readShort()
 *         self.actionX = newReader.readShort()
 *         self.actionY = newReader.readShort()             # <<<<<<<<<<<<<<
 *         if old:
 *             self.transparent = (0, 0, 0)
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readShort(__pyx_v_newReader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionY = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":429
 *         self.actionX = newReader.readShort()
 *         self.actionY = newReader.readShort()
 *         if old:             # <<<<<<<<<<<<<<
 *             self.transparent = (0, 0, 0)
 *         else:
 */
  __pyx_t_6 = (__pyx_v_old != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":430
 *         self.actionY = newReader.readShort()
 *         if old:
 *             self.transparent = (0, 0, 0)             # <<<<<<<<<<<<<<
 *         else:
 *             self.transparent = newReader.readColor()
 */
    __Pyx_INCREF(__pyx_tuple__2);
    __Pyx_GIVEREF(__pyx_tuple__2);
    __Pyx_GOTREF(__pyx_v_self->transparent);
    __Pyx_DECREF(__pyx_v_self->transparent);
    __pyx_v_self->transparent = __pyx_tuple__2;
    goto __pyx_L8;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":432
 *             self.transparent = (0, 0, 0)
 *         else:
 *             self.transparent = newReader.readColor()             # <<<<<<<<<<<<<<
 * 
 *         cdef int decompressed
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->readColor(__pyx_v_newReader, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->transparent);
    __Pyx_DECREF(__pyx_v_self->transparent);
    __pyx_v_self->transparent = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L8:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":435
 * 
 *         cdef int decompressed
 *         data = newReader.read()             # <<<<<<<<<<<<<<
 *         self.rawImage=ByteReader()
 *         self.rawImage.write(data)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->read(__pyx_v_newReader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_data = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":436
 *         cdef int decompressed
 *         data = newReader.read()
 *         self.rawImage=ByteReader()             # <<<<<<<<<<<<<<
 *         self.rawImage.write(data)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_10bytereader_ByteReader)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->rawImage);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->rawImage));
  __pyx_v_self->rawImage = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":437
 *         data = newReader.read()
 *         self.rawImage=ByteReader()
 *         self.rawImage.write(data)             # <<<<<<<<<<<<<<
 * 
 *     def write(self, reader):
 */
  if (!(likely(PyBytes_CheckExact(__pyx_v_data))||((__pyx_v_data) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_data)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_self->rawImage->__pyx_vtab)->write(__pyx_v_self->rawImage, ((PyObject*)__pyx_v_data), 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":390
 *             reader.skipBytes(size)
 * 
 *     cpdef load(self):             # <<<<<<<<<<<<<<
 *         cdef ByteReader reader = self.reader
 *         if reader is None:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_reader);
  __Pyx_XDECREF((PyObject *)__pyx_v_newReader);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5load(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5load(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_4load(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_4load(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_load(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":439
 *         self.rawImage.write(data)
 * 
 *     def write(self, reader):             # <<<<<<<<<<<<<<
 *         cdef bint debug = self.settings.get('debug', False)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_reader));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_v_debug;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_newReader = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":440
 * 
 *     def write(self, reader):
 *         cdef bint debug = self.settings.get('debug', False)             # <<<<<<<<<<<<<<
 * 
 *         newReader = ByteReader()
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_debug, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_debug = __pyx_t_2;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":442
 *         cdef bint debug = self.settings.get('debug', False)
 * 
 *         newReader = ByteReader()             # <<<<<<<<<<<<<<
 *         newReader.writeInt(self.checksum)
 *         newReader.writeInt(self.references)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_10bytereader_ByteReader)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_newReader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":443
 * 
 *         newReader = ByteReader()
 *         newReader.writeInt(self.checksum)             # <<<<<<<<<<<<<<
 *         newReader.writeInt(self.references)
 *         newReader.writeInt(len(self.rawImage))
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->checksum); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":444
 *         newReader = ByteReader()
 *         newReader.writeInt(self.checksum)
 *         newReader.writeInt(self.references)             # <<<<<<<<<<<<<<
 *         newReader.writeInt(len(self.rawImage))
 *         newReader.writeShort(self.width)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->references); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":445
 *         newReader.writeInt(self.checksum)
 *         newReader.writeInt(self.references)
 *         newReader.writeInt(len(self.rawImage))             # <<<<<<<<<<<<<<
 *         newReader.writeShort(self.width)
 *         newReader.writeShort(self.height)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = ((PyObject *)__pyx_v_self->rawImage);
  __Pyx_INCREF(__pyx_t_5);
  __pyx_t_7 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":446
 *         newReader.writeInt(self.references)
 *         newReader.writeInt(len(self.rawImage))
 *         newReader.writeShort(self.width)             # <<<<<<<<<<<<<<
 *         newReader.writeShort(self.height)
 *         newReader.writeByte(self.graphicMode)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_short(__pyx_v_self->width); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":447
 *         newReader.writeInt(len(self.rawImage))
 *         newReader.writeShort(self.width)
 *         newReader.writeShort(self.height)             # <<<<<<<<<<<<<<
 *         newReader.writeByte(self.graphicMode)
 *         newReader.writeByte(self.flags.getFlags())
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_From_short(__pyx_v_self->height); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":448
 *         newReader.writeShort(self.width)
 *         newReader.writeShort(self.height)
 *         newReader.writeByte(self.graphicMode)             # <<<<<<<<<<<<<<
 *         newReader.writeByte(self.flags.getFlags())
 *         newReader.write(<bytes>('\x00\x00'))
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_char(__pyx_v_self->graphicMode); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":449
 *         newReader.writeShort(self.height)
 *         newReader.writeByte(self.graphicMode)
 *         newReader.writeByte(self.flags.getFlags())             # <<<<<<<<<<<<<<
 *         newReader.write(<bytes>('\x00\x00'))
 *         newReader.writeShort(self.xHotspot)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":450
 *         newReader.writeByte(self.graphicMode)
 *         newReader.writeByte(self.flags.getFlags())
 *         newReader.write(<bytes>('\x00\x00'))             # <<<<<<<<<<<<<<
 *         newReader.writeShort(self.xHotspot)
 *         newReader.writeShort(self.yHotspot)
 */
  ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->write(__pyx_v_newReader, ((PyObject*)__pyx_kp_s__3), 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":451
 *         newReader.writeByte(self.flags.getFlags())
 *         newReader.write(<bytes>('\x00\x00'))
 *         newReader.writeShort(self.xHotspot)             # <<<<<<<<<<<<<<
 *         newReader.writeShort(self.yHotspot)
 *         newReader.writeShort(self.actionX)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_From_short(__pyx_v_self->xHotspot); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":452
 *         newReader.write(<bytes>('\x00\x00'))
 *         newReader.writeShort(self.xHotspot)
 *         newReader.writeShort(self.yHotspot)             # <<<<<<<<<<<<<<
 *         newReader.writeShort(self.actionX)
 *         newReader.writeShort(self.actionY)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_short(__pyx_v_self->yHotspot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":453
 *         newReader.writeShort(self.xHotspot)
 *         newReader.writeShort(self.yHotspot)
 *         newReader.writeShort(self.actionX)             # <<<<<<<<<<<<<<
 *         newReader.writeShort(self.actionY)
 *         newReader.writeColor(self.transparent or (0, 0, 0))
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_short(__pyx_v_self->actionX); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":454
 *         newReader.writeShort(self.yHotspot)
 *         newReader.writeShort(self.actionX)
 *         newReader.writeShort(self.actionY)             # <<<<<<<<<<<<<<
 *         newReader.writeColor(self.transparent or (0, 0, 0))
 *         newReader.writeReader(self.rawImage)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_From_short(__pyx_v_self->actionY); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":455
 *         newReader.writeShort(self.actionX)
 *         newReader.writeShort(self.actionY)
 *         newReader.writeColor(self.transparent or (0, 0, 0))             # <<<<<<<<<<<<<<
 *         newReader.writeReader(self.rawImage)
 *         reader.writeInt(self.handle)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_self->transparent); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (!__pyx_t_2) {
  } else {
    __Pyx_INCREF(__pyx_v_self->transparent);
    __pyx_t_5 = __pyx_v_self->transparent;
    goto __pyx_L3_bool_binop_done;
  }
  __Pyx_INCREF(__pyx_tuple__4);
  __pyx_t_5 = __pyx_tuple__4;
  __pyx_L3_bool_binop_done:;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":456
 *         newReader.writeShort(self.actionY)
 *         newReader.writeColor(self.transparent or (0, 0, 0))
 *         newReader.writeReader(self.rawImage)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.handle)
 *         if debug:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_newReader), __pyx_n_s_writeReader); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_self->rawImage)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_self->rawImage));
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_self->rawImage));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self->rawImage));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":457
 *         newReader.writeColor(self.transparent or (0, 0, 0))
 *         newReader.writeReader(self.rawImage)
 *         reader.writeInt(self.handle)             # <<<<<<<<<<<<<<
 *         if debug:
 *             reader.writeReader(newReader)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->handle); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":458
 *         newReader.writeReader(self.rawImage)
 *         reader.writeInt(self.handle)
 *         if debug:             # <<<<<<<<<<<<<<
 *             reader.writeReader(newReader)
 *         else:
 */
  __pyx_t_2 = (__pyx_v_debug != 0);
  if (__pyx_t_2) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":459
 *         reader.writeInt(self.handle)
 *         if debug:
 *             reader.writeReader(newReader)             # <<<<<<<<<<<<<<
 *         else:
 *             reader.writeReader(zlibdata.compress(newReader))
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeReader); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_newReader)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_newReader));
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_newReader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_newReader));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":461
 *             reader.writeReader(newReader)
 *         else:
 *             reader.writeReader(zlibdata.compress(newReader))             # <<<<<<<<<<<<<<
 * 
 *     def createDisplay(self, frame = None, **kw):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeReader); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_zlibdata); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_compress); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_newReader)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_newReader));
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, ((PyObject *)__pyx_v_newReader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_newReader));
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L5:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":439
 *         self.rawImage.write(data)
 * 
 *     def write(self, reader):             # <<<<<<<<<<<<<<
 *         cdef bint debug = self.settings.get('debug', False)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newReader);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":463
 *             reader.writeReader(zlibdata.compress(newReader))
 * 
 *     def createDisplay(self, frame = None, **kw):             # <<<<<<<<<<<<<<
 *         foo = createDisplay(self, frame)
 *         self.unload()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_9createDisplay(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_9createDisplay(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_frame = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createDisplay (wrapper)", 0);
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_frame,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_frame);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kw, values, pos_args, "createDisplay") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_frame = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("createDisplay", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.createDisplay", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8createDisplay(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), __pyx_v_frame, __pyx_v_kw);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8createDisplay(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_frame, CYTHON_UNUSED PyObject *__pyx_v_kw) {
  PyObject *__pyx_v_foo = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createDisplay", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":464
 * 
 *     def createDisplay(self, frame = None, **kw):
 *         foo = createDisplay(self, frame)             # <<<<<<<<<<<<<<
 *         self.unload()
 *         return foo
 */
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_createDisplay(__pyx_v_self, __pyx_v_frame); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_foo = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":465
 *     def createDisplay(self, frame = None, **kw):
 *         foo = createDisplay(self, frame)
 *         self.unload()             # <<<<<<<<<<<<<<
 *         return foo
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_unload); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":466
 *         foo = createDisplay(self, frame)
 *         self.unload()
 *         return foo             # <<<<<<<<<<<<<<
 * 
 *     def getImageData(self, frame = None, **kw):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_foo);
  __pyx_r = __pyx_v_foo;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":463
 *             reader.writeReader(zlibdata.compress(newReader))
 * 
 *     def createDisplay(self, frame = None, **kw):             # <<<<<<<<<<<<<<
 *         foo = createDisplay(self, frame)
 *         self.unload()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.createDisplay", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_foo);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":468
 *         return foo
 * 
 *     def getImageData(self, frame = None, **kw):             # <<<<<<<<<<<<<<
 *         foo = getImageData(self, frame)
 *         self.unload()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11getImageData(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11getImageData(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_frame = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImageData (wrapper)", 0);
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_frame,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_frame);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kw, values, pos_args, "getImageData") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_frame = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getImageData", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.getImageData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10getImageData(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), __pyx_v_frame, __pyx_v_kw);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10getImageData(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_frame, CYTHON_UNUSED PyObject *__pyx_v_kw) {
  PyObject *__pyx_v_foo = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImageData", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":469
 * 
 *     def getImageData(self, frame = None, **kw):
 *         foo = getImageData(self, frame)             # <<<<<<<<<<<<<<
 *         self.unload()
 *         return foo
 */
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_getImageData(__pyx_v_self, __pyx_v_frame); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_foo = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":470
 *     def getImageData(self, frame = None, **kw):
 *         foo = getImageData(self, frame)
 *         self.unload()             # <<<<<<<<<<<<<<
 *         return foo
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_unload); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":471
 *         foo = getImageData(self, frame)
 *         self.unload()
 *         return foo             # <<<<<<<<<<<<<<
 * 
 *     def unload(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_foo);
  __pyx_r = __pyx_v_foo;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":468
 *         return foo
 * 
 *     def getImageData(self, frame = None, **kw):             # <<<<<<<<<<<<<<
 *         foo = getImageData(self, frame)
 *         self.unload()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.getImageData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_foo);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":473
 *         return foo
 * 
 *     def unload(self):             # <<<<<<<<<<<<<<
 *         self.image = None
 *         self.alpha = None
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_13unload(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_13unload(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unload (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_12unload(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_12unload(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unload", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":474
 * 
 *     def unload(self):
 *         self.image = None             # <<<<<<<<<<<<<<
 *         self.alpha = None
 * 
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->image);
  __Pyx_DECREF(__pyx_v_self->image);
  __pyx_v_self->image = Py_None;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":475
 *     def unload(self):
 *         self.image = None
 *         self.alpha = None             # <<<<<<<<<<<<<<
 * 
 *     def getGraphicMode(self):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->alpha);
  __Pyx_DECREF(__pyx_v_self->alpha);
  __pyx_v_self->alpha = Py_None;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":473
 *         return foo
 * 
 *     def unload(self):             # <<<<<<<<<<<<<<
 *         self.image = None
 *         self.alpha = None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":477
 *         self.alpha = None
 * 
 *     def getGraphicMode(self):             # <<<<<<<<<<<<<<
 *         return graphicModes[self.graphicMode]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_15getGraphicMode(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_15getGraphicMode(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getGraphicMode (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_14getGraphicMode(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_14getGraphicMode(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getGraphicMode", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":478
 * 
 *     def getGraphicMode(self):
 *         return graphicModes[self.graphicMode]             # <<<<<<<<<<<<<<
 * 
 * cdef class JavaImage(DataLoader):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_graphicModes); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_self->graphicMode, char, 1, __Pyx_PyInt_From_char, 0, 0, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":477
 *         self.alpha = None
 * 
 *     def getGraphicMode(self):             # <<<<<<<<<<<<<<
 *         return graphicModes[self.graphicMode]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.getGraphicMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":343
 * cdef class ImageItem(DataLoader):
 *     cdef public:
 *         int handle             # <<<<<<<<<<<<<<
 *         int checksum # starts at imgWidth and ends at end of bitmap
 *         int references
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->handle); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.handle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->handle = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.handle.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":344
 *     cdef public:
 *         int handle
 *         int checksum # starts at imgWidth and ends at end of bitmap             # <<<<<<<<<<<<<<
 *         int references
 *         short width
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->checksum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.checksum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->checksum = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.checksum.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":345
 *         int handle
 *         int checksum # starts at imgWidth and ends at end of bitmap
 *         int references             # <<<<<<<<<<<<<<
 *         short width
 *         short height
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->references); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.references.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->references = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.references.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":346
 *         int checksum # starts at imgWidth and ends at end of bitmap
 *         int references
 *         short width             # <<<<<<<<<<<<<<
 *         short height
 *         short xHotspot
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":347
 *         int references
 *         short width
 *         short height             # <<<<<<<<<<<<<<
 *         short xHotspot
 *         short yHotspot
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":348
 *         short width
 *         short height
 *         short xHotspot             # <<<<<<<<<<<<<<
 *         short yHotspot
 *         short actionX
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->xHotspot); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.xHotspot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->xHotspot = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.xHotspot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":349
 *         short height
 *         short xHotspot
 *         short yHotspot             # <<<<<<<<<<<<<<
 *         short actionX
 *         short actionY
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->yHotspot); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.yHotspot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->yHotspot = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.yHotspot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":350
 *         short xHotspot
 *         short yHotspot
 *         short actionX             # <<<<<<<<<<<<<<
 *         short actionY
 *         object flags
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->actionX); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.actionX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionX = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.actionX.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":351
 *         short yHotspot
 *         short actionX
 *         short actionY             # <<<<<<<<<<<<<<
 *         object flags
 *         object image
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->actionY); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.actionY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionY = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.actionY.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":352
 *         short actionX
 *         short actionY
 *         object flags             # <<<<<<<<<<<<<<
 *         object image
 *         object alpha
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->flags);
  __pyx_r = __pyx_v_self->flags;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":353
 *         short actionY
 *         object flags
 *         object image             # <<<<<<<<<<<<<<
 *         object alpha
 *         bint indexed
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->image);
  __pyx_r = __pyx_v_self->image;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->image);
  __Pyx_DECREF(__pyx_v_self->image);
  __pyx_v_self->image = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->image);
  __Pyx_DECREF(__pyx_v_self->image);
  __pyx_v_self->image = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":354
 *         object flags
 *         object image
 *         object alpha             # <<<<<<<<<<<<<<
 *         bint indexed
 *         char graphicMode
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->alpha);
  __pyx_r = __pyx_v_self->alpha;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->alpha);
  __Pyx_DECREF(__pyx_v_self->alpha);
  __pyx_v_self->alpha = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->alpha);
  __Pyx_DECREF(__pyx_v_self->alpha);
  __pyx_v_self->alpha = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":355
 *         object image
 *         object alpha
 *         bint indexed             # <<<<<<<<<<<<<<
 *         char graphicMode
 *         tuple transparent
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->indexed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.indexed.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->indexed = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.indexed.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":356
 *         object alpha
 *         bint indexed
 *         char graphicMode             # <<<<<<<<<<<<<<
 *         tuple transparent
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_char(__pyx_v_self->graphicMode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.graphicMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_char(__pyx_v_value); if (unlikely((__pyx_t_1 == (char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->graphicMode = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.graphicMode.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":357
 *         bint indexed
 *         char graphicMode
 *         tuple transparent             # <<<<<<<<<<<<<<
 * 
 *         ByteReader reader
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->transparent);
  __pyx_r = __pyx_v_self->transparent;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyTuple_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->transparent);
  __Pyx_DECREF(__pyx_v_self->transparent);
  __pyx_v_self->transparent = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.transparent.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->transparent);
  __Pyx_DECREF(__pyx_v_self->transparent);
  __pyx_v_self->transparent = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":359
 *         tuple transparent
 * 
 *         ByteReader reader             # <<<<<<<<<<<<<<
 *         ByteReader rawImage
 *         size_t pos
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->reader));
  __pyx_r = ((PyObject *)__pyx_v_self->reader);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_9mmfparser_10bytereader_ByteReader))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->reader);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->reader));
  __pyx_v_self->reader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.reader.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->reader);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->reader));
  __pyx_v_self->reader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":360
 * 
 *         ByteReader reader
 *         ByteReader rawImage             # <<<<<<<<<<<<<<
 *         size_t pos
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->rawImage));
  __pyx_r = ((PyObject *)__pyx_v_self->rawImage);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_9mmfparser_10bytereader_ByteReader))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->rawImage);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->rawImage));
  __pyx_v_self->rawImage = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.rawImage.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->rawImage);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->rawImage));
  __pyx_v_self->rawImage = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":361
 *         ByteReader reader
 *         ByteReader rawImage
 *         size_t pos             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->pos); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.pos.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_value); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->pos = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageItem.pos.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":489
 *         bint flash
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.handle = reader.readShort()
 *         if self.settings.get('withSize', False):
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_size = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_1read)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":490
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.handle = reader.readShort()             # <<<<<<<<<<<<<<
 *         if self.settings.get('withSize', False):
 *             self.width = reader.readShort()
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->handle = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":491
 *     cpdef read(self, ByteReader reader):
 *         self.handle = reader.readShort()
 *         if self.settings.get('withSize', False):             # <<<<<<<<<<<<<<
 *             self.width = reader.readShort()
 *             self.height = reader.readShort()
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_withSize, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_7) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":492
 *         self.handle = reader.readShort()
 *         if self.settings.get('withSize', False):
 *             self.width = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.height = reader.readShort()
 *         self.xHotspot = reader.readShort()
 */
    __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->width = __pyx_t_6;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":493
 *         if self.settings.get('withSize', False):
 *             self.width = reader.readShort()
 *             self.height = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.xHotspot = reader.readShort()
 *         self.yHotspot = reader.readShort()
 */
    __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->height = __pyx_t_6;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":494
 *             self.width = reader.readShort()
 *             self.height = reader.readShort()
 *         self.xHotspot = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.yHotspot = reader.readShort()
 *         self.actionX = reader.readShort()
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->xHotspot = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":495
 *             self.height = reader.readShort()
 *         self.xHotspot = reader.readShort()
 *         self.yHotspot = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.actionX = reader.readShort()
 *         self.actionY = reader.readShort()
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->yHotspot = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":496
 *         self.xHotspot = reader.readShort()
 *         self.yHotspot = reader.readShort()
 *         self.actionX = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.actionY = reader.readShort()
 *         size = reader.readInt()
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionX = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":497
 *         self.yHotspot = reader.readShort()
 *         self.actionX = reader.readShort()
 *         self.actionY = reader.readShort()             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         data = reader.read(size)
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionY = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":498
 *         self.actionX = reader.readShort()
 *         self.actionY = reader.readShort()
 *         size = reader.readInt()             # <<<<<<<<<<<<<<
 *         data = reader.read(size)
 *         try:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":499
 *         self.actionY = reader.readShort()
 *         size = reader.readInt()
 *         data = reader.read(size)             # <<<<<<<<<<<<<<
 *         try:
 *             self.data = zlib.decompress(data)
 */
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_v_size); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_8.__pyx_n = 1;
  __pyx_t_8.size = __pyx_t_6;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->read(__pyx_v_reader, 0, &__pyx_t_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_data = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":500
 *         size = reader.readInt()
 *         data = reader.read(size)
 *         try:             # <<<<<<<<<<<<<<
 *             self.data = zlib.decompress(data)
 *             self.flash = True
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_11);
    /*try:*/ {

      /* "mmfparser\data\chunkloaders\imagebank.pyx":501
 *         data = reader.read(size)
 *         try:
 *             self.data = zlib.decompress(data)             # <<<<<<<<<<<<<<
 *             self.flash = True
 *         except zlib.error:
 */
      __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_zlib); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decompress); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_2) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_data); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
        __Pyx_INCREF(__pyx_v_data);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_data);
        __Pyx_GIVEREF(__pyx_v_data);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GIVEREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_v_self->data);
      __Pyx_DECREF(__pyx_v_self->data);
      __pyx_v_self->data = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":502
 *         try:
 *             self.data = zlib.decompress(data)
 *             self.flash = True             # <<<<<<<<<<<<<<
 *         except zlib.error:
 *             self.data = data
 */
      __pyx_v_self->flash = 1;
    }
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    goto __pyx_L11_try_end;
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":503
 *             self.data = zlib.decompress(data)
 *             self.flash = True
 *         except zlib.error:             # <<<<<<<<<<<<<<
 *             self.data = data
 *             self.flash = False
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_zlib); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_error); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = PyErr_ExceptionMatches(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_6) {
      __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":504
 *             self.flash = True
 *         except zlib.error:
 *             self.data = data             # <<<<<<<<<<<<<<
 *             self.flash = False
 * 
 */
      __Pyx_INCREF(__pyx_v_data);
      __Pyx_GIVEREF(__pyx_v_data);
      __Pyx_GOTREF(__pyx_v_self->data);
      __Pyx_DECREF(__pyx_v_self->data);
      __pyx_v_self->data = __pyx_v_data;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":505
 *         except zlib.error:
 *             self.data = data
 *             self.flash = False             # <<<<<<<<<<<<<<
 * 
 *     def write(self, reader):
 */
      __pyx_v_self->flash = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L5_exception_handled;
    }
    goto __pyx_L6_except_error;
    __pyx_L6_except_error:;
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
    goto __pyx_L1_error;
    __pyx_L5_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
    __pyx_L11_try_end:;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":489
 *         bint flash
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.handle = reader.readShort()
 *         if self.settings.get('withSize', False):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":507
 *             self.flash = False
 * 
 *     def write(self, reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.handle)
 *         if self.settings.get('withSize', False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_2write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_reader));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":508
 * 
 *     def write(self, reader):
 *         reader.writeShort(self.handle)             # <<<<<<<<<<<<<<
 *         if self.settings.get('withSize', False):
 *             reader.writeShort(self.width)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->handle); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":509
 *     def write(self, reader):
 *         reader.writeShort(self.handle)
 *         if self.settings.get('withSize', False):             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.width)
 *             reader.writeShort(self.height)
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_withSize, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":510
 *         reader.writeShort(self.handle)
 *         if self.settings.get('withSize', False):
 *             reader.writeShort(self.width)             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.height)
 *         reader.writeShort(self.xHotspot)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":511
 *         if self.settings.get('withSize', False):
 *             reader.writeShort(self.width)
 *             reader.writeShort(self.height)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.xHotspot)
 *         reader.writeShort(self.yHotspot)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":512
 *             reader.writeShort(self.width)
 *             reader.writeShort(self.height)
 *         reader.writeShort(self.xHotspot)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.yHotspot)
 *         reader.writeShort(self.actionX)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->xHotspot); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":513
 *             reader.writeShort(self.height)
 *         reader.writeShort(self.xHotspot)
 *         reader.writeShort(self.yHotspot)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.actionX)
 *         reader.writeShort(self.actionY)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->yHotspot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":514
 *         reader.writeShort(self.xHotspot)
 *         reader.writeShort(self.yHotspot)
 *         reader.writeShort(self.actionX)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.actionY)
 *         reader.writeInt(len(self.data))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->actionX); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":515
 *         reader.writeShort(self.yHotspot)
 *         reader.writeShort(self.actionX)
 *         reader.writeShort(self.actionY)             # <<<<<<<<<<<<<<
 *         reader.writeInt(len(self.data))
 *         reader.write(self.data)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->actionY); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":516
 *         reader.writeShort(self.actionX)
 *         reader.writeShort(self.actionY)
 *         reader.writeInt(len(self.data))             # <<<<<<<<<<<<<<
 *         reader.write(self.data)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __pyx_v_self->data;
  __Pyx_INCREF(__pyx_t_5);
  __pyx_t_7 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":517
 *         reader.writeShort(self.actionY)
 *         reader.writeInt(len(self.data))
 *         reader.write(self.data)             # <<<<<<<<<<<<<<
 * 
 *     def createDisplay(self, *arg, **kw):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->data); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(__pyx_v_self->data);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_self->data);
    __Pyx_GIVEREF(__pyx_v_self->data);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":507
 *             self.flash = False
 * 
 *     def write(self, reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.handle)
 *         if self.settings.get('withSize', False):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":519
 *         reader.write(self.data)
 * 
 *     def createDisplay(self, *arg, **kw):             # <<<<<<<<<<<<<<
 *         if self.flash:
 *             from mmfparser.player.sprite import ImageData
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5createDisplay(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5createDisplay(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_arg = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kw = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createDisplay (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "createDisplay", 1))) return NULL;
  __pyx_v_kw = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_arg = __pyx_args;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4createDisplay(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), __pyx_v_arg, __pyx_v_kw);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_XDECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4createDisplay(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_arg, CYTHON_UNUSED PyObject *__pyx_v_kw) {
  PyObject *__pyx_v_ImageData = NULL;
  PyObject *__pyx_v_newImage = NULL;
  PyObject *__pyx_v_load_image = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createDisplay", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":520
 * 
 *     def createDisplay(self, *arg, **kw):
 *         if self.flash:             # <<<<<<<<<<<<<<
 *             from mmfparser.player.sprite import ImageData
 *             newImage = ImageData(self.width, self.height, 'ARGB',
 */
  __pyx_t_1 = (__pyx_v_self->flash != 0);
  if (__pyx_t_1) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":521
 *     def createDisplay(self, *arg, **kw):
 *         if self.flash:
 *             from mmfparser.player.sprite import ImageData             # <<<<<<<<<<<<<<
 *             newImage = ImageData(self.width, self.height, 'ARGB',
 *                 self.data, self.width * -4, None)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_ImageData);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_ImageData);
    __Pyx_GIVEREF(__pyx_n_s_ImageData);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_mmfparser_player_sprite, __pyx_t_2, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_ImageData); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v_ImageData = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":522
 *         if self.flash:
 *             from mmfparser.player.sprite import ImageData
 *             newImage = ImageData(self.width, self.height, 'ARGB',             # <<<<<<<<<<<<<<
 *                 self.data, self.width * -4, None)
 *         else:
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);

    /* "mmfparser\data\chunkloaders\imagebank.pyx":523
 *             from mmfparser.player.sprite import ImageData
 *             newImage = ImageData(self.width, self.height, 'ARGB',
 *                 self.data, self.width * -4, None)             # <<<<<<<<<<<<<<
 *         else:
 *             from mmfparser.player.common import load_image
 */
    __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_self->width * -4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_ImageData);
    __pyx_t_6 = __pyx_v_ImageData; __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    __pyx_t_9 = PyTuple_New(6+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
    }
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_n_s_ARGB);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_n_s_ARGB);
    __Pyx_GIVEREF(__pyx_n_s_ARGB);
    __Pyx_INCREF(__pyx_v_self->data);
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_v_self->data);
    __Pyx_GIVEREF(__pyx_v_self->data);
    PyTuple_SET_ITEM(__pyx_t_9, 4+__pyx_t_8, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_INCREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_9, 5+__pyx_t_8, Py_None);
    __Pyx_GIVEREF(Py_None);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_newImage = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":525
 *                 self.data, self.width * -4, None)
 *         else:
 *             from mmfparser.player.common import load_image             # <<<<<<<<<<<<<<
 *             newImage = load_image(StringIO(self.data))
 *         newImage.anchor_x = self.xHotspot
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_load_image);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_load_image);
    __Pyx_GIVEREF(__pyx_n_s_load_image);
    __pyx_t_6 = __Pyx_Import(__pyx_n_s_mmfparser_player_common, __pyx_t_3, -1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_6, __pyx_n_s_load_image); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_load_image = __pyx_t_3;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":526
 *         else:
 *             from mmfparser.player.common import load_image
 *             newImage = load_image(StringIO(self.data))             # <<<<<<<<<<<<<<
 *         newImage.anchor_x = self.xHotspot
 *         newImage.anchor_y = self.height - self.yHotspot
 */
    __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_StringIO); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_self->data); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_v_self->data);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_self->data);
      __Pyx_GIVEREF(__pyx_v_self->data);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_v_load_image);
    __pyx_t_9 = __pyx_v_load_image; __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_newImage = __pyx_t_6;
    __pyx_t_6 = 0;
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":527
 *             from mmfparser.player.common import load_image
 *             newImage = load_image(StringIO(self.data))
 *         newImage.anchor_x = self.xHotspot             # <<<<<<<<<<<<<<
 *         newImage.anchor_y = self.height - self.yHotspot
 *         return newImage
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->xHotspot); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_newImage, __pyx_n_s_anchor_x, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":528
 *             newImage = load_image(StringIO(self.data))
 *         newImage.anchor_x = self.xHotspot
 *         newImage.anchor_y = self.height - self.yHotspot             # <<<<<<<<<<<<<<
 *         return newImage
 * 
 */
  __pyx_t_6 = __Pyx_PyInt_From_int((__pyx_v_self->height - __pyx_v_self->yHotspot)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_newImage, __pyx_n_s_anchor_y, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":529
 *         newImage.anchor_x = self.xHotspot
 *         newImage.anchor_y = self.height - self.yHotspot
 *         return newImage             # <<<<<<<<<<<<<<
 * 
 *     def getImageData(self, *arg, **kw):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_newImage);
  __pyx_r = __pyx_v_newImage;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":519
 *         reader.write(self.data)
 * 
 *     def createDisplay(self, *arg, **kw):             # <<<<<<<<<<<<<<
 *         if self.flash:
 *             from mmfparser.player.sprite import ImageData
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.createDisplay", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ImageData);
  __Pyx_XDECREF(__pyx_v_newImage);
  __Pyx_XDECREF(__pyx_v_load_image);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":531
 *         return newImage
 * 
 *     def getImageData(self, *arg, **kw):             # <<<<<<<<<<<<<<
 *         from mmfparser.image import Image
 *         img = Image(data = self.data)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7getImageData(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7getImageData(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_arg = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kw = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImageData (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "getImageData", 1))) return NULL;
  __pyx_v_kw = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_arg = __pyx_args;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6getImageData(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), __pyx_v_arg, __pyx_v_kw);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_XDECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6getImageData(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_arg, CYTHON_UNUSED PyObject *__pyx_v_kw) {
  PyObject *__pyx_v_Image = NULL;
  PyObject *__pyx_v_img = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImageData", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":532
 * 
 *     def getImageData(self, *arg, **kw):
 *         from mmfparser.image import Image             # <<<<<<<<<<<<<<
 *         img = Image(data = self.data)
 *         return img.get_data()
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Image);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Image);
  __Pyx_GIVEREF(__pyx_n_s_Image);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_image, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Image); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_Image = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":533
 *     def getImageData(self, *arg, **kw):
 *         from mmfparser.image import Image
 *         img = Image(data = self.data)             # <<<<<<<<<<<<<<
 *         return img.get_data()
 * 
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_data, __pyx_v_self->data) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_v_Image, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_img = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":534
 *         from mmfparser.image import Image
 *         img = Image(data = self.data)
 *         return img.get_data()             # <<<<<<<<<<<<<<
 * 
 * cdef class ImageBank(DataLoader):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_img, __pyx_n_s_get_data); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":531
 *         return newImage
 * 
 *     def getImageData(self, *arg, **kw):             # <<<<<<<<<<<<<<
 *         from mmfparser.image import Image
 *         img = Image(data = self.data)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.getImageData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_Image);
  __Pyx_XDECREF(__pyx_v_img);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":482
 * cdef class JavaImage(DataLoader):
 *     cdef public:
 *         int handle             # <<<<<<<<<<<<<<
 *         int xHotspot, yHotspot
 *         int actionX, actionY
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->handle); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.handle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->handle = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.handle.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":483
 *     cdef public:
 *         int handle
 *         int xHotspot, yHotspot             # <<<<<<<<<<<<<<
 *         int actionX, actionY
 *         int width, height
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->xHotspot); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.xHotspot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->xHotspot = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.xHotspot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->yHotspot); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.yHotspot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->yHotspot = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.yHotspot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":484
 *         int handle
 *         int xHotspot, yHotspot
 *         int actionX, actionY             # <<<<<<<<<<<<<<
 *         int width, height
 *         object data
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->actionX); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.actionX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionX = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.actionX.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->actionY); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.actionY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->actionY = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.actionY.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":485
 *         int xHotspot, yHotspot
 *         int actionX, actionY
 *         int width, height             # <<<<<<<<<<<<<<
 *         object data
 *         bint flash
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":486
 *         int actionX, actionY
 *         int width, height
 *         object data             # <<<<<<<<<<<<<<
 *         bint flash
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->data);
  __pyx_r = __pyx_v_self->data;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->data);
  __Pyx_DECREF(__pyx_v_self->data);
  __pyx_v_self->data = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->data);
  __Pyx_DECREF(__pyx_v_self->data);
  __pyx_v_self->data = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":487
 *         int width, height
 *         object data
 *         bint flash             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->flash); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.flash.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->flash = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.JavaImage.flash.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":541
 * 
 *     @property
 *     def items(self):             # <<<<<<<<<<<<<<
 *         return self.itemDict.values()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_1items(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_1items(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("items (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_items(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_items(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("items", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":542
 *     @property
 *     def items(self):
 *         return self.itemDict.values()             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->itemDict == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "values");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_Values(__pyx_v_self->itemDict); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":541
 * 
 *     @property
 *     def items(self):             # <<<<<<<<<<<<<<
 *         return self.itemDict.values()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":544
 *         return self.itemDict.values()
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.itemDict = {}
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_3initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_3initialize)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":545
 * 
 *     cpdef initialize(self):
 *         self.itemDict = {}             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->itemDict);
  __Pyx_DECREF(__pyx_v_self->itemDict);
  __pyx_v_self->itemDict = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":544
 *         return self.itemDict.values()
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.itemDict = {}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_3initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_3initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_2initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_2initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":547
 *         self.itemDict = {}
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         cdef bint java = self.settings.get('java', False)
 *         cdef int build = self.settings['build']
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_5read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  int __pyx_v_java;
  int __pyx_v_build;
  CYTHON_UNUSED int __pyx_v_i;
  int __pyx_v_numberOfItems;
  PyObject *__pyx_v_path = NULL;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_newReader = NULL;
  PyObject *__pyx_v_bank = NULL;
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_v_newItem = NULL;
  int __pyx_v_itemsInBank;
  int __pyx_v_itemsToRead;
  int __pyx_v_currentPosition;
  PyObject *__pyx_v_itemDict = NULL;
  CYTHON_UNUSED int __pyx_v__;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_5read)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser\data\chunkloaders\imagebank.pyx":548
 * 
 *     cpdef read(self, ByteReader reader):
 *         cdef bint java = self.settings.get('java', False)             # <<<<<<<<<<<<<<
 *         cdef int build = self.settings['build']
 *         cdef int i
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_java, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_java = __pyx_t_6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":549
 *     cpdef read(self, ByteReader reader):
 *         cdef bint java = self.settings.get('java', False)
 *         cdef int build = self.settings['build']             # <<<<<<<<<<<<<<
 *         cdef int i
 *         cdef int numberOfItems
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->__pyx_base.settings, __pyx_n_s_build); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_build = __pyx_t_7;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":552
 *         cdef int i
 *         cdef int numberOfItems
 *         if not java:             # <<<<<<<<<<<<<<
 *             if self.settings.get('debug', False):
 *                 path = self.readString(reader)
 */
  __pyx_t_6 = ((!(__pyx_v_java != 0)) != 0);
  if (__pyx_t_6) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":553
 *         cdef int numberOfItems
 *         if not java:
 *             if self.settings.get('debug', False):             # <<<<<<<<<<<<<<
 *                 path = self.readString(reader)
 *                 newReader = ByteReader(open(path, 'rb'))
 */
    if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_debug, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_6) {

      /* "mmfparser\data\chunkloaders\imagebank.pyx":554
 *         if not java:
 *             if self.settings.get('debug', False):
 *                 path = self.readString(reader)             # <<<<<<<<<<<<<<
 *                 newReader = ByteReader(open(path, 'rb'))
 *                 newReader.skipBytes(4)
 */
      __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.readString(((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_v_self), __pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_v_path = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":555
 *             if self.settings.get('debug', False):
 *                 path = self.readString(reader)
 *                 newReader = ByteReader(open(path, 'rb'))             # <<<<<<<<<<<<<<
 *                 newReader.skipBytes(4)
 *                 bank = self.new(AGMIBank, newReader)
 */
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_path);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_path);
      __Pyx_GIVEREF(__pyx_v_path);
      __Pyx_INCREF(__pyx_n_s_rb);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_rb);
      __Pyx_GIVEREF(__pyx_n_s_rb);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_10bytereader_ByteReader)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_newReader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":556
 *                 path = self.readString(reader)
 *                 newReader = ByteReader(open(path, 'rb'))
 *                 newReader.skipBytes(4)             # <<<<<<<<<<<<<<
 *                 bank = self.new(AGMIBank, newReader)
 *                 for item in bank.items:
 */
      ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_newReader->__pyx_vtab)->skipBytes(__pyx_v_newReader, 4, 0);

      /* "mmfparser\data\chunkloaders\imagebank.pyx":557
 *                 newReader = ByteReader(open(path, 'rb'))
 *                 newReader.skipBytes(4)
 *                 bank = self.new(AGMIBank, newReader)             # <<<<<<<<<<<<<<
 *                 for item in bank.items:
 *                     self.itemDict[item.handle] = item
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_AGMIBank); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_4 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_5) {
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_8, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __Pyx_INCREF(((PyObject *)__pyx_v_newReader));
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_8, ((PyObject *)__pyx_v_newReader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_newReader));
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_bank = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":558
 *                 newReader.skipBytes(4)
 *                 bank = self.new(AGMIBank, newReader)
 *                 for item in bank.items:             # <<<<<<<<<<<<<<
 *                     self.itemDict[item.handle] = item
 *                 return
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_bank, __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
        __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_1))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_9(__pyx_t_1);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":559
 *                 bank = self.new(AGMIBank, newReader)
 *                 for item in bank.items:
 *                     self.itemDict[item.handle] = item             # <<<<<<<<<<<<<<
 *                 return
 *             numberOfItems = reader.readInt()
 */
        if (unlikely(__pyx_v_self->itemDict == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_item, __pyx_n_s_handle); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        if (unlikely(PyDict_SetItem(__pyx_v_self->itemDict, __pyx_t_2, __pyx_v_item) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":558
 *                 newReader.skipBytes(4)
 *                 bank = self.new(AGMIBank, newReader)
 *                 for item in bank.items:             # <<<<<<<<<<<<<<
 *                     self.itemDict[item.handle] = item
 *                 return
 */
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":560
 *                 for item in bank.items:
 *                     self.itemDict[item.handle] = item
 *                 return             # <<<<<<<<<<<<<<
 *             numberOfItems = reader.readInt()
 *             for i in range(numberOfItems):
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_r = Py_None; __Pyx_INCREF(Py_None);
      goto __pyx_L0;
    }

    /* "mmfparser\data\chunkloaders\imagebank.pyx":561
 *                     self.itemDict[item.handle] = item
 *                 return
 *             numberOfItems = reader.readInt()             # <<<<<<<<<<<<<<
 *             for i in range(numberOfItems):
 *                 newItem = self.new(ImageItem, reader)
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_numberOfItems = __pyx_t_7;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":562
 *                 return
 *             numberOfItems = reader.readInt()
 *             for i in range(numberOfItems):             # <<<<<<<<<<<<<<
 *                 newItem = self.new(ImageItem, reader)
 *                 if build >= 284:
 */
    __pyx_t_7 = __pyx_v_numberOfItems;
    for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_7; __pyx_t_10+=1) {
      __pyx_v_i = __pyx_t_10;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":563
 *             numberOfItems = reader.readInt()
 *             for i in range(numberOfItems):
 *                 newItem = self.new(ImageItem, reader)             # <<<<<<<<<<<<<<
 *                 if build >= 284:
 *                     newItem.handle -= 1
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_3 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_4) {
        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem)));
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_8, ((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem)));
      __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem)));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_8, ((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_newItem, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":564
 *             for i in range(numberOfItems):
 *                 newItem = self.new(ImageItem, reader)
 *                 if build >= 284:             # <<<<<<<<<<<<<<
 *                     newItem.handle -= 1
 *                 self.itemDict[newItem.handle] = newItem
 */
      __pyx_t_6 = ((__pyx_v_build >= 284) != 0);
      if (__pyx_t_6) {

        /* "mmfparser\data\chunkloaders\imagebank.pyx":565
 *                 newItem = self.new(ImageItem, reader)
 *                 if build >= 284:
 *                     newItem.handle -= 1             # <<<<<<<<<<<<<<
 *                 self.itemDict[newItem.handle] = newItem
 * 
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_newItem, __pyx_n_s_handle); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = PyNumber_InPlaceSubtract(__pyx_t_1, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__Pyx_PyObject_SetAttrStr(__pyx_v_newItem, __pyx_n_s_handle, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        goto __pyx_L9;
      }
      __pyx_L9:;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":566
 *                 if build >= 284:
 *                     newItem.handle -= 1
 *                 self.itemDict[newItem.handle] = newItem             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
      if (unlikely(__pyx_v_self->itemDict == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_newItem, __pyx_n_s_handle); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(PyDict_SetItem(__pyx_v_self->itemDict, __pyx_t_2, __pyx_v_newItem) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    goto __pyx_L3;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":569
 * 
 *         else:
 *             numberOfItems = reader.readShort()             # <<<<<<<<<<<<<<
 *             itemsInBank = reader.readShort()
 *             itemsToRead = itemsInBank
 */
    __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_numberOfItems = __pyx_t_7;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":570
 *         else:
 *             numberOfItems = reader.readShort()
 *             itemsInBank = reader.readShort()             # <<<<<<<<<<<<<<
 *             itemsToRead = itemsInBank
 * 
 */
    __pyx_t_7 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_7 == -10 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_itemsInBank = __pyx_t_7;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":571
 *             numberOfItems = reader.readShort()
 *             itemsInBank = reader.readShort()
 *             itemsToRead = itemsInBank             # <<<<<<<<<<<<<<
 * 
 *             currentPosition = reader.tell()
 */
    __pyx_v_itemsToRead = __pyx_v_itemsInBank;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":573
 *             itemsToRead = itemsInBank
 * 
 *             currentPosition = reader.tell()             # <<<<<<<<<<<<<<
 *             try:
 *                 self.itemDict = itemDict = {}
 */
    __pyx_v_currentPosition = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0);

    /* "mmfparser\data\chunkloaders\imagebank.pyx":574
 * 
 *             currentPosition = reader.tell()
 *             try:             # <<<<<<<<<<<<<<
 *                 self.itemDict = itemDict = {}
 *                 for _ in xrange(itemsToRead):
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_12);
      __Pyx_XGOTREF(__pyx_t_13);
      /*try:*/ {

        /* "mmfparser\data\chunkloaders\imagebank.pyx":575
 *             currentPosition = reader.tell()
 *             try:
 *                 self.itemDict = itemDict = {}             # <<<<<<<<<<<<<<
 *                 for _ in xrange(itemsToRead):
 *                     newItem = self.new(JavaImage, reader, withSize = True)
 */
        __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_v_self->itemDict);
        __Pyx_DECREF(__pyx_v_self->itemDict);
        __pyx_v_self->itemDict = __pyx_t_2;
        __Pyx_INCREF(__pyx_t_2);
        __pyx_v_itemDict = __pyx_t_2;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":576
 *             try:
 *                 self.itemDict = itemDict = {}
 *                 for _ in xrange(itemsToRead):             # <<<<<<<<<<<<<<
 *                     newItem = self.new(JavaImage, reader, withSize = True)
 *                     itemDict[newItem.handle] = newItem
 */
        __pyx_t_7 = __pyx_v_itemsToRead;
        for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_7; __pyx_t_10+=1) {
          __pyx_v__ = __pyx_t_10;

          /* "mmfparser\data\chunkloaders\imagebank.pyx":577
 *                 self.itemDict = itemDict = {}
 *                 for _ in xrange(itemsToRead):
 *                     newItem = self.new(JavaImage, reader, withSize = True)             # <<<<<<<<<<<<<<
 *                     itemDict[newItem.handle] = newItem
 *             except struct.error:
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)));
          PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)));
          __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)));
          __Pyx_INCREF(((PyObject *)__pyx_v_reader));
          PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_reader));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_withSize, Py_True) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF_SET(__pyx_v_newItem, __pyx_t_4);
          __pyx_t_4 = 0;

          /* "mmfparser\data\chunkloaders\imagebank.pyx":578
 *                 for _ in xrange(itemsToRead):
 *                     newItem = self.new(JavaImage, reader, withSize = True)
 *                     itemDict[newItem.handle] = newItem             # <<<<<<<<<<<<<<
 *             except struct.error:
 *                 reader.seek(currentPosition)
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_newItem, __pyx_n_s_handle); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __Pyx_GOTREF(__pyx_t_4);
          if (unlikely(PyDict_SetItem(__pyx_v_itemDict, __pyx_t_4, __pyx_v_newItem) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L10_error;}
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
      }
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      goto __pyx_L17_try_end;
      __pyx_L10_error:;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":579
 *                     newItem = self.new(JavaImage, reader, withSize = True)
 *                     itemDict[newItem.handle] = newItem
 *             except struct.error:             # <<<<<<<<<<<<<<
 *                 reader.seek(currentPosition)
 *                 self.itemDict = itemDict = {}
 */
      __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_error); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = PyErr_ExceptionMatches(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_4, &__pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GOTREF(__pyx_t_1);

        /* "mmfparser\data\chunkloaders\imagebank.pyx":580
 *                     itemDict[newItem.handle] = newItem
 *             except struct.error:
 *                 reader.seek(currentPosition)             # <<<<<<<<<<<<<<
 *                 self.itemDict = itemDict = {}
 *                 for _ in xrange(itemsToRead):
 */
        ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_v_currentPosition, 0, NULL);

        /* "mmfparser\data\chunkloaders\imagebank.pyx":581
 *             except struct.error:
 *                 reader.seek(currentPosition)
 *                 self.itemDict = itemDict = {}             # <<<<<<<<<<<<<<
 *                 for _ in xrange(itemsToRead):
 *                     newItem = self.new(JavaImage, reader, withSize = False)
 */
        __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_v_self->itemDict);
        __Pyx_DECREF(__pyx_v_self->itemDict);
        __pyx_v_self->itemDict = __pyx_t_2;
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_XDECREF_SET(__pyx_v_itemDict, __pyx_t_2);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "mmfparser\data\chunkloaders\imagebank.pyx":582
 *                 reader.seek(currentPosition)
 *                 self.itemDict = itemDict = {}
 *                 for _ in xrange(itemsToRead):             # <<<<<<<<<<<<<<
 *                     newItem = self.new(JavaImage, reader, withSize = False)
 *                     itemDict[newItem.handle] = newItem
 */
        __pyx_t_7 = __pyx_v_itemsToRead;
        for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_7; __pyx_t_10+=1) {
          __pyx_v__ = __pyx_t_10;

          /* "mmfparser\data\chunkloaders\imagebank.pyx":583
 *                 self.itemDict = itemDict = {}
 *                 for _ in xrange(itemsToRead):
 *                     newItem = self.new(JavaImage, reader, withSize = False)             # <<<<<<<<<<<<<<
 *                     itemDict[newItem.handle] = newItem
 * 
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)));
          PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)));
          __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)));
          __Pyx_INCREF(((PyObject *)__pyx_v_reader));
          PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_reader));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
          __pyx_t_14 = PyDict_New(); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __Pyx_GOTREF(__pyx_t_14);
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_withSize, Py_False) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, __pyx_t_14); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_XDECREF_SET(__pyx_v_newItem, __pyx_t_15);
          __pyx_t_15 = 0;

          /* "mmfparser\data\chunkloaders\imagebank.pyx":584
 *                 for _ in xrange(itemsToRead):
 *                     newItem = self.new(JavaImage, reader, withSize = False)
 *                     itemDict[newItem.handle] = newItem             # <<<<<<<<<<<<<<
 * 
 *     def write(self, reader):
 */
          __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_newItem, __pyx_n_s_handle); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __Pyx_GOTREF(__pyx_t_15);
          if (unlikely(PyDict_SetItem(__pyx_v_itemDict, __pyx_t_15, __pyx_v_newItem) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L12_except_error;}
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L11_exception_handled;
      }
      goto __pyx_L12_except_error;
      __pyx_L12_except_error:;
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_XGIVEREF(__pyx_t_12);
      __Pyx_XGIVEREF(__pyx_t_13);
      __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
      goto __pyx_L1_error;
      __pyx_L11_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_XGIVEREF(__pyx_t_12);
      __Pyx_XGIVEREF(__pyx_t_13);
      __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
      __pyx_L17_try_end:;
    }
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":547
 *         self.itemDict = {}
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         cdef bint java = self.settings.get('java', False)
 *         cdef int build = self.settings['build']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_path);
  __Pyx_XDECREF((PyObject *)__pyx_v_newReader);
  __Pyx_XDECREF(__pyx_v_bank);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XDECREF(__pyx_v_newItem);
  __Pyx_XDECREF(__pyx_v_itemDict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_5read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_5read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_4read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_4read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":586
 *                     itemDict[newItem.handle] = newItem
 * 
 *     def write(self, reader):             # <<<<<<<<<<<<<<
 *         java = self.settings.get('java', False)
 *         if not java:
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_6write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self), ((PyObject *)__pyx_v_reader));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, PyObject *__pyx_v_reader) {
  PyObject *__pyx_v_java = NULL;
  PyObject *__pyx_v_offsetDict = NULL;
  PyObject *__pyx_v_offsets = NULL;
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":587
 * 
 *     def write(self, reader):
 *         java = self.settings.get('java', False)             # <<<<<<<<<<<<<<
 *         if not java:
 *             offsetDict = {}
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "get");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_java, Py_False); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_java = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":588
 *     def write(self, reader):
 *         java = self.settings.get('java', False)
 *         if not java:             # <<<<<<<<<<<<<<
 *             offsetDict = {}
 *             self.offsets = offsets = []
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_java); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((!__pyx_t_2) != 0);
  if (__pyx_t_3) {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":589
 *         java = self.settings.get('java', False)
 *         if not java:
 *             offsetDict = {}             # <<<<<<<<<<<<<<
 *             self.offsets = offsets = []
 *             reader.writeInt(len(self.items))
 */
    __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_offsetDict = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":590
 *         if not java:
 *             offsetDict = {}
 *             self.offsets = offsets = []             # <<<<<<<<<<<<<<
 *             reader.writeInt(len(self.items))
 *             for item in self.items:
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_offsets, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v_offsets = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":591
 *             offsetDict = {}
 *             self.offsets = offsets = []
 *             reader.writeInt(len(self.items))             # <<<<<<<<<<<<<<
 *             for item in self.items:
 *                 offsetDict[item.handle] = reader.tell() + 4
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_items); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":592
 *             self.offsets = offsets = []
 *             reader.writeInt(len(self.items))
 *             for item in self.items:             # <<<<<<<<<<<<<<
 *                 offsetDict[item.handle] = reader.tell() + 4
 *                 item.write(reader)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_items); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_4 = __pyx_t_1; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":593
 *             reader.writeInt(len(self.items))
 *             for item in self.items:
 *                 offsetDict[item.handle] = reader.tell() + 4             # <<<<<<<<<<<<<<
 *                 item.write(reader)
 *             for key in sorted(offsetDict.keys()):
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_tell); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Add(__pyx_t_1, __pyx_int_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_item, __pyx_n_s_handle); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_SetItem(__pyx_v_offsetDict, __pyx_t_1, __pyx_t_8) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":594
 *             for item in self.items:
 *                 offsetDict[item.handle] = reader.tell() + 4
 *                 item.write(reader)             # <<<<<<<<<<<<<<
 *             for key in sorted(offsetDict.keys()):
 *                 offsets.append(offsetDict[key])
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_item, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_reader); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
      } else {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_INCREF(__pyx_v_reader);
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_reader);
        __Pyx_GIVEREF(__pyx_v_reader);
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":592
 *             self.offsets = offsets = []
 *             reader.writeInt(len(self.items))
 *             for item in self.items:             # <<<<<<<<<<<<<<
 *                 offsetDict[item.handle] = reader.tell() + 4
 *                 item.write(reader)
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":595
 *                 offsetDict[item.handle] = reader.tell() + 4
 *                 item.write(reader)
 *             for key in sorted(offsetDict.keys()):             # <<<<<<<<<<<<<<
 *                 offsets.append(offsetDict[key])
 *         else:
 */
    __pyx_t_4 = __Pyx_PyDict_Keys(__pyx_v_offsetDict); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_8 = __pyx_t_4; __Pyx_INCREF(__pyx_t_8); __pyx_t_6 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_9(__pyx_t_8);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":596
 *                 item.write(reader)
 *             for key in sorted(offsetDict.keys()):
 *                 offsets.append(offsetDict[key])             # <<<<<<<<<<<<<<
 *         else:
 *             reader.writeShort(len(self.items))
 */
      __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_offsetDict, __pyx_v_key); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_offsets, __pyx_t_4); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":595
 *                 offsetDict[item.handle] = reader.tell() + 4
 *                 item.write(reader)
 *             for key in sorted(offsetDict.keys()):             # <<<<<<<<<<<<<<
 *                 offsets.append(offsetDict[key])
 *         else:
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "mmfparser\data\chunkloaders\imagebank.pyx":598
 *                 offsets.append(offsetDict[key])
 *         else:
 *             reader.writeShort(len(self.items))             # <<<<<<<<<<<<<<
 *             reader.writeShort(len(self.items))
 *             for item in self.items:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_items); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_8);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":599
 *         else:
 *             reader.writeShort(len(self.items))
 *             reader.writeShort(len(self.items))             # <<<<<<<<<<<<<<
 *             for item in self.items:
 *                 item.write(reader)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_reader, __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_items); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_1) {
      __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_8);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mmfparser\data\chunkloaders\imagebank.pyx":600
 *             reader.writeShort(len(self.items))
 *             reader.writeShort(len(self.items))
 *             for item in self.items:             # <<<<<<<<<<<<<<
 *                 item.write(reader)
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_items); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
      __pyx_t_4 = __pyx_t_8; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_8); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_8); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_8 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_8)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_8);
      }
      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":601
 *             reader.writeShort(len(self.items))
 *             for item in self.items:
 *                 item.write(reader)             # <<<<<<<<<<<<<<
 * 
 *     def fromHandle(self, handle):
 */
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_item, __pyx_n_s_write); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_reader); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
      } else {
        __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_INCREF(__pyx_v_reader);
        PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_v_reader);
        __Pyx_GIVEREF(__pyx_v_reader);
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mmfparser\data\chunkloaders\imagebank.pyx":600
 *             reader.writeShort(len(self.items))
 *             reader.writeShort(len(self.items))
 *             for item in self.items:             # <<<<<<<<<<<<<<
 *                 item.write(reader)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":586
 *                     itemDict[newItem.handle] = newItem
 * 
 *     def write(self, reader):             # <<<<<<<<<<<<<<
 *         java = self.settings.get('java', False)
 *         if not java:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_java);
  __Pyx_XDECREF(__pyx_v_offsetDict);
  __Pyx_XDECREF(__pyx_v_offsets);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":603
 *                 item.write(reader)
 * 
 *     def fromHandle(self, handle):             # <<<<<<<<<<<<<<
 *         return self.itemDict[handle]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_9fromHandle(PyObject *__pyx_v_self, PyObject *__pyx_v_handle); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_9fromHandle(PyObject *__pyx_v_self, PyObject *__pyx_v_handle) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromHandle (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8fromHandle(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self), ((PyObject *)__pyx_v_handle));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8fromHandle(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, PyObject *__pyx_v_handle) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fromHandle", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":604
 * 
 *     def fromHandle(self, handle):
 *         return self.itemDict[handle]             # <<<<<<<<<<<<<<
 * 
 * from mmfparser.data.mfaloaders.imagebank import AGMIBank
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->itemDict == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->itemDict, __pyx_v_handle); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":603
 *                 item.write(reader)
 * 
 *     def fromHandle(self, handle):             # <<<<<<<<<<<<<<
 *         return self.itemDict[handle]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.fromHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\data\chunkloaders\imagebank.pyx":538
 * cdef class ImageBank(DataLoader):
 *     cdef public:
 *         dict itemDict             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->itemDict);
  __pyx_r = __pyx_v_self->itemDict;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->itemDict);
  __Pyx_DECREF(__pyx_v_self->itemDict);
  __pyx_v_self->itemDict = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.imagebank.ImageBank.itemDict.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->itemDict);
  __Pyx_DECREF(__pyx_v_self->itemDict);
  __pyx_v_self->itemDict = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser\common.pxd":23
 *     int Py_REFCNT(object v)
 * 
 * cdef inline object allocate_memory(int size, char ** i):             # <<<<<<<<<<<<<<
 *     if size < 0:
 *         size = 0
 */

static CYTHON_INLINE PyObject *__pyx_f_9mmfparser_6common_allocate_memory(int __pyx_v_size, char **__pyx_v_i) {
  PyObject *__pyx_v_ob = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("allocate_memory", 0);

  /* "mmfparser\common.pxd":24
 * 
 * cdef inline object allocate_memory(int size, char ** i):
 *     if size < 0:             # <<<<<<<<<<<<<<
 *         size = 0
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 */
  __pyx_t_1 = ((__pyx_v_size < 0) != 0);
  if (__pyx_t_1) {

    /* "mmfparser\common.pxd":25
 * cdef inline object allocate_memory(int size, char ** i):
 *     if size < 0:
 *         size = 0             # <<<<<<<<<<<<<<
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 *     i[0] = PyString_AS_STRING(ob)
 */
    __pyx_v_size = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "mmfparser\common.pxd":26
 *     if size < 0:
 *         size = 0
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)             # <<<<<<<<<<<<<<
 *     i[0] = PyString_AS_STRING(ob)
 *     return ob
 */
  __pyx_t_2 = PyString_FromStringAndSize(NULL, __pyx_v_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_ob = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mmfparser\common.pxd":27
 *         size = 0
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 *     i[0] = PyString_AS_STRING(ob)             # <<<<<<<<<<<<<<
 *     return ob
 */
  (__pyx_v_i[0]) = PyString_AS_STRING(__pyx_v_ob);

  /* "mmfparser\common.pxd":28
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 *     i[0] = PyString_AS_STRING(ob)
 *     return ob             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ob);
  __pyx_r = __pyx_v_ob;
  goto __pyx_L0;

  /* "mmfparser\common.pxd":23
 *     int Py_REFCNT(object v)
 * 
 * cdef inline object allocate_memory(int size, char ** i):             # <<<<<<<<<<<<<<
 *     if size < 0:
 *         size = 0
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.common.allocate_memory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ob);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem;
  p->flags = Py_None; Py_INCREF(Py_None);
  p->image = Py_None; Py_INCREF(Py_None);
  p->alpha = Py_None; Py_INCREF(Py_None);
  p->transparent = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->reader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None); Py_INCREF(Py_None);
  p->rawImage = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->flags);
  Py_CLEAR(p->image);
  Py_CLEAR(p->alpha);
  Py_CLEAR(p->transparent);
  Py_CLEAR(p->reader);
  Py_CLEAR(p->rawImage);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem)); if (e) return e;
  if (p->flags) {
    e = (*v)(p->flags, a); if (e) return e;
  }
  if (p->image) {
    e = (*v)(p->image, a); if (e) return e;
  }
  if (p->alpha) {
    e = (*v)(p->alpha, a); if (e) return e;
  }
  if (p->transparent) {
    e = (*v)(p->transparent, a); if (e) return e;
  }
  if (p->reader) {
    e = (*v)(((PyObject*)p->reader), a); if (e) return e;
  }
  if (p->rawImage) {
    e = (*v)(((PyObject*)p->rawImage), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem);
  tmp = ((PyObject*)p->flags);
  p->flags = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->image);
  p->image = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->alpha);
  p->alpha = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->transparent);
  p->transparent = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->reader);
  p->reader = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rawImage);
  p->rawImage = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_handle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_handle(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6handle_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_checksum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_checksum(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8checksum_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_references(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_references(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_10references_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_xHotspot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_xHotspot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8xHotspot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_yHotspot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_yHotspot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8yHotspot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionX(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionX_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionY(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7actionY_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_flags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_flags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5flags_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_image(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_image(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5image_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_alpha(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_alpha(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5alpha_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_indexed(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_indexed(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7indexed_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_graphicMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_graphicMode(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11graphicMode_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_transparent(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_transparent(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11transparent_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_reader(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_reader(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_6reader_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_rawImage(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_rawImage(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_8rawImage_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_pos(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_pos(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3pos_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_3read, METH_O, 0},
  {"load", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_5load, METH_NOARGS, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_7write, METH_O, 0},
  {"createDisplay", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_9createDisplay, METH_VARARGS|METH_KEYWORDS, 0},
  {"getImageData", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_11getImageData, METH_VARARGS|METH_KEYWORDS, 0},
  {"unload", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_13unload, METH_NOARGS, 0},
  {"getGraphicMode", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_15getGraphicMode, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem[] = {
  {(char *)"handle", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_handle, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_handle, 0, 0},
  {(char *)"checksum", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_checksum, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_checksum, 0, 0},
  {(char *)"references", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_references, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_references, 0, 0},
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_width, 0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_height, 0, 0},
  {(char *)"xHotspot", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_xHotspot, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_xHotspot, 0, 0},
  {(char *)"yHotspot", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_yHotspot, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_yHotspot, 0, 0},
  {(char *)"actionX", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionX, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionX, 0, 0},
  {(char *)"actionY", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionY, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_actionY, 0, 0},
  {(char *)"flags", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_flags, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_flags, 0, 0},
  {(char *)"image", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_image, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_image, 0, 0},
  {(char *)"alpha", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_alpha, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_alpha, 0, 0},
  {(char *)"indexed", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_indexed, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_indexed, 0, 0},
  {(char *)"graphicMode", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_graphicMode, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_graphicMode, 0, 0},
  {(char *)"transparent", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_transparent, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_transparent, 0, 0},
  {(char *)"reader", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_reader, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_reader, 0, 0},
  {(char *)"rawImage", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_rawImage, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_rawImage, 0, 0},
  {(char *)"pos", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_pos, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_pos, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.ImageItem", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)o);
  p->__pyx_vtab = __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_size(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_4size_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint[] = {
  {(char *)"size", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_size, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_size, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.BasePoint", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_Point __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_Point;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_Point(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *p;
  PyObject *o = __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_Point;
  if (unlikely(__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_5Point_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_Point[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.Point", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_Point, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_Point, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *p;
  PyObject *o = __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint;
  if (unlikely(__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.SixteenPoint", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *p;
  PyObject *o = __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint;
  if (unlikely(__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.FifteenPoint", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *p;
  PyObject *o = __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint;
  if (unlikely(__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.IndexPoint", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage;
  p->data = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->data);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage)); if (e) return e;
  if (p->data) {
    e = (*v)(p->data, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage);
  tmp = ((PyObject*)p->data);
  p->data = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_handle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_handle(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6handle_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_xHotspot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_xHotspot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8xHotspot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_yHotspot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_yHotspot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_8yHotspot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionX(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionX_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionY(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7actionY_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_data(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_data(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_4data_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_flash(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_flash(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5flash_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage[] = {
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_1read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_3write, METH_O, 0},
  {"createDisplay", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_5createDisplay, METH_VARARGS|METH_KEYWORDS, 0},
  {"getImageData", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_7getImageData, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage[] = {
  {(char *)"handle", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_handle, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_handle, 0, 0},
  {(char *)"xHotspot", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_xHotspot, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_xHotspot, 0, 0},
  {(char *)"yHotspot", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_yHotspot, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_yHotspot, 0, 0},
  {(char *)"actionX", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionX, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionX, 0, 0},
  {(char *)"actionY", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionY, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_actionY, 0, 0},
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_width, 0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_height, 0, 0},
  {(char *)"data", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_data, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_data, 0, 0},
  {(char *)"flash", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_flash, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_flash, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.JavaImage", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank;
  p->itemDict = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->itemDict);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank)); if (e) return e;
  if (p->itemDict) {
    e = (*v)(p->itemDict, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank);
  tmp = ((PyObject*)p->itemDict);
  p->itemDict = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_itemDict(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_itemDict(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_8itemDict_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank[] = {
  {"items", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_1items, METH_NOARGS, 0},
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_3initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_5read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_7write, METH_O, 0},
  {"fromHandle", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_9fromHandle, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank[] = {
  {(char *)"itemDict", __pyx_getprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_itemDict, __pyx_setprop_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_itemDict, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.imagebank.ImageBank", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "imagebank",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_ACE, __pyx_k_ACE, sizeof(__pyx_k_ACE), 0, 0, 1, 1},
  {&__pyx_n_s_AGMIBank, __pyx_k_AGMIBank, sizeof(__pyx_k_AGMIBank), 0, 0, 1, 1},
  {&__pyx_n_s_ARGB, __pyx_k_ARGB, sizeof(__pyx_k_ARGB), 0, 0, 1, 1},
  {&__pyx_n_s_Alpha, __pyx_k_Alpha, sizeof(__pyx_k_Alpha), 0, 0, 1, 1},
  {&__pyx_n_s_BitDict, __pyx_k_BitDict, sizeof(__pyx_k_BitDict), 0, 0, 1, 1},
  {&__pyx_n_s_IMAGE_FLAGS, __pyx_k_IMAGE_FLAGS, sizeof(__pyx_k_IMAGE_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_Image, __pyx_k_Image, sizeof(__pyx_k_Image), 0, 0, 1, 1},
  {&__pyx_n_s_ImageBank, __pyx_k_ImageBank, sizeof(__pyx_k_ImageBank), 0, 0, 1, 1},
  {&__pyx_n_s_ImageData, __pyx_k_ImageData, sizeof(__pyx_k_ImageData), 0, 0, 1, 1},
  {&__pyx_n_s_ImageItem, __pyx_k_ImageItem, sizeof(__pyx_k_ImageItem), 0, 0, 1, 1},
  {&__pyx_n_s_JavaImage, __pyx_k_JavaImage, sizeof(__pyx_k_JavaImage), 0, 0, 1, 1},
  {&__pyx_n_s_LZX, __pyx_k_LZX, sizeof(__pyx_k_LZX), 0, 0, 1, 1},
  {&__pyx_n_s_Mac, __pyx_k_Mac, sizeof(__pyx_k_Mac), 0, 0, 1, 1},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_RGBA, __pyx_k_RGBA, sizeof(__pyx_k_RGBA), 0, 0, 1, 1},
  {&__pyx_n_s_RLE, __pyx_k_RLE, sizeof(__pyx_k_RLE), 0, 0, 1, 1},
  {&__pyx_n_s_RLET, __pyx_k_RLET, sizeof(__pyx_k_RLET), 0, 0, 1, 1},
  {&__pyx_n_s_RLEW, __pyx_k_RLEW, sizeof(__pyx_k_RLEW), 0, 0, 1, 1},
  {&__pyx_n_s_StringIO, __pyx_k_StringIO, sizeof(__pyx_k_StringIO), 0, 0, 1, 1},
  {&__pyx_kp_s__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 0, 1, 0},
  {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
  {&__pyx_n_s_anchor_x, __pyx_k_anchor_x, sizeof(__pyx_k_anchor_x), 0, 0, 1, 1},
  {&__pyx_n_s_anchor_y, __pyx_k_anchor_y, sizeof(__pyx_k_anchor_y), 0, 0, 1, 1},
  {&__pyx_n_s_build, __pyx_k_build, sizeof(__pyx_k_build), 0, 0, 1, 1},
  {&__pyx_n_s_cStringIO, __pyx_k_cStringIO, sizeof(__pyx_k_cStringIO), 0, 0, 1, 1},
  {&__pyx_n_s_compress, __pyx_k_compress, sizeof(__pyx_k_compress), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
  {&__pyx_n_s_debug, __pyx_k_debug, sizeof(__pyx_k_debug), 0, 0, 1, 1},
  {&__pyx_n_s_decompress, __pyx_k_decompress, sizeof(__pyx_k_decompress), 0, 0, 1, 1},
  {&__pyx_n_s_error, __pyx_k_error, sizeof(__pyx_k_error), 0, 0, 1, 1},
  {&__pyx_n_s_frame, __pyx_k_frame, sizeof(__pyx_k_frame), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_getFlags, __pyx_k_getFlags, sizeof(__pyx_k_getFlags), 0, 0, 1, 1},
  {&__pyx_n_s_get_data, __pyx_k_get_data, sizeof(__pyx_k_get_data), 0, 0, 1, 1},
  {&__pyx_n_s_graphicModes, __pyx_k_graphicModes, sizeof(__pyx_k_graphicModes), 0, 0, 1, 1},
  {&__pyx_n_s_handle, __pyx_k_handle, sizeof(__pyx_k_handle), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_initialize, __pyx_k_initialize, sizeof(__pyx_k_initialize), 0, 0, 1, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_java, __pyx_k_java, sizeof(__pyx_k_java), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_load, __pyx_k_load, sizeof(__pyx_k_load), 0, 0, 1, 1},
  {&__pyx_n_s_loadImages, __pyx_k_loadImages, sizeof(__pyx_k_loadImages), 0, 0, 1, 1},
  {&__pyx_n_s_load_image, __pyx_k_load_image, sizeof(__pyx_k_load_image), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_bitdict, __pyx_k_mmfparser_bitdict, sizeof(__pyx_k_mmfparser_bitdict), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_data, __pyx_k_mmfparser_data, sizeof(__pyx_k_mmfparser_data), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_data_chunkloaders_apph, __pyx_k_mmfparser_data_chunkloaders_apph, sizeof(__pyx_k_mmfparser_data_chunkloaders_apph), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_data_mfaloaders_imageb, __pyx_k_mmfparser_data_mfaloaders_imageb, sizeof(__pyx_k_mmfparser_data_mfaloaders_imageb), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_image, __pyx_k_mmfparser_image, sizeof(__pyx_k_mmfparser_image), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_player_common, __pyx_k_mmfparser_player_common, sizeof(__pyx_k_mmfparser_player_common), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_player_sprite, __pyx_k_mmfparser_player_sprite, sizeof(__pyx_k_mmfparser_player_sprite), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_kp_s_not_supported, __pyx_k_not_supported, sizeof(__pyx_k_not_supported), 0, 0, 1, 0},
  {&__pyx_n_s_offsets, __pyx_k_offsets, sizeof(__pyx_k_offsets), 0, 0, 1, 1},
  {&__pyx_n_s_old, __pyx_k_old, sizeof(__pyx_k_old), 0, 0, 1, 1},
  {&__pyx_n_s_onepointfive, __pyx_k_onepointfive, sizeof(__pyx_k_onepointfive), 0, 0, 1, 1},
  {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {&__pyx_n_s_palette, __pyx_k_palette, sizeof(__pyx_k_palette), 0, 0, 1, 1},
  {&__pyx_n_s_property, __pyx_k_property, sizeof(__pyx_k_property), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rb, __pyx_k_rb, sizeof(__pyx_k_rb), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_setFlags, __pyx_k_setFlags, sizeof(__pyx_k_setFlags), 0, 0, 1, 1},
  {&__pyx_n_s_sorted, __pyx_k_sorted, sizeof(__pyx_k_sorted), 0, 0, 1, 1},
  {&__pyx_n_s_struct, __pyx_k_struct, sizeof(__pyx_k_struct), 0, 0, 1, 1},
  {&__pyx_n_s_tell, __pyx_k_tell, sizeof(__pyx_k_tell), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_unload, __pyx_k_unload, sizeof(__pyx_k_unload), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_withSize, __pyx_k_withSize, sizeof(__pyx_k_withSize), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_writeByte, __pyx_k_writeByte, sizeof(__pyx_k_writeByte), 0, 0, 1, 1},
  {&__pyx_n_s_writeColor, __pyx_k_writeColor, sizeof(__pyx_k_writeColor), 0, 0, 1, 1},
  {&__pyx_n_s_writeInt, __pyx_k_writeInt, sizeof(__pyx_k_writeInt), 0, 0, 1, 1},
  {&__pyx_n_s_writeReader, __pyx_k_writeReader, sizeof(__pyx_k_writeReader), 0, 0, 1, 1},
  {&__pyx_n_s_writeShort, __pyx_k_writeShort, sizeof(__pyx_k_writeShort), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {&__pyx_n_s_zlib, __pyx_k_zlib, sizeof(__pyx_k_zlib), 0, 0, 1, 1},
  {&__pyx_n_s_zlibdata, __pyx_k_zlibdata, sizeof(__pyx_k_zlibdata), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_property = __Pyx_GetBuiltinName(__pyx_n_s_property); if (!__pyx_builtin_property) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  __pyx_builtin_sorted = __Pyx_GetBuiltinName(__pyx_n_s_sorted); if (!__pyx_builtin_sorted) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":377
 *         cdef bint old = self.settings.get('old', False)
 *         if old:
 *             raise NotImplementedError('not supported')             # <<<<<<<<<<<<<<
 * 
 *         cdef bint debug = self.settings.get('debug', False)
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_not_supported); if (unlikely(!__pyx_tuple_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":430
 *         self.actionY = newReader.readShort()
 *         if old:
 *             self.transparent = (0, 0, 0)             # <<<<<<<<<<<<<<
 *         else:
 *             self.transparent = newReader.readColor()
 */
  __pyx_tuple__2 = PyTuple_Pack(3, __pyx_int_0, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":455
 *         newReader.writeShort(self.actionX)
 *         newReader.writeShort(self.actionY)
 *         newReader.writeColor(self.transparent or (0, 0, 0))             # <<<<<<<<<<<<<<
 *         newReader.writeReader(self.rawImage)
 *         reader.writeInt(self.handle)
 */
  __pyx_tuple__4 = PyTuple_Pack(3, __pyx_int_0, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":331
 *     # return data
 * 
 * IMAGE_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'RLE',
 *     'RLEW',
 */
  __pyx_tuple__5 = PyTuple_Pack(7, __pyx_n_s_RLE, __pyx_n_s_RLEW, __pyx_n_s_RLET, __pyx_n_s_LZX, __pyx_n_s_Alpha, __pyx_n_s_ACE, __pyx_n_s_Mac); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initimagebank(void); /*proto*/
PyMODINIT_FUNC initimagebank(void)
#else
PyMODINIT_FUNC PyInit_imagebank(void); /*proto*/
PyMODINIT_FUNC PyInit_imagebank(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_imagebank(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("imagebank", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_mmfparser__data__chunkloaders__imagebank) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "mmfparser.data.chunkloaders.imagebank")) {
      if (unlikely(PyDict_SetItemString(modules, "mmfparser.data.chunkloaders.imagebank", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)Py_None); Py_INCREF(Py_None);
  __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_sixteen_point = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)Py_None); Py_INCREF(Py_None);
  __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_fifteen_point = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)Py_None); Py_INCREF(Py_None);
  __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_index_point = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *)Py_None); Py_INCREF(Py_None);
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_ptype_9mmfparser_6loader_DataLoader = __Pyx_ImportType("mmfparser.loader", "DataLoader", sizeof(struct __pyx_obj_9mmfparser_6loader_DataLoader), 1); if (unlikely(!__pyx_ptype_9mmfparser_6loader_DataLoader)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_9mmfparser_6loader_DataLoader = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__Pyx_GetVtable(__pyx_ptype_9mmfparser_6loader_DataLoader->tp_dict); if (unlikely(!__pyx_vtabptr_9mmfparser_6loader_DataLoader)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_initialize;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.load = (PyObject *(*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageItem_load;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "ImageItem", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageItem;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint.read = (unsigned int (*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, char *, int))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9BasePoint_read;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "BasePoint", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_Point = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_Point;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_Point.__pyx_base = *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_Point.__pyx_base.read = (unsigned int (*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, char *, int))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_5Point_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_Point.write = (PyObject *(*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_Point *, PyObject *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_5Point_write;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point.tp_base = __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_Point) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Point", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_Point = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_Point;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint.__pyx_base = *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint.__pyx_base.read = (unsigned int (*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, char *, int))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint.write = (PyObject *(*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12SixteenPoint_write;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint.tp_base = __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "SixteenPoint", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint.__pyx_base = *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint.__pyx_base.read = (unsigned int (*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, char *, int))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint.write = (PyObject *(*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_12FifteenPoint_write;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint.tp_base = __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "FifteenPoint", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint.__pyx_base = *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint.__pyx_base.read = (unsigned int (*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *, char *, int))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint.write = (PyObject *(*)(struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *, PyObject *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_10IndexPoint_write;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint.tp_base = __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "IndexPoint", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9JavaImage_read;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "JavaImage", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_JavaImage;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank = &__pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_9imagebank_9ImageBank_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "ImageBank", (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank = &__pyx_type_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank;
  /*--- Type import code ---*/
  __pyx_ptype_9mmfparser_10bytereader_ByteReader = __Pyx_ImportType("mmfparser.bytereader", "ByteReader", sizeof(struct __pyx_obj_9mmfparser_10bytereader_ByteReader), 1); if (unlikely(!__pyx_ptype_9mmfparser_10bytereader_ByteReader)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_9mmfparser_10bytereader_ByteReader = (struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader*)__Pyx_GetVtable(__pyx_ptype_9mmfparser_10bytereader_ByteReader->tp_dict); if (unlikely(!__pyx_vtabptr_9mmfparser_10bytereader_ByteReader)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "mmfparser\data\chunkloaders\imagebank.pyx":20
 * cimport cython
 * 
 * import struct             # <<<<<<<<<<<<<<
 * import zlib
 * from cStringIO import StringIO
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_struct, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_struct, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":21
 * 
 * import struct
 * import zlib             # <<<<<<<<<<<<<<
 * from cStringIO import StringIO
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_zlib, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_zlib, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":22
 * import struct
 * import zlib
 * from cStringIO import StringIO             # <<<<<<<<<<<<<<
 * 
 * from mmfparser.bytereader cimport ByteReader
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_StringIO);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_StringIO);
  __Pyx_GIVEREF(__pyx_n_s_StringIO);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cStringIO, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_StringIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_StringIO, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":25
 * 
 * from mmfparser.bytereader cimport ByteReader
 * from mmfparser.data import zlibdata             # <<<<<<<<<<<<<<
 * from mmfparser.data import onepointfive
 * from mmfparser.loader cimport DataLoader
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_zlibdata);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_zlibdata);
  __Pyx_GIVEREF(__pyx_n_s_zlibdata);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_mmfparser_data, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_zlibdata); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_zlibdata, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":26
 * from mmfparser.bytereader cimport ByteReader
 * from mmfparser.data import zlibdata
 * from mmfparser.data import onepointfive             # <<<<<<<<<<<<<<
 * from mmfparser.loader cimport DataLoader
 * from mmfparser.data.chunkloaders.appheader import graphicModes
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_onepointfive);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_onepointfive);
  __Pyx_GIVEREF(__pyx_n_s_onepointfive);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_data, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_onepointfive); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_onepointfive, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":28
 * from mmfparser.data import onepointfive
 * from mmfparser.loader cimport DataLoader
 * from mmfparser.data.chunkloaders.appheader import graphicModes             # <<<<<<<<<<<<<<
 * from mmfparser.common cimport allocate_memory
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_graphicModes);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_graphicModes);
  __Pyx_GIVEREF(__pyx_n_s_graphicModes);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_mmfparser_data_chunkloaders_apph, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_graphicModes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_graphicModes, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":31
 * from mmfparser.common cimport allocate_memory
 * 
 * from mmfparser.bitdict import BitDict             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "math.h":
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_BitDict);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_BitDict);
  __Pyx_GIVEREF(__pyx_n_s_BitDict);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_bitdict, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BitDict, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":36
 *     double ceil(double ceil)
 * 
 * cdef int POINT_MODE = 4 # 16 million colors             # <<<<<<<<<<<<<<
 * cdef int FIFTEENPOINT_MODE = 6  # 32768 colors
 * 
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_POINT_MODE = 4;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":37
 * 
 * cdef int POINT_MODE = 4 # 16 million colors
 * cdef int FIFTEENPOINT_MODE = 6  # 32768 colors             # <<<<<<<<<<<<<<
 * 
 * cdef class ImageItem
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_FIFTEENPOINT_MODE = 6;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":124
 *         reader.writeByte(item[0], True)
 * 
 * cdef BasePoint point_instance = Point()             # <<<<<<<<<<<<<<
 * 
 * cdef class SixteenPoint(BasePoint):
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_Point)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XGOTREF(((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance));
  __Pyx_DECREF_SET(__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_point_instance, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_t_2));
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":152
 *         return r | g | b
 * 
 * cdef BasePoint sixteen_point = SixteenPoint()             # <<<<<<<<<<<<<<
 * 
 * cdef class FifteenPoint(BasePoint):
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_SixteenPoint)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XGOTREF(((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_sixteen_point));
  __Pyx_DECREF_SET(__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_sixteen_point, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_t_2));
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":181
 *         return r | g | b
 * 
 * cdef BasePoint fifteen_point = FifteenPoint()             # <<<<<<<<<<<<<<
 * 
 * cdef class IndexPoint(BasePoint):
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_FifteenPoint)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XGOTREF(((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_fifteen_point));
  __Pyx_DECREF_SET(__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_fifteen_point, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_BasePoint *)__pyx_t_2));
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":193
 *         reader.writeByte(point, True)
 * 
 * cdef IndexPoint index_point = IndexPoint()             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple read_rgb(char * data, int width, int height, BasePoint pointClass):
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XGOTREF(((PyObject *)__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_index_point));
  __Pyx_DECREF_SET(__pyx_v_9mmfparser_4data_12chunkloaders_9imagebank_index_point, ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_9imagebank_IndexPoint *)__pyx_t_2));
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":331
 *     # return data
 * 
 * IMAGE_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'RLE',
 *     'RLEW',
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_BitDict); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IMAGE_FLAGS, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":541
 * 
 *     @property
 *     def items(self):             # <<<<<<<<<<<<<<
 *         return self.itemDict.values()
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank, __pyx_n_s_items); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":540
 *         dict itemDict
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def items(self):
 *         return self.itemDict.values()
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank->tp_dict, __pyx_n_s_items, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_9mmfparser_4data_12chunkloaders_9imagebank_ImageBank);

  /* "mmfparser\data\chunkloaders\imagebank.pyx":606
 *         return self.itemDict[handle]
 * 
 * from mmfparser.data.mfaloaders.imagebank import AGMIBank             # <<<<<<<<<<<<<<
 * 
 * __all__ = ['ImageBank', 'JavaImage', 'ImageItem']
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_AGMIBank);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_AGMIBank);
  __Pyx_GIVEREF(__pyx_n_s_AGMIBank);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_data_mfaloaders_imageb, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_AGMIBank); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AGMIBank, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":608
 * from mmfparser.data.mfaloaders.imagebank import AGMIBank
 * 
 * __all__ = ['ImageBank', 'JavaImage', 'ImageItem']             # <<<<<<<<<<<<<<
 */
  __pyx_t_2 = PyList_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_ImageBank);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_ImageBank);
  __Pyx_GIVEREF(__pyx_n_s_ImageBank);
  __Pyx_INCREF(__pyx_n_s_JavaImage);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_JavaImage);
  __Pyx_GIVEREF(__pyx_n_s_JavaImage);
  __Pyx_INCREF(__pyx_n_s_ImageItem);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_ImageItem);
  __Pyx_GIVEREF(__pyx_n_s_ImageItem);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_all, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\data\chunkloaders\imagebank.pyx":1
 * # Copyright (c) Mathias Kaerlev 2012.             # <<<<<<<<<<<<<<
 * 
 * # This file is part of Anaconda.
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser\common.pxd":23
 *     int Py_REFCNT(object v)
 * 
 * cdef inline object allocate_memory(int size, char ** i):             # <<<<<<<<<<<<<<
 *     if size < 0:
 *         size = 0
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init mmfparser.data.chunkloaders.imagebank", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init mmfparser.data.chunkloaders.imagebank");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    } else {
        if (default_value == Py_None)
            default_value = NULL;
        value = PyObject_CallMethodObjArgs(
            d, __pyx_n_s_get, key, default_value, NULL);
    }
#endif
    return value;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(tmp_type, tmp_value, tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
#else
    PyErr_GetExcInfo(type, value, tb);
#endif
}
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(type, value, tb);
#endif
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

static CYTHON_INLINE PyObject* __Pyx_PyDict_Values(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_PyObject_CallMethod1((PyObject*)&PyDict_Type, __pyx_n_s_values, d);
    else
        return PyDict_Values(d);
}

static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_PyObject_CallMethod1((PyObject*)&PyDict_Type, __pyx_n_s_keys, d);
    else
        return PyDict_Keys(d);
}

static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_short(short value) {
    const short neg_one = (short) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(short) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(short) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(short) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(short) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(short) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(short),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE short __Pyx_PyInt_As_short(PyObject *x) {
    const short neg_one = (short) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(short) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(short, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (short) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(short, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(short) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(short, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(short) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(short, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(short,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(short, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(short) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(short, long, PyLong_AsLong(x))
            } else if (sizeof(short) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(short, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            short val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (short) -1;
        }
    } else {
        short val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (short) -1;
        val = __Pyx_PyInt_As_short(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to short");
    return (short) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to short");
    return (short) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_char(char value) {
    const char neg_one = (char) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(char) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(char) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(char) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(char) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(char) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(char),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *x) {
    const char neg_one = (char) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(char) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(char, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (char) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(char, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(char) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(char, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(char) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(char, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(char,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(char, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(char) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(char, long, PyLong_AsLong(x))
            } else if (sizeof(char) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(char, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            char val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (char) -1;
        }
    } else {
        char val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (char) -1;
        val = __Pyx_PyInt_As_char(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to char");
    return (char) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to char");
    return (char) -1;
}

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(unsigned int, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(unsigned int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_char(unsigned char value) {
    const unsigned char neg_one = (unsigned char) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned char) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned char) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned char) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(unsigned char) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned char) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned char),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
