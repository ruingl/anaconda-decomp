float2 vec2(float x0, float x1)
{
    return float2(x0, x1);
}
// Varyings
static  float2 _texture_coordinate0 = {0, 0};
static  float2 _texture_coordinate1 = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform sampler2D _background_texture : register(s0);
uniform float _fA : register(c3);
uniform float _fX : register(c4);
uniform float _fY : register(c5);
uniform sampler2D _texture : register(s1);
uniform float2 _texture_size : register(c6);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
;
;
;
;
float4 _get_iteration(in float2 _offset)
{
{
return gl_texture2D(_background_texture, max(float2(0.0, 0.0), min(float2(1.0, 1.0), (_texture_coordinate1 + ((vec2(_fX, _fY) * _texture_size) * _offset)))));
;
}
}
;
void gl_main()
{
{
float4 _back = gl_texture2D(_background_texture, _texture_coordinate1);
float4 _fore = gl_texture2D(_texture, _texture_coordinate0);
(_back += _get_iteration(float2(-0.32621199, -0.40580499)));
(_back += _get_iteration(float2(-0.84014398, -0.073579997)));
(_back += _get_iteration(float2(-0.69591397, 0.45713699)));
(_back += _get_iteration(float2(-0.203345, 0.62071598)));
(_back += _get_iteration(float2(0.96234, -0.19498301)));
(_back += _get_iteration(float2(0.473434, -0.48002601)));
(_back += _get_iteration(float2(0.51945603, 0.76702201)));
(_back += _get_iteration(float2(0.185461, -0.89312398)));
(_back += _get_iteration(float2(0.50743097, 0.064424999)));
(_back += _get_iteration(float2(0.89642, 0.412458)));
(_back += _get_iteration(float2(-0.32194, -0.93261498)));
(_back += _get_iteration(float2(-0.79155898, -0.59770501)));
(_back /= 13.0);
(_back += ((gl_texture2D(_background_texture, _texture_coordinate1) - _back) * (1.0 - _fore.w)));
(_back.xyz += (((_fore.xyz - _back.xyz) * _fore.w) * _fA));
(_back.w += _fore.w);
(gl_Color[0] = _back);
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate0 : TEXCOORD0;
    float2 _texture_coordinate1 : TEXCOORD1;
    float4 _blend_color : TEXCOORD2;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate0 = data._texture_coordinate0;
    _texture_coordinate1 = data._texture_coordinate1;
    gl_main();
    return gl_Color[0];
}
