float2 vec2(float x0, float x1)
{
    return float2(x0, x1);
}
// Varyings
static  float4 _blend_color = {0, 0, 0, 0};
static  float2 _texture_coordinate = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform float _fAmplitudeX : register(c3);
uniform float _fAmplitudeY : register(c4);
uniform float _fBlur : register(c5);
uniform float _fFreqX : register(c6);
uniform float _fFreqY : register(c7);
uniform float _fPeriodsX : register(c8);
uniform float _fPeriodsY : register(c9);
uniform sampler2D _texture : register(s0);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
;
;
;
;
;
;
;
void gl_main()
{
{
float2 _i = _texture_coordinate;
(_i.y = (_i.y + (sin(((_i.x + _fFreqX) * _fPeriodsX)) * _fAmplitudeX)));
(_i.x = (_i.x + (sin(((_i.y + _fFreqY) * _fPeriodsY)) * _fAmplitudeY)));
float4 _texTL = {0, 0, 0, 0};
float4 _texBL = {0, 0, 0, 0};
float4 _texBR = {0, 0, 0, 0};
float4 _texTR = {0, 0, 0, 0};
(_texTL = gl_texture2D(_texture, vec2((_i.x - _fBlur), (_i.y - _fBlur))));
(_texBL = gl_texture2D(_texture, vec2((_i.x - _fBlur), (_i.y + _fBlur))));
(_texBR = gl_texture2D(_texture, vec2((_i.x + _fBlur), (_i.y + _fBlur))));
(_texTR = gl_texture2D(_texture, vec2((_i.x + _fBlur), (_i.y - _fBlur))));
float4 _col = gl_texture2D(_texture, _i);
(_col = (((((_col + _texTL) + _texBL) + _texBR) + _texTR) / 5.0));
(gl_Color[0] = (_col * _blend_color));
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate : TEXCOORD0;
    float4 _blend_color : TEXCOORD1;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate = data._texture_coordinate;
    _blend_color = data._blend_color;
    gl_main();
    return gl_Color[0];
}
