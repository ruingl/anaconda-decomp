// Varyings
static  float2 _texture_coordinate = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform float _fAmplitude : register(c3);
uniform float _fOffset : register(c4);
uniform float _fPeriods : register(c5);
uniform sampler2D _texture : register(s0);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
;
;
void gl_main()
{
{
float4 _c = gl_texture2D(_texture, _texture_coordinate);
(_c.xyz += (sin(((_texture_coordinate.y * _fPeriods) - _fOffset)) * _fAmplitude));
(gl_Color[0] = _c);
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate : TEXCOORD0;
    float4 _blend_color : TEXCOORD1;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate = data._texture_coordinate;
    gl_main();
    return gl_Color[0];
}
