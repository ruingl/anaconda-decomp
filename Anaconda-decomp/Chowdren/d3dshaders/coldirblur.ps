float2 vec2(float x0, float x1)
{
    return float2(x0, x1);
}
float3 vec3(float x0, float x1, float x2)
{
    return float3(x0, x1, x2);
}
// Varyings
static  float4 _blend_color = {0, 0, 0, 0};
static  float2 _texture_coordinate0 = {0, 0};
static  float2 _texture_coordinate1 = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform sampler2D _background_texture : register(s0);
uniform float _bb : register(c3);
uniform float _bg : register(c4);
uniform float _br : register(c5);
uniform float _fAngle : register(c6);
uniform float _fCoeff : register(c7);
uniform float _gb : register(c8);
uniform float _gg : register(c9);
uniform float _gr : register(c10);
uniform float _rb : register(c11);
uniform float _rg : register(c12);
uniform float _rr : register(c13);
uniform sampler2D _texture : register(s1);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
;
;
;
void gl_main()
{
{
float2 _v = (vec2(cos((_fAngle * 0.017449999)), sin((_fAngle * 0.017449999))) * _fCoeff);
float2 _v2 = (vec2(cos(((_fAngle + 90.0) * 0.017449999)), sin(((_fAngle + 90.0) * 0.017449999))) * _fCoeff);
float2 _In = _texture_coordinate0;
float4 _a = gl_texture2D(_texture, _In);
(_a += gl_texture2D(_texture, (_In + (0.33000001 * _v))));
(_a += gl_texture2D(_texture, (_In - (0.33000001 * _v))));
(_a += gl_texture2D(_texture, (_In + (0.66000003 * _v))));
(_a += gl_texture2D(_texture, (_In - (0.66000003 * _v))));
(_a += gl_texture2D(_texture, (_In + _v)));
(_a += gl_texture2D(_texture, (_In - _v)));
(_a += gl_texture2D(_texture, (_In + (0.33000001 * _v2))));
(_a += gl_texture2D(_texture, (_In - (0.33000001 * _v2))));
(_a += gl_texture2D(_texture, (_In + (0.66000003 * _v2))));
(_a += gl_texture2D(_texture, (_In - (0.66000003 * _v2))));
(_a += gl_texture2D(_texture, (_In + _v2)));
(_a += gl_texture2D(_texture, (_In - _v2)));
(_a /= 13.0);
(_a *= _blend_color);
float4 _i = gl_texture2D(_background_texture, _texture_coordinate1);
float4 _o = float4(1.0, 1.0, 1.0, 1.0);
(_o.xyz = (((vec3(_rr, _rg, _rb) * _i.x) + (vec3(_gr, _gg, _gb) * _i.y)) + (vec3(_br, _bg, _bb) * _i.z)));
(_o.xyz = (_i.xyz + ((_o.xyz - _i.xyz) * _a.xyz)));
(gl_Color[0] = _o);
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate0 : TEXCOORD0;
    float2 _texture_coordinate1 : TEXCOORD1;
    float4 _blend_color : TEXCOORD2;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate0 = data._texture_coordinate0;
    _texture_coordinate1 = data._texture_coordinate1;
    _blend_color = data._blend_color;
    gl_main();
    return gl_Color[0];
}
