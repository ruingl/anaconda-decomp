float2 vec2(float x0, float x1)
{
    return float2(x0, x1);
}
// Varyings
static  float2 _texture_coordinate0 = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform float _alpha : register(c3);
uniform float _height : register(c4);
uniform sampler2D _pattern : register(s0);
uniform float2 _texture_size : register(c5);
uniform float _width : register(c6);
uniform float _x : register(c7);
uniform float _y : register(c8);

float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

float2 mod(float2 x, float y)
{
    return x - y * floor(x / y);
}

;
;
;
;
;
void gl_main()
{
{
float2 _In = _texture_coordinate0;
(_In /= _texture_size);
(_In += vec2(_x, _y));
(_In /= vec2(_width, _height));
float4 _p = (gl_texture2D(_pattern, mod(_In, 1.0)) * _alpha);
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate0 : TEXCOORD0;
    float2 _texture_coordinate1 : TEXCOORD1;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate0 = data._texture_coordinate0;
    gl_main();
    return gl_Color[0];
}
