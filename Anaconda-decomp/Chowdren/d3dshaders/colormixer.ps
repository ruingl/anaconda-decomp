// Varyings
static  float _alpha = {0};
static  float2 _texture_coordinate = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform float4 _b : register(c3);
uniform float4 _g : register(c4);
uniform float4 _r : register(c5);
uniform sampler2D _texture : register(s0);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
;
void gl_main()
{
{
float4 _i = gl_texture2D(_texture, _texture_coordinate);
float4 _col = {0, 0, 0, 0};
(_col.w = (_i.w * _alpha));
(_col.xyz = (((_r.xyz * _i.x) + (_g.xyz * _i.y)) + (_b.xyz * _i.z)));
(gl_Color[0] = _col);
}
}
;
struct VS_OUTPUT
{
    float _alpha : TEXCOORD0;
    float2 _texture_coordinate : TEXCOORD1;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _alpha = data._alpha;
    _texture_coordinate = data._texture_coordinate;
    gl_main();
    return gl_Color[0];
}
