float3 vec3(float x0)
{
    return float3(x0, x0, x0);
}
// Varyings
static  float4 _blend_color = {0, 0, 0, 0};
static  float2 _texture_coordinate = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform sampler2D _texture : register(s0);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
void gl_main()
{
{
float4 _col = gl_texture2D(_texture, _texture_coordinate);
(_col *= float4(0.29899999, 0.58700001, 0.114, 1.0));
(_col.xyz = vec3(((_col.x + _col.y) + _col.z)));
(gl_Color[0] = (_col * _blend_color));
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate : TEXCOORD0;
    float4 _blend_color : TEXCOORD1;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate = data._texture_coordinate;
    _blend_color = data._blend_color;
    gl_main();
    return gl_Color[0];
}
