float2 vec2(float x0, float x1)
{
    return float2(x0, x1);
}
// Varyings
static  float2 _texture_coordinate0 = {0, 0};
static  float2 _texture_coordinate1 = {0, 0};

static float4 gl_Color[1] =
{
    float4(0, 0, 0, 0)
};


uniform sampler2D _background_texture : register(s0);
uniform float _height : register(c3);
uniform sampler2D _texture : register(s1);
uniform float2 _texture_size : register(c4);
uniform float _width : register(c5);

#define GL_USES_FRAG_COLOR
float4 gl_texture2D(sampler2D s, float2 t)
{
    return tex2D(s, float2(t.x, t.y));

}

;
;
;
;
;
;
;
void gl_main()
{
{
float4 _shift = gl_texture2D(_texture, _texture_coordinate0);
float2 _off = vec2((_width * _texture_size.x), (_height * _texture_size.y));
(_off.x *= (2.0 * (_shift.x - 0.5)));
(_off.y *= (2.0 * (_shift.y - 0.5)));
(gl_Color[0] = gl_texture2D(_background_texture, (_texture_coordinate1 + _off)));
}
}
;
struct VS_OUTPUT
{
    float2 _texture_coordinate0 : TEXCOORD0;
    float2 _texture_coordinate1 : TEXCOORD1;
    float4 position : POSITION;
};

float4 main(VS_OUTPUT data) : COLOR0
{
    _texture_coordinate0 = data._texture_coordinate0;
    _texture_coordinate1 = data._texture_coordinate1;
    gl_main();
    return gl_Color[0];
}
